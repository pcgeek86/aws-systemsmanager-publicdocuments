{
  "AttachmentsContent": [],
  "Content": "{\n  \"schemaVersion\": \"2.2\",\n  \"description\": \"Run a single InSpec test or an InSpec profile on a group of managed instances.\",\n  \"parameters\": {\n    \"sourceType\": {\n      \"description\": \"(Required) Specify the source type.\",\n      \"type\": \"String\",\n      \"allowedValues\": [\n        \"GitHub\",\n        \"S3\"\n      ]\n    },\n    \"sourceInfo\": {\n      \"description\": \"(Required) Specify the information required to access the resource from the source. If source type is GitHub, then you can specify any of the following: 'owner', 'repository', 'path', 'getOptions', 'tokenInfo'. If source type is S3, then you can specify 'path'. Example github parameters: {\\\"owner\\\":\\\"awslabs\\\",\\\"repository\\\":\\\"amazon-ssm\\\",\\\"path\\\":\\\"Compliance/InSpec/PortCheck\\\",\\\"getOptions\\\":\\\"branch:master\\\"}\",\n      \"type\": \"StringMap\",\n      \"displayType\": \"textarea\",\n      \"default\": {}\n    }\n  },\n  \"mainSteps\": [\n    {\n      \"action\": \"aws:downloadContent\",\n      \"name\": \"downloadContent\",\n      \"inputs\": {\n        \"sourceType\": \"{{ sourceType }}\",\n        \"sourceInfo\": \"{{ sourceInfo }}\"\n      }\n    },\n    {\n      \"precondition\": {\n        \"StringEquals\": [\n          \"platformType\",\n          \"Linux\"\n        ]\n      },\n      \"action\": \"aws:runShellScript\",\n      \"name\": \"runInSpecLinux\",\n      \"inputs\": {\n        \"runCommand\": [\n          \"#!/bin/bash\",\n          \"if ! which curl &> /dev/null; then\",\n          \"    echo 'curl is missing from the instance! Exiting.'\",\n          \"    exit 1\",\n          \"fi\",\n          \"TOKEN=`curl -sS -X PUT \\\"http://169.254.169.254/latest/api/token\\\" -H \\\"X-aws-ec2-metadata-token-ttl-seconds: 21600\\\"`\",\n          \"region=`curl -sS -H \\\"X-aws-ec2-metadata-token: $TOKEN\\\" -v http://169.254.169.254/latest/meta-data/placement/availability-zone | sed 's/\\\\(.*\\\\)[a-z]/\\\\1/'`\",\n          \"complianceFile='Report-Compliance-20200225'\",\n          \"scriptFile='AWS-RunInspecChecks-20201211.sh'\",\n          \"if [[ $region == cn-* ]] ; then\",\n          \"    s3Prefix='https://s3.'\",\n          \"    s3Suffix='.cn'\",\n          \"elif [[ $region == us-gov* ]] ; then\",\n          \"    s3Prefix='https://s3-fips-'\",\n          \"    s3Suffix=''\",\n          \"else\",\n          \"    s3Prefix='https://s3.dualstack.'\",\n          \"    s3Suffix=''\",\n          \"fi\",\n          \"curl -sS ${s3Prefix}${region}.amazonaws.com${s3Suffix}/aws-ssm-${region}/statemanagerdocumentspayload/AWS-RunInspecChecks/${complianceFile} -o ${complianceFile}\",\n          \"if [ $? -ne 0 ] ; then\",\n          \"    echo 'Failed to download inspec compliance file from S3. Exiting.'\",\n          \"    exit 1\",\n          \"fi\",\n          \"curl -sS ${s3Prefix}${region}.amazonaws.com${s3Suffix}/aws-ssm-${region}/statemanagerdocumentspayload/AWS-RunInspecChecks/${scriptFile} -o ${scriptFile}\",\n          \"if [ $? -ne 0 ] ; then\",\n          \"    echo 'Failed to download inspec script file from S3. Exiting.'\",\n          \"    exit 1\",\n          \"fi\",\n          \"bash ./${scriptFile}\",\n          \"if [ $? -ne 0 ] ; then\",\n          \"    echo 'Failed to run Inspec checks. Exiting.'\",\n          \"    exit 1\",\n          \"fi\"\n        ]\n      }\n    },\n    {\n      \"precondition\": {\n        \"StringEquals\": [\n          \"platformType\",\n          \"Windows\"\n        ]\n      },\n      \"action\": \"aws:runPowerShellScript\",\n      \"name\": \"runInSpecWindows\",\n      \"inputs\": {\n        \"runCommand\": [\n          \"$s3FilePath = 'statemanagerdocumentspayload/AWS-RunInspecChecks/'\",\n          \"$s3ComplianceFile = 'Report-Compliance-20200225'\",\n          \"$s3ScriptFile = 'AWS-RunInspecChecks-20201211.ps1'\",\n          \"$scriptLocalPath = $s3ScriptFile\",\n          \"$curDirectory = Convert-Path .\",\n          \"$env:PATH += \\\";$curDirectory\\\"\",\n          \"\",\n          \"function GetS3DownloadUrl ([string]$appPath, [string]$fileVersion) {\",\n          \"    $region = $env:AWS_SSM_REGION_NAME\",\n          \"\",\n          \"    if ($region.StartsWith('cn-')) {\",\n          \"        # China endpoint\",\n          \"        $s3PrefixUrl = 'https://s3.{0}.amazonaws.com.cn/aws-ssm-{0}/'\",\n          \"    } elseif ($region.StartsWith('us-gov')) {\",\n          \"        # GovCloud endpoint\",\n          \"        $s3PrefixUrl = 'https://s3-fips-{0}.amazonaws.com/aws-ssm-{0}/'\",\n          \"    } else {\",\n          \"        # Public AWS endpoint\",\n          \"        $s3PrefixUrl = 'https://s3.dualstack.{0}.amazonaws.com/aws-ssm-{0}/'\",\n          \"    }\",\n          \"\",\n          \"    $s3Location = ($s3PrefixUrl + $appPath + $fileVersion) -f $region\",\n          \"    $s3Location\",\n          \"}\",\n          \"\",\n          \"$s3Location = GetS3DownloadUrl $s3FilePath $s3ComplianceFile\",\n          \"Start-BitsTransfer -Source $s3Location -Destination $s3ComplianceFile\",\n          \"$s3Location = GetS3DownloadUrl $s3FilePath $s3ScriptFile\",\n          \"Start-BitsTransfer -Source $s3Location -Destination $scriptLocalPath\",\n          \"\",\n          \"iex $scriptLocalPath\",\n          \"if ($?) {\",\n          \"    exit $LASTEXITCODE\",\n          \"} else {\",\n          \"    exit 255\",\n          \"}\"\n        ]\n      }\n    }\n  ]\n}\n",
  "CreatedDate": "2021-05-25T17:39:08.094Z",
  "DisplayName": null,
  "DocumentFormat": {
    "Value": "JSON"
  },
  "DocumentType": {
    "Value": "Command"
  },
  "DocumentVersion": "1",
  "Name": "AWS-RunInspecChecks",
  "Requires": [],
  "ReviewStatus": null,
  "Status": {
    "Value": "Active"
  },
  "StatusInformation": null,
  "VersionName": null,
  "ResponseMetadata": {
    "RequestId": "27f40bed-6d9b-44b6-8bd8-9a0dcb133000",
    "Metadata": {},
    "ChecksumAlgorithm": 0,
    "ChecksumValidationStatus": 0
  },
  "ContentLength": 5645,
  "HttpStatusCode": 200,
  "LoggedAt": "2023-03-10T07:12:12.0087799+00:00"
}
