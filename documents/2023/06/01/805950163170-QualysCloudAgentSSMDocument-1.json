{
  "AttachmentsContent": [],
  "Content": "{\n  \"schemaVersion\" : \"2.2\",\n  \"description\" : \"Manage Qualys Cloud Agent on EC2 instances\",\n  \"parameters\" : {\n    \"UserName\" : {\n      \"default\" : \"\",\n      \"description\" : \"Qualys username\",\n      \"type\" : \"String\"\n    },\n    \"WebServiceUri\" : {\n      \"description\" : \"Enter WebServiceUri in format of <Cloud Agent Server URL>/CloudAgent/, Cloud Agent Server URL can be found at https://www.qualys.com/platform-identification/\",\n      \"type\" : \"String\"\n    },\n    \"QualysAPIUri\" : {\n      \"default\" : \"\",\n      \"description\" : \"Qualys API Server URL\",\n      \"type\" : \"String\"\n    },\n    \"ActivationID\" : {\n      \"description\" : \"(Required) Enter ActivationID obtained from Qualys CP (do not include {})\",\n      \"type\" : \"String\"\n    },\n    \"CustomerID\" : {\n      \"description\" : \"(Required) Enter CustomerID as displayed in your account (do not include {})\",\n      \"type\" : \"String\"\n    },\n    \"LogLevel\" : {\n      \"allowedValues\" : [ \"0\", \"1\", \"2\", \"3\", \"4\", \"5\" ],\n      \"default\" : \"0\",\n      \"description\" : \"(Optional)  A higher value corresponds to more verbosity. Default is to report only errors (0) \",\n      \"type\" : \"String\"\n    },\n    \"Password\" : {\n      \"default\" : \"\",\n      \"description\" : \"Qualys Password\",\n      \"type\" : \"String\"\n    }\n  },\n  \"mainSteps\" : [ {\n    \"inputs\" : {\n      \"timeoutSeconds\" : 600,\n      \"runCommand\" : [ \"#!/bin/bash\", \"#set -eux\", \"#Check Whether the Qualys Cloud Agent is already installed\", \"apiendpoint=\\\"/qps/rest/1.0/download/ca/downloadbinary/\\\"\", \"INSTALLER_FILE_URL=\\\"{{ QualysAPIUri }}${apiendpoint}\\\"\", \"status=$( sudo service qualys-cloud-agent status | grep Active )\", \"if [[ -z \\\"$status\\\" ]];\", \"then\", \"     # Check whether the OS is Debian or RPM based Linux and set the download location\", \"     os=$( grep -Ei 'debian|ubuntu|mint' /etc/*release )\", \"     architecture=$(uname -m)\", \"     if [[ -n \\\"$os\\\" || -f \\\"/etc/debian_version\\\" ]];\", \"     then\", \"         opersys=\\\"deb\\\"\", \"         if [[ $architecture == *\\\"aarch\\\"* ]]\", \"         then\", \"             echo '<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\", \"                    <ServiceRequest>\", \"                     <data>\", \"                     <DownloadBinary>\", \"                     <platform>LINUX_UBUNTU</platform>\", \"                     <architecture>ARM_64</architecture>\", \"                     </DownloadBinary>\", \"                     </data>\", \"                    </ServiceRequest>' > download_binary.xml \", \"          else\", \"             echo '<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\", \"                    <ServiceRequest>\", \"                     <data>\", \"                     <DownloadBinary>\", \"                     <platform>LINUX_UBUNTU</platform>\", \"                     <architecture>X_64</architecture>\", \"                     </DownloadBinary>\", \"                     </data>\", \"                    </ServiceRequest>' > download_binary.xml \", \"         fi\", \"     else\", \"         opersys=\\\"rpm\\\"\", \"         if [[ $architecture == *\\\"aarch\\\"* ]]\", \"         then\", \"             echo '<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\", \"                   <ServiceRequest>\", \"                    <data>\", \"                    <DownloadBinary>\", \"                    <platform>LINUX</platform>\", \"                    <architecture>ARM_64</architecture>\", \"                    </DownloadBinary>\", \"                    </data>\", \"                   </ServiceRequest>' > download_binary.xml  \", \"        else\", \"             echo '<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\", \"                   <ServiceRequest>\", \"                    <data>\", \"                    <DownloadBinary>\", \"                    <platform>LINUX</platform>\", \"                    <architecture>X_64</architecture>\", \"                    </DownloadBinary>\", \"                    </data>\", \"                   </ServiceRequest>' > download_binary.xml  \", \"       fi\", \"     fi\", \"     Downloadfile()\", \"     {\", \"         if hash curl 2>/dev/null\", \"         then\", \"           curl -u '{{ UserName }}':'{{ Password }}' -X POST -H \\\"Content-Type: text/xml\\\" -H \\\"X-Requested-With: curl\\\" --data-binary @download_binary.xml ${INSTALLER_FILE_URL} --remote-name --remote-header-name\", \"         else\", \"           cred=$(echo -n '{{ UserName }}':'{{ Password }}' | base64)\", \"           wget --method POST --header 'Content-Type: text/xml' --header \\\"Authorization: Basic '$cred'\\\" --body-file download_binary.xml  \\\"${INSTALLER_FILE_URL}\\\" -o QualysCloudAgent.$opersys\", \"         fi\", \"         if [[ $? != 0 ]];\", \"         then\", \"             echo \\\"Failed to download installer from ${INSTALLER_FILE_URL}\\\"\", \"             exit 3\", \"         fi\", \"     }\", \"     # Checks whether agent location is a FQDN or full path and invoke download or copy function \", \"     if [[ -n \\\"$INSTALLER_FILE_URL\\\" ]]; \", \"     then\", \"                 Downloadfile\", \"     else\", \"         echo \\\"No installation path specified for Qualys Cloud Agent\\\"\", \"             exit 4\", \"     fi\", \"     if [ \\\"$opersys\\\" = \\\"rpm\\\" ];\", \"     then\", \"                 sleep 5\", \"                 sudo rpm -ivh QualysCloudAgent.rpm\", \"                 sleep 5\", \"                 sudo /usr/local/qualys/cloud-agent/bin/qualys-cloud-agent.sh LogLevel={{ LogLevel }} ActivationId={{ ActivationID }} CustomerId={{ CustomerID }} ServerUri={{ WebServiceUri }}\", \"     else\", \"         sudo dpkg --install QualysCloudAgent.deb\", \"         sleep 5\", \"         sudo /usr/local/qualys/cloud-agent/bin/qualys-cloud-agent.sh LogLevel={{ LogLevel }} ActivationId={{ ActivationID }} CustomerId={{ CustomerID }} ServerUri={{ WebServiceUri }}\", \"     fi\", \"else\", \"echo \\\"QualysCloudAgent is already installed on this and running\\\"\", \"fi\" ],\n      \"id\" : \"0.aws:runShellScript\"\n    },\n    \"name\" : \"InstallQualysCloudAgentOnLinux\",\n    \"action\" : \"aws:runShellScript\",\n    \"precondition\" : {\n      \"StringEquals\" : [ \"platformType\", \"Linux\" ]\n    }\n  }, {\n    \"inputs\" : {\n      \"timeoutSeconds\" : 600,\n      \"runCommand\" : [ \"function New-TemporaryDirectory {\", \"  $parent = [System.IO.Path]::GetTempPath()\", \"  [string] $name = [System.Guid]::NewGuid()\", \"  New-Item -ItemType Directory -Path (Join-Path $parent $name)\", \"}\", \"$tempdir = New-TemporaryDirectory\", \"Set-Location -Path $tempdir\", \"$apiendpoint='/qps/rest/1.0/download/ca/downloadbinary/'\", \"$installerUrl = '{{ QualysAPIUri }}'+($apiendpoint)\", \"$agentInstaller=\\\"QualysCloudAgent.exe\\\"\", \"$agentInstallerlog=Join-Path $tempdir $agentInstaller\", \"if (Get-Service \\\"QualysAgent\\\" -ErrorAction SilentlyContinue)\", \"{\", \"  Write-Host \\\"Qualys Cloud Agent is already installed, Exiting\\\"\", \"  exit 0\", \"}\", \"#Download the Qualys Cloud agent\", \"Function Download_file\", \"{\", \"     Try\", \"     {\", \"         $headers = New-Object \\\"System.Collections.Generic.Dictionary[[String],[String]]\\\"\", \"         $headers.Add(\\\"Content-Type\\\", \\\"text/xml\\\") \", \"         $pair=\\\"$('{{ UserName }}'):$('{{ Password }}')\\\"\", \"         $bytes=[System.Text.Encoding]::ASCII.GetBytes($pair)\", \"         $base64=[System.Convert]::ToBase64String($bytes)\", \"         $headers.Add(\\\"Authorization\\\", \\\"Basic $base64\\\")\", \"         $body = \\\"<?xml version=`\\\"1.0`\\\" encoding=`\\\"UTF-8`\\\"?>\", \"         `n<ServiceRequest>\", \"         `n <data>\", \"         `n <DownloadBinary>\", \"         `n <platform>WINDOWS</platform>\", \"         `n <architecture>X_86_64</architecture>\", \"         `n </DownloadBinary>\", \"         `n </data>\", \"         `n</ServiceRequest>\\\"\", \"         Invoke-WebRequest $installerUrl -Method 'POST' -Headers $headers -Body $body -OutFile $agentInstallerlog\", \"     }\", \"     Catch\", \"     {\", \"         Write-Host \\\"Error while downloading installer\\\"\", \"         Write-Host $_.Exception|format-list -force\", \"         exit 3\", \"     }\", \"}\", \"#Check whether agent location is a FQDN or full path and invoke download or copy function\", \"if ( $installerUrl.Substring(0,4) -eq 'http')\", \"{\", \"    Download_file\", \"}\", \"Else\", \"{\", \"    Copy-Item $agentInstallerlog \", \"}\", \"# Install the Qualys Cloud Agent\", \"$customerID = -join('{', '{{ CustomerID }}', '}')\", \"$activationID = -join('{', '{{ ActivationID }}', '}')\", \"Try\", \"{\", \"     & $agentInstallerlog CustomerId=\\\"$customerID\\\" ActivationId=\\\"$activationID\\\" WebServiceUri={{ WebServiceUri }}\", \"}\", \"Catch\", \"{\", \"     Write-Host \\\"Installation failed, exception raised during installation\\\"\", \"     Write-Host $_.Exception|format-list -force\", \"     exit 6\", \"}\" ],\n      \"id\" : \"0.aws:runPowerShellScript\"\n    },\n    \"name\" : \"InstallQualysCloudAgentOnWindows\",\n    \"action\" : \"aws:runPowerShellScript\",\n    \"precondition\" : {\n      \"StringEquals\" : [ \"platformType\", \"Windows\" ]\n    }\n  }, {\n    \"inputs\" : {\n      \"timeoutSeconds\" : 600,\n      \"runCommand\" : [ \"#!/bin/bash\", \"#set -eux\", \"#Check Whether the Qualys Cloud Agent is already installed\", \"apiendpoint=\\\"/qps/rest/1.0/download/ca/downloadbinary/\\\"\", \"INSTALLER_FILE_URL=\\\"{{ QualysAPIUri }}${apiendpoint}\\\"\", \"status=$(launchctl print system/com.qualys.cloud-agent | grep running)\", \"if [[ -z \\\"$status\\\" ]];\", \"then\", \"# Downloading the file to the /System/Volumes/Data/Applications \", \"     pth='/System/Volumes/Data/Applications'\", \"     echo '<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\", \"            <ServiceRequest>\", \"             <data>\", \"             <DownloadBinary>\", \"             <platform>MACOSX</platform>\", \"             <architecture>X_64</architecture>\", \"             </DownloadBinary>\", \"             </data>\", \"            </ServiceRequest>' > $pth/download_binary.xml \", \"     Downloadfile()\", \"     {\", \"         cd $pth\", \"         curl -u '{{ UserName }}':'{{ Password }}' -X POST -H \\\"Content-Type: text/xml\\\" -H \\\"X-Requested-With: curl\\\" --data-binary @download_binary.xml ${INSTALLER_FILE_URL} --remote-name --remote-header-name\", \"         if [[ $? != 0 ]];\", \"         then\", \"             echo \\\"Failed to download installer from ${INSTALLER_FILE_URL}\\\"\", \"             exit 3\", \"         fi\", \"     }\", \"     # Checks whether agent location is a FQDN or full path and invoke download or copy function \", \"     if [[ -n \\\"$INSTALLER_FILE_URL\\\" ]]; \", \"     then\", \"                 Downloadfile\", \"     else\", \"         echo \\\"No installation path specified for Qualys Cloud Agent\\\"\", \"             exit 4\", \"     fi\", \"                 sleep 15\", \"                 sudo installer -pkg ./QualysCloudAgent.pkg  -target /\", \"                 sleep 15\", \"                 sudo bash -c \\\"if [[ -f /usr/local/qualys/cloud-agent/bin/qualys-cloud-agent.sh ]]; then /usr/local/qualys/cloud-agent/bin/qualys-cloud-agent.sh LogLevel={{ LogLevel }} ActivationId={{ ActivationID }} CustomerId={{ CustomerID }} ServerUri={{ WebServiceUri }}; else /Applications/QualysCloudAgent.app/Contents/MacOS/qualys-cloud-agent.sh LogLevel={{ LogLevel }} ActivationId={{ ActivationID }} CustomerId={{ CustomerID }} ServerUri={{ WebServiceUri }}; fi\\\"\", \"else\", \"echo \\\"QualysCloudAgent is already installed on this and running\\\"\", \"fi\" ],\n      \"id\" : \"0.aws:runShellScript\"\n    },\n    \"name\" : \"InstallQualysCloudAgentOnMacOS\",\n    \"action\" : \"aws:runShellScript\",\n    \"precondition\" : {\n      \"StringEquals\" : [ \"platformType\", \"MacOS\" ]\n    }\n  } ]\n}",
  "CreatedDate": "2023-03-28T11:16:05.784Z",
  "DisplayName": null,
  "DocumentFormat": {
    "Value": "JSON"
  },
  "DocumentType": {
    "Value": "Command"
  },
  "DocumentVersion": "1",
  "Name": "arn:aws:ssm:us-west-2:805950163170:document/QualysCloudAgentSSMDocument",
  "Requires": [],
  "ReviewStatus": null,
  "Status": {
    "Value": "Active"
  },
  "StatusInformation": null,
  "VersionName": null,
  "ResponseMetadata": {
    "RequestId": "4b0f06ff-479e-4199-8606-e1c02612023a",
    "Metadata": {},
    "ChecksumAlgorithm": 0,
    "ChecksumValidationStatus": 0
  },
  "ContentLength": 12341,
  "HttpStatusCode": 200,
  "LoggedAt": "2023-06-01T07:12:13.0860374+00:00"
}
