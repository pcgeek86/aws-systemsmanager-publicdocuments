{
  "AttachmentsContent": [],
  "Content": "{\n  \"description\" : \"### Document name - AWS-CreateDSManagementInstance\\n\\n## What does this document do?\\nCreates an AWS Directory Service Windows Management instance. This document will create an Amazon EC2 instance running the Microsoft Windows Server 2019 base AMI. Create an EC2 security group for the instance to give you RDP access (Default CIDR: 0.0.0.0/0). Create an IAM instance profile and IAM role that will be attached to the instance to provide the permission needed to join the instance to your Active Directory managed by AWS Directory Service. The document will then launch the Amazon EC2 instance into the same VPC and subnet your AWS Directory Service is installed in. The document will also domain join the Amazon EC2 instance to your Active Directory managed by AWS Directory Service and install the Active Directory administration tools that you will use to manage your directory.\\n\\n## Input Parameters\\n* DirectoryId: (Required) The Directory Id of your AWS Directory Service directory.\\n* KeyPairName: (Optional) Key pair to use when launching instance. By Default the instance is launched without a key pair (NoKeyPair).\\n* IamInstanceProfileName: (Optional) IAM instance profile name. By Default, if no instance profile exists with the name AmazonSSMDirectoryServiceInstanceProfileRole, an instance profile with the name AmazonSSMDirectoryServiceInstanceProfileRole will be created.\\n* SecurityGroupName: (Optional) Security group name. By Default, if no security group exists with the name AmazonSSMDirectoryServiceSecurityGroup, a security group with the name AmazonSSMDirectoryServiceSecurityGroup will be created.\\n* AutomationAssumeRole: (Optional) The ARN of the role that allows Automation to perform the actions on your behalf.\\n* AmiId: (Optional) AMI id to use for launching the instance. By Default the instance will launch with the latest Microsoft Windows Server 2019 Base AMI.\\n* InstanceType: (Optional) Type of instance to launch. Default is t3.medium.\\n* RemoteAccessCidr: (Optional) Creates Security group with port for RDP (Port range 3389) open to IPs specified by CIDR (default is 0.0.0.0/0). If the security group already exists it will not be modified and rules will not be changed.\\n* Tags: (Optional) Resource tag key and value pair. The tag key and value pair is added to the resources created by the automation document. By Default the document will add a tag key \\\"Description\\\" and tag value \\\"Created by AWS Systems Manager Automation\\\".\\n## Output Parameters\\nThe automation execution has no outputs\\n\",\n  \"schemaVersion\" : \"0.3\",\n  \"assumeRole\" : \"{{ AutomationAssumeRole }}\",\n  \"parameters\" : {\n    \"DirectoryId\" : {\n      \"type\" : \"String\",\n      \"description\" : \"(Required) The Directory Id of your AWS Directory Service directory.\",\n      \"default\" : \"\",\n      \"allowedPattern\" : \"^d-[a-z0-9]{10}$\"\n    },\n    \"KeyPairName\" : {\n      \"type\" : \"String\",\n      \"description\" : \"(Optional) Key pair to use when launching instance. By Default the instance is launched without a key pair (NoKeyPair).\",\n      \"default\" : \"NoKeyPair\",\n      \"allowedPattern\" : \"^[A-Za-z0-9_-]*$\"\n    },\n    \"IamInstanceProfileName\" : {\n      \"type\" : \"String\",\n      \"description\" : \"(Optional) IAM instance profile name. By Default, if no instance profile exists with the name AmazonSSMDirectoryServiceInstanceProfileRole, an instance profile with the name AmazonSSMDirectoryServiceInstanceProfileRole will be created.\",\n      \"default\" : \"AmazonSSMDirectoryServiceInstanceProfileRole\",\n      \"allowedPattern\" : \"^\\\\S|\\\\S[A-Za-z0-9_-]*$\"\n    },\n    \"SecurityGroupName\" : {\n      \"type\" : \"String\",\n      \"description\" : \"(Optional) Security group name. By Default, if no security group exists with the name AmazonSSMDirectoryServiceSecurityGroup, a security group with the name AmazonSSMDirectoryServiceSecurityGroup will be created.\",\n      \"default\" : \"AmazonSSMDirectoryServiceSecurityGroup\",\n      \"allowedPattern\" : \"^\\\\S|\\\\S[A-Za-z0-9_-]*$\"\n    },\n    \"AutomationAssumeRole\" : {\n      \"type\" : \"String\",\n      \"description\" : \"(Optional) The ARN of the role that allows Automation to perform the actions on your behalf.\",\n      \"default\" : \"\",\n      \"allowedPattern\" : \"^$|arn:aws:iam::\\\\w+:role/.*\"\n    },\n    \"AmiId\" : {\n      \"type\" : \"String\",\n      \"description\" : \"(Optional) AMI id to use for launching the instance. By Default the instance will launch with the latest Microsoft Windows Server 2019 Base AMI.\",\n      \"default\" : \"{{ssm:/aws/service/ami-windows-latest/Windows_Server-2019-English-Full-Base}}\",\n      \"allowedPattern\" : \"(^\\\\{\\\\{ssm:\\\\/aws\\\\/service\\\\/ami-windows-latest\\\\/[a-zA-Z0-9._-]{1,255}\\\\}\\\\}|^ami-[a-z0-9]{1,255})\"\n    },\n    \"InstanceType\" : {\n      \"description\" : \"(Optional) Type of instance to launch. Default is t3.medium.\",\n      \"type\" : \"String\",\n      \"default\" : \"t3.medium\",\n      \"allowedValues\" : [ \"t2.nano\", \"t2.micro\", \"t2.small\", \"t2.medium\", \"t2.large\", \"t2.xlarge\", \"t2.2xlarge\", \"t3.nano\", \"t3.micro\", \"t3.small\", \"t3.medium\", \"t3.large\", \"t3.xlarge\", \"t3.2xlarge\" ]\n    },\n    \"RemoteAccessCidr\" : {\n      \"type\" : \"String\",\n      \"description\" : \"(Optional) Creates Security group with port for RDP (Port range 3389) open to IPs specified by CIDR (default is 0.0.0.0/0). If the security group already exists it will not be modified and rules will not be changed.\",\n      \"default\" : \"0.0.0.0/0\",\n      \"allowedPattern\" : \"(\\\\d{1,3})\\\\.(\\\\d{1,3})\\\\.(\\\\d{1,3})\\\\.(\\\\d{1,3})/(\\\\d{1,2})|^pl-[a-z0-9]{8,15}$\"\n    },\n    \"Tags\" : {\n      \"type\" : \"MapList\",\n      \"allowedPattern\" : \"\\\\{([a-zA-Z0-9\\\" ]{1,255}:[a-zA-Z0-9\\\", ]{1,255})+\\\\}\",\n      \"description\" : \"(Optional) Resource tag key and value pair. The tag key and value pair is added to the resources created by the automation document. By Default the document will add a tag key \\\"Description\\\" and tag value \\\"Created by AWS Systems Manager Automation\\\".\",\n      \"default\" : [ {\n        \"Key\" : \"Description\",\n        \"Value\" : \"Created by AWS Systems Manager Automation\"\n      }, {\n        \"Key\" : \"Created By\",\n        \"Value\" : \"AWS Systems Manager Automation\"\n      } ]\n    }\n  },\n  \"mainSteps\" : [ {\n    \"name\" : \"GetDirectoryDomainName\",\n    \"action\" : \"aws:executeAwsApi\",\n    \"inputs\" : {\n      \"Service\" : \"ds\",\n      \"Api\" : \"DescribeDirectories\",\n      \"DirectoryIds\" : [ \"{{ DirectoryId }}\" ]\n    },\n    \"outputs\" : [ {\n      \"Name\" : \"DirectoryDomainName\",\n      \"Selector\" : \"$.DirectoryDescriptions[0].Name\",\n      \"Type\" : \"String\"\n    }, {\n      \"Name\" : \"VpcID\",\n      \"Selector\" : \"$.DirectoryDescriptions[0].VpcSettings.VpcId\",\n      \"Type\" : \"String\"\n    }, {\n      \"Name\" : \"DnsIpAddrsPrimary\",\n      \"Selector\" : \"$.DirectoryDescriptions[0].DnsIpAddrs[0]\",\n      \"Type\" : \"String\"\n    }, {\n      \"Name\" : \"DnsIpAddrsSecondary\",\n      \"Selector\" : \"$.DirectoryDescriptions[0].DnsIpAddrs[1]\",\n      \"Type\" : \"String\"\n    }, {\n      \"Name\" : \"SubnetID1\",\n      \"Selector\" : \"$.DirectoryDescriptions[0].VpcSettings.SubnetIds[0]\",\n      \"Type\" : \"String\"\n    } ]\n  }, {\n    \"name\" : \"GetVpcSettings\",\n    \"action\" : \"aws:executeAwsApi\",\n    \"inputs\" : {\n      \"Service\" : \"ec2\",\n      \"Api\" : \"DescribeVpcs\",\n      \"VpcIds\" : [ \"{{ GetDirectoryDomainName.VpcID }}\" ]\n    },\n    \"outputs\" : [ {\n      \"Name\" : \"CidrBlock\",\n      \"Selector\" : \"$.Vpcs[0].CidrBlock\",\n      \"Type\" : \"String\"\n    } ]\n  }, {\n    \"name\" : \"DescribeSecurityGroup\",\n    \"action\" : \"aws:executeAwsApi\",\n    \"inputs\" : {\n      \"Service\" : \"ec2\",\n      \"Api\" : \"DescribeSecurityGroups\",\n      \"Filters\" : [ {\n        \"Name\" : \"group-name\",\n        \"Values\" : [ \"{{ SecurityGroupName }}\" ]\n      }, {\n        \"Name\" : \"vpc-id\",\n        \"Values\" : [ \"{{ GetDirectoryDomainName.VpcID }}\" ]\n      } ]\n    },\n    \"outputs\" : [ {\n      \"Name\" : \"SecurityGroup\",\n      \"Selector\" : \"$.SecurityGroups[0].GroupName\",\n      \"Type\" : \"String\"\n    }, {\n      \"Name\" : \"SecurityGroupId\",\n      \"Selector\" : \"$.SecurityGroups[0].GroupId\",\n      \"Type\" : \"String\"\n    } ]\n  }, {\n    \"name\" : \"CheckSecurityGroupStatus\",\n    \"action\" : \"aws:branch\",\n    \"inputs\" : {\n      \"Choices\" : [ {\n        \"NextStep\" : \"GetIAMRole\",\n        \"Variable\" : \"{{ DescribeSecurityGroup.SecurityGroup }}\",\n        \"StringEquals\" : \"{{ SecurityGroupName }}\"\n      } ],\n      \"Default\" : \"CreateSecurityGroup\"\n    }\n  }, {\n    \"name\" : \"CreateSecurityGroup\",\n    \"action\" : \"aws:executeAwsApi\",\n    \"inputs\" : {\n      \"Service\" : \"ec2\",\n      \"Api\" : \"CreateSecurityGroup\",\n      \"GroupName\" : \"{{ SecurityGroupName }}\",\n      \"Description\" : \"AWS created security group for {{ DirectoryId }} management instance\",\n      \"VpcId\" : \"{{GetDirectoryDomainName.VpcID}}\",\n      \"TagSpecifications\" : [ {\n        \"ResourceType\" : \"security-group\",\n        \"Tags\" : \"{{ Tags }}\"\n      } ]\n    },\n    \"outputs\" : [ {\n      \"Name\" : \"SecurityGroupId\",\n      \"Selector\" : \"$.GroupId\",\n      \"Type\" : \"String\"\n    } ]\n  }, {\n    \"name\" : \"AuthorizeSecurityGroup\",\n    \"action\" : \"aws:executeAwsApi\",\n    \"onFailure\" : \"Continue\",\n    \"inputs\" : {\n      \"Service\" : \"ec2\",\n      \"Api\" : \"AuthorizeSecurityGroupIngress\",\n      \"CidrIp\" : \"{{ RemoteAccessCidr }}\",\n      \"FromPort\" : 3389,\n      \"ToPort\" : 3389,\n      \"GroupId\" : \"{{ CreateSecurityGroup.SecurityGroupId }}\",\n      \"IpProtocol\" : \"tcp\"\n    }\n  }, {\n    \"name\" : \"GetIAMRole\",\n    \"action\" : \"aws:executeAwsApi\",\n    \"onFailure\" : \"Continue\",\n    \"inputs\" : {\n      \"Service\" : \"iam\",\n      \"Api\" : \"GetRole\",\n      \"RoleName\" : \"{{ IamInstanceProfileName }}\"\n    },\n    \"outputs\" : [ {\n      \"Name\" : \"InstanceRoleName\",\n      \"Selector\" : \"$.Role.RoleName\",\n      \"Type\" : \"String\"\n    } ]\n  }, {\n    \"name\" : \"ChoiceIAMRole\",\n    \"action\" : \"aws:branch\",\n    \"inputs\" : {\n      \"Choices\" : [ {\n        \"NextStep\" : \"GetAttachedRolePolicies\",\n        \"Variable\" : \"{{ GetIAMRole.InstanceRoleName }}\",\n        \"StringEquals\" : \"{{ IamInstanceProfileName }}\"\n      } ],\n      \"Default\" : \"CreateIAMRole\"\n    }\n  }, {\n    \"name\" : \"GetAttachedRolePolicies\",\n    \"action\" : \"aws:executeAwsApi\",\n    \"onFailure\" : \"Continue\",\n    \"inputs\" : {\n      \"Service\" : \"iam\",\n      \"Api\" : \"ListAttachedRolePolicies\",\n      \"RoleName\" : \"{{IamInstanceProfileName}}\"\n    },\n    \"outputs\" : [ {\n      \"Name\" : \"SSMManagedInstanceCore\",\n      \"Selector\" : \"$.AttachedPolicies[0].PolicyName\",\n      \"Type\" : \"String\"\n    }, {\n      \"Name\" : \"SSMDirectoryServiceAccess\",\n      \"Selector\" : \"$.AttachedPolicies[1].PolicyName\",\n      \"Type\" : \"String\"\n    } ]\n  }, {\n    \"name\" : \"ChoiceSSMManagedInstanceCore\",\n    \"action\" : \"aws:branch\",\n    \"inputs\" : {\n      \"Choices\" : [ {\n        \"NextStep\" : \"ChoiceSSMDirectoryServiceAccess\",\n        \"Variable\" : \"{{ GetAttachedRolePolicies.SSMManagedInstanceCore }}\",\n        \"StringEquals\" : \"AmazonSSMManagedInstanceCore\"\n      } ],\n      \"Default\" : \"AttachSSMIAMPolicy\"\n    }\n  }, {\n    \"name\" : \"ChoiceSSMDirectoryServiceAccess\",\n    \"action\" : \"aws:branch\",\n    \"inputs\" : {\n      \"Choices\" : [ {\n        \"NextStep\" : \"GetIAMInstanceRole\",\n        \"Variable\" : \"{{ GetAttachedRolePolicies.SSMDirectoryServiceAccess }}\",\n        \"StringEquals\" : \"AmazonSSMDirectoryServiceAccess\"\n      } ],\n      \"Default\" : \"AttachDsIAMPolicy\"\n    }\n  }, {\n    \"name\" : \"CreateIAMRole\",\n    \"action\" : \"aws:executeAwsApi\",\n    \"onFailure\" : \"step:DeleteCreatedSecurityGroup\",\n    \"maxAttempts\" : 3,\n    \"inputs\" : {\n      \"Service\" : \"iam\",\n      \"Api\" : \"CreateRole\",\n      \"RoleName\" : \"{{ IamInstanceProfileName }}\",\n      \"AssumeRolePolicyDocument\" : \"{\\\"Version\\\": \\\"2012-10-17\\\",\\\"Statement\\\": [{\\\"Sid\\\": \\\"\\\",\\\"Effect\\\": \\\"Allow\\\",\\\"Principal\\\": {\\\"Service\\\": [\\\"ec2.amazonaws.com\\\"]},\\\"Action\\\": \\\"sts:AssumeRole\\\"}]}\",\n      \"Description\" : \"Instance Profile created by SSM Automation\",\n      \"Tags\" : \"{{ Tags }}\"\n    },\n    \"outputs\" : [ {\n      \"Name\" : \"ManagedInstanceRole\",\n      \"Selector\" : \"$.Role.RoleName\"\n    } ]\n  }, {\n    \"name\" : \"AttachSSMIAMPolicy\",\n    \"action\" : \"aws:executeAwsApi\",\n    \"onFailure\" : \"Continue\",\n    \"inputs\" : {\n      \"Service\" : \"iam\",\n      \"Api\" : \"AttachRolePolicy\",\n      \"PolicyArn\" : \"arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore\",\n      \"RoleName\" : \"{{ IamInstanceProfileName }}\"\n    }\n  }, {\n    \"name\" : \"AttachDsIAMPolicy\",\n    \"action\" : \"aws:executeAwsApi\",\n    \"onFailure\" : \"Continue\",\n    \"inputs\" : {\n      \"Service\" : \"iam\",\n      \"Api\" : \"AttachRolePolicy\",\n      \"PolicyArn\" : \"arn:aws:iam::aws:policy/AmazonSSMDirectoryServiceAccess\",\n      \"RoleName\" : \"{{ IamInstanceProfileName }}\"\n    }\n  }, {\n    \"name\" : \"GetIAMInstanceRole\",\n    \"action\" : \"aws:executeAwsApi\",\n    \"onFailure\" : \"Continue\",\n    \"inputs\" : {\n      \"Service\" : \"iam\",\n      \"Api\" : \"GetInstanceProfile\",\n      \"InstanceProfileName\" : \"{{ IamInstanceProfileName }}\"\n    },\n    \"outputs\" : [ {\n      \"Name\" : \"InstanceProfile\",\n      \"Selector\" : \"$.InstanceProfile.InstanceProfileName\",\n      \"Type\" : \"String\"\n    }, {\n      \"Name\" : \"InstanceProfileId\",\n      \"Selector\" : \"$.InstanceProfile.InstanceProfileId\",\n      \"Type\" : \"String\"\n    }, {\n      \"Name\" : \"InstanceArn\",\n      \"Selector\" : \"$.InstanceProfile.Arn\",\n      \"Type\" : \"String\"\n    }, {\n      \"Name\" : \"Roles\",\n      \"Selector\" : \"$.InstanceProfile.Roles[0].RoleName\",\n      \"Type\" : \"String\"\n    } ]\n  }, {\n    \"name\" : \"ChoiceIAMInstanceRole\",\n    \"action\" : \"aws:branch\",\n    \"inputs\" : {\n      \"Choices\" : [ {\n        \"NextStep\" : \"ChoiceIAMRoleAttached\",\n        \"Variable\" : \"{{ GetIAMInstanceRole.InstanceProfile }}\",\n        \"StringEquals\" : \"{{ IamInstanceProfileName }}\"\n      } ],\n      \"Default\" : \"CreateInstanceProfile\"\n    }\n  }, {\n    \"name\" : \"ChoiceIAMRoleAttached\",\n    \"action\" : \"aws:branch\",\n    \"inputs\" : {\n      \"Choices\" : [ {\n        \"NextStep\" : \"DescribeKeyPair\",\n        \"Variable\" : \"{{ GetIAMInstanceRole.Roles }}\",\n        \"StringEquals\" : \"{{ IamInstanceProfileName }}\"\n      } ],\n      \"Default\" : \"AddRoleInstanceProfile\"\n    }\n  }, {\n    \"name\" : \"CreateInstanceProfile\",\n    \"action\" : \"aws:executeAwsApi\",\n    \"onFailure\" : \"step:DetachSSMIAMPolicy\",\n    \"inputs\" : {\n      \"Service\" : \"iam\",\n      \"Api\" : \"CreateInstanceProfile\",\n      \"InstanceProfileName\" : \"{{ IamInstanceProfileName }}\"\n    },\n    \"outputs\" : [ {\n      \"Name\" : \"InstanceProfile\",\n      \"Selector\" : \"$.InstanceProfile.InstanceProfileName\",\n      \"Type\" : \"String\"\n    }, {\n      \"Name\" : \"InstanceProfileId\",\n      \"Selector\" : \"$.InstanceProfile.InstanceProfileId\",\n      \"Type\" : \"String\"\n    }, {\n      \"Name\" : \"InstanceArn\",\n      \"Selector\" : \"$.InstanceProfile.Arn\",\n      \"Type\" : \"String\"\n    } ]\n  }, {\n    \"name\" : \"TagInstanceProfile\",\n    \"action\" : \"aws:executeAwsApi\",\n    \"onFailure\" : \"Continue\",\n    \"inputs\" : {\n      \"Service\" : \"iam\",\n      \"Api\" : \"TagInstanceProfile\",\n      \"InstanceProfileName\" : [ \"{{ CreateInstanceProfile.InstanceProfile}}\" ],\n      \"Tags\" : \"{{ Tags }}\"\n    }\n  }, {\n    \"name\" : \"AddRoleInstanceProfile\",\n    \"action\" : \"aws:executeAwsApi\",\n    \"onFailure\" : \"step:DetachSSMIAMPolicy\",\n    \"inputs\" : {\n      \"Service\" : \"iam\",\n      \"Api\" : \"AddRoleToInstanceProfile\",\n      \"InstanceProfileName\" : \"{{ IamInstanceProfileName }}\",\n      \"RoleName\" : \"{{ IamInstanceProfileName }}\"\n    },\n    \"nextStep\" : \"SleepIamRoleReady\"\n  }, {\n    \"name\" : \"SleepIamRoleReady\",\n    \"action\" : \"aws:sleep\",\n    \"inputs\" : {\n      \"Duration\" : \"PT10S\"\n    }\n  }, {\n    \"name\" : \"DescribeKeyPair\",\n    \"action\" : \"aws:executeAwsApi\",\n    \"inputs\" : {\n      \"Service\" : \"ec2\",\n      \"Api\" : \"DescribeKeyPairs\",\n      \"Filters\" : [ {\n        \"Name\" : \"key-name\",\n        \"Values\" : [ \"{{ KeyPairName }}\" ]\n      } ]\n    },\n    \"outputs\" : [ {\n      \"Name\" : \"KeyPair\",\n      \"Selector\" : \"$.KeyPairs[0].KeyName\",\n      \"Type\" : \"String\"\n    } ]\n  }, {\n    \"name\" : \"GetSecurityGroupId\",\n    \"action\" : \"aws:executeAwsApi\",\n    \"inputs\" : {\n      \"Service\" : \"ec2\",\n      \"Api\" : \"DescribeSecurityGroups\",\n      \"Filters\" : [ {\n        \"Name\" : \"group-id\",\n        \"Values\" : [ \"{{ DescribeSecurityGroup.SecurityGroupId }}\", \"{{ CreateSecurityGroup.SecurityGroupId }}\" ]\n      }, {\n        \"Name\" : \"vpc-id\",\n        \"Values\" : [ \"{{ GetDirectoryDomainName.VpcID }}\" ]\n      } ]\n    },\n    \"outputs\" : [ {\n      \"Name\" : \"SecurityGroup\",\n      \"Selector\" : \"$.SecurityGroups[0].GroupName\",\n      \"Type\" : \"String\"\n    }, {\n      \"Name\" : \"SecurityGroupId\",\n      \"Selector\" : \"$.SecurityGroups[0].GroupId\",\n      \"Type\" : \"String\"\n    } ]\n  }, {\n    \"name\" : \"CheckKeyPair\",\n    \"action\" : \"aws:branch\",\n    \"inputs\" : {\n      \"Choices\" : [ {\n        \"NextStep\" : \"LaunchInstance\",\n        \"Variable\" : \"{{ DescribeKeyPair.KeyPair }}\",\n        \"StringEquals\" : \"{{ KeyPairName }}\"\n      } ],\n      \"Default\" : \"LaunchInstanceNoKey\"\n    }\n  }, {\n    \"name\" : \"LaunchInstance\",\n    \"action\" : \"aws:executeAwsApi\",\n    \"onFailure\" : \"step:RemoveRoleFromInstanceProfile\",\n    \"maxAttempts\" : 3,\n    \"timeoutSeconds\" : 300,\n    \"inputs\" : {\n      \"Service\" : \"ec2\",\n      \"Api\" : \"RunInstances\",\n      \"ImageId\" : \"{{ AmiId }}\",\n      \"InstanceType\" : \"{{ InstanceType }}\",\n      \"MaxCount\" : 1,\n      \"MinCount\" : 1,\n      \"IamInstanceProfile\" : {\n        \"Name\" : \"{{ IamInstanceProfileName }}\"\n      },\n      \"KeyName\" : \"{{ KeyPairName }}\",\n      \"SubnetId\" : \"{{ GetDirectoryDomainName.SubnetID1 }}\",\n      \"SecurityGroupIds\" : [ \"{{ GetSecurityGroupId.SecurityGroupId }}\" ],\n      \"TagSpecifications\" : [ {\n        \"ResourceType\" : \"instance\",\n        \"Tags\" : [ {\n          \"Key\" : \"Name\",\n          \"Value\" : \"{{ DirectoryId }}_managementInstance\"\n        } ]\n      } ]\n    },\n    \"outputs\" : [ {\n      \"Name\" : \"InstanceId\",\n      \"Selector\" : \"$.Instances[0].InstanceId\",\n      \"Type\" : \"String\"\n    } ],\n    \"nextStep\" : \"GetLaunchedInstance\"\n  }, {\n    \"name\" : \"LaunchInstanceNoKey\",\n    \"action\" : \"aws:executeAwsApi\",\n    \"onFailure\" : \"step:RemoveRoleFromInstanceProfile\",\n    \"maxAttempts\" : 3,\n    \"timeoutSeconds\" : 300,\n    \"inputs\" : {\n      \"Service\" : \"ec2\",\n      \"Api\" : \"RunInstances\",\n      \"ImageId\" : \"{{ AmiId }}\",\n      \"InstanceType\" : \"{{ InstanceType }}\",\n      \"MaxCount\" : 1,\n      \"MinCount\" : 1,\n      \"IamInstanceProfile\" : {\n        \"Name\" : \"{{ IamInstanceProfileName }}\"\n      },\n      \"SubnetId\" : \"{{ GetDirectoryDomainName.SubnetID1 }}\",\n      \"SecurityGroupIds\" : [ \"{{ GetSecurityGroupId.SecurityGroupId }}\" ],\n      \"TagSpecifications\" : [ {\n        \"ResourceType\" : \"instance\",\n        \"Tags\" : [ {\n          \"Key\" : \"Name\",\n          \"Value\" : \"{{ DirectoryId }}_managementInstance\"\n        } ]\n      } ]\n    },\n    \"outputs\" : [ {\n      \"Name\" : \"InstanceId\",\n      \"Selector\" : \"$.Instances[0].InstanceId\",\n      \"Type\" : \"String\"\n    } ]\n  }, {\n    \"name\" : \"GetLaunchedInstance\",\n    \"action\" : \"aws:executeAwsApi\",\n    \"inputs\" : {\n      \"Service\" : \"ec2\",\n      \"Api\" : \"DescribeInstances\",\n      \"Filters\" : [ {\n        \"Name\" : \"vpc-id\",\n        \"Values\" : [ \"{{ GetDirectoryDomainName.VpcID }}\" ]\n      }, {\n        \"Name\" : \"instance-id\",\n        \"Values\" : [ \"{{ LaunchInstanceNoKey.InstanceId }}\", \"{{ LaunchInstance.InstanceId }}\" ]\n      } ]\n    },\n    \"outputs\" : [ {\n      \"Name\" : \"EC2InstanceId\",\n      \"Selector\" : \"$.Reservations[0].Instances[0].InstanceId\",\n      \"Type\" : \"String\"\n    } ]\n  }, {\n    \"name\" : \"WaitUntilInstanceStateRunning\",\n    \"action\" : \"aws:waitForAwsResourceProperty\",\n    \"timeoutSeconds\" : 240,\n    \"maxAttempts\" : 3,\n    \"onFailure\" : \"step:TerminateInstance\",\n    \"inputs\" : {\n      \"Service\" : \"ec2\",\n      \"Api\" : \"DescribeInstanceStatus\",\n      \"InstanceIds\" : [ \"{{ GetLaunchedInstance.EC2InstanceId }}\" ],\n      \"PropertySelector\" : \"$.InstanceStatuses[0].InstanceState.Name\",\n      \"DesiredValues\" : [ \"running\" ]\n    }\n  }, {\n    \"name\" : \"GetDomainJoinDocument\",\n    \"action\" : \"aws:executeAwsApi\",\n    \"inputs\" : {\n      \"Service\" : \"ssm\",\n      \"Api\" : \"ListDocuments\",\n      \"DocumentFilterList\" : [ {\n        \"key\" : \"Name\",\n        \"value\" : \"awsconfig_Domain_{{ DirectoryId }}_{{ GetDirectoryDomainName.DirectoryDomainName }}\"\n      } ]\n    },\n    \"outputs\" : [ {\n      \"Name\" : \"DomainJoinDocument\",\n      \"Selector\" : \"$.DocumentIdentifiers[0].Name\",\n      \"Type\" : \"String\"\n    } ]\n  }, {\n    \"name\" : \"GetCustomDomainJoinDocument\",\n    \"action\" : \"aws:executeAwsApi\",\n    \"inputs\" : {\n      \"Service\" : \"ssm\",\n      \"Api\" : \"ListDocuments\",\n      \"DocumentFilterList\" : [ {\n        \"key\" : \"Name\",\n        \"value\" : \"awsconfig_Domain_{{ DirectoryId }}_{{ GetDirectoryDomainName.DirectoryDomainName }}_Custom\"\n      } ]\n    },\n    \"outputs\" : [ {\n      \"Name\" : \"CustomDomainJoinDocument\",\n      \"Selector\" : \"$.DocumentIdentifiers[0].Name\",\n      \"Type\" : \"String\"\n    } ]\n  }, {\n    \"name\" : \"WaitUntilInstanceSSMManaged\",\n    \"action\" : \"aws:waitForAwsResourceProperty\",\n    \"timeoutSeconds\" : 240,\n    \"onFailure\" : \"step:TerminateInstance\",\n    \"inputs\" : {\n      \"Service\" : \"ssm\",\n      \"Api\" : \"DescribeInstanceInformation\",\n      \"InstanceInformationFilterList\" : [ {\n        \"key\" : \"InstanceIds\",\n        \"valueSet\" : [ \"{{ GetLaunchedInstance.EC2InstanceId }}\" ]\n      } ],\n      \"PropertySelector\" : \"$.InstanceInformationList[0].PingStatus\",\n      \"DesiredValues\" : [ \"Online\" ]\n    }\n  }, {\n    \"name\" : \"CheckDocument\",\n    \"action\" : \"aws:branch\",\n    \"inputs\" : {\n      \"Choices\" : [ {\n        \"NextStep\" : \"DomainJoin\",\n        \"Variable\" : \"{{ GetDomainJoinDocument.DomainJoinDocument }}\",\n        \"StringEquals\" : \"awsconfig_Domain_{{ DirectoryId }}_{{ GetDirectoryDomainName.DirectoryDomainName }}\"\n      }, {\n        \"NextStep\" : \"DomainJoinCustom\",\n        \"Variable\" : \"{{GetCustomDomainJoinDocument.CustomDomainJoinDocument}}\",\n        \"StringEquals\" : \"awsconfig_Domain_{{ DirectoryId }}_{{ GetDirectoryDomainName.DirectoryDomainName }}_Custom\"\n      } ],\n      \"Default\" : \"CreateDomainJoinDocument\"\n    }\n  }, {\n    \"name\" : \"CreateDomainJoinDocument\",\n    \"action\" : \"aws:executeAwsApi\",\n    \"onFailure\" : \"step:TerminateInstance\",\n    \"inputs\" : {\n      \"Service\" : \"ssm\",\n      \"Api\" : \"CreateDocument\",\n      \"Name\" : \"awsconfig_Domain_{{ DirectoryId }}_{{ GetDirectoryDomainName.DirectoryDomainName }}_Custom\",\n      \"DocumentFormat\" : \"JSON\",\n      \"DocumentType\" : \"Command\",\n      \"Content\" : \"{\\\"schemaVersion\\\": \\\"1.0\\\",\\\"description\\\": \\\"Custom Domain Join Configuration created by Automation Document.\\\", \\\"runtimeConfig\\\": {\\\"aws:domainJoin\\\": {\\\"properties\\\": {\\\"directoryId\\\":\\\"{{ DirectoryId }}\\\",\\\"directoryName\\\": \\\"{{ GetDirectoryDomainName.DirectoryDomainName }}\\\",\\\"dnsIpAddresses\\\": [\\\"{{ GetDirectoryDomainName.DnsIpAddrsPrimary }}\\\",\\\"{{ GetDirectoryDomainName.DnsIpAddrsSecondary}}\\\"]}}}}\",\n      \"Tags\" : \"{{ Tags }}\"\n    }\n  }, {\n    \"name\" : \"DomainJoinCustom\",\n    \"action\" : \"aws:runCommand\",\n    \"onFailure\" : \"step:DeleteCustomDomainJoinDocumentOnError\",\n    \"timeoutSeconds\" : 240,\n    \"isCritical\" : \"true\",\n    \"inputs\" : {\n      \"DocumentName\" : \"awsconfig_Domain_{{ DirectoryId }}_{{ GetDirectoryDomainName.DirectoryDomainName }}_Custom\",\n      \"InstanceIds\" : [ \"{{ GetLaunchedInstance.EC2InstanceId }}\" ]\n    }\n  }, {\n    \"name\" : \"DeleteCustomDomainJoinDocumentOnSuccess\",\n    \"action\" : \"aws:executeAwsApi\",\n    \"onFailure\" : \"Continue\",\n    \"inputs\" : {\n      \"Service\" : \"ssm\",\n      \"Api\" : \"DeleteDocument\",\n      \"Name\" : \"awsconfig_Domain_{{ DirectoryId }}_{{ GetDirectoryDomainName.DirectoryDomainName }}_Custom\"\n    },\n    \"nextStep\" : \"InstallRsatTools\"\n  }, {\n    \"name\" : \"DeleteCustomDomainJoinDocumentOnError\",\n    \"action\" : \"aws:executeAwsApi\",\n    \"onFailure\" : \"Continue\",\n    \"inputs\" : {\n      \"Service\" : \"ssm\",\n      \"Api\" : \"DeleteDocument\",\n      \"Name\" : \"awsconfig_Domain_{{ DirectoryId }}_{{ GetDirectoryDomainName.DirectoryDomainName }}_Custom\"\n    },\n    \"nextStep\" : \"TerminateInstance\"\n  }, {\n    \"name\" : \"DomainJoin\",\n    \"action\" : \"aws:runCommand\",\n    \"onFailure\" : \"step:TerminateInstance\",\n    \"timeoutSeconds\" : 240,\n    \"isCritical\" : \"true\",\n    \"inputs\" : {\n      \"DocumentName\" : \"awsconfig_Domain_{{ DirectoryId }}_{{ GetDirectoryDomainName.DirectoryDomainName }}\",\n      \"InstanceIds\" : [ \"{{ GetLaunchedInstance.EC2InstanceId }}\" ]\n    }\n  }, {\n    \"name\" : \"InstallRsatTools\",\n    \"action\" : \"aws:runCommand\",\n    \"inputs\" : {\n      \"DocumentName\" : \"AWS-RunPowerShellScript\",\n      \"InstanceIds\" : [ \"{{ GetLaunchedInstance.EC2InstanceId }}\" ],\n      \"Parameters\" : {\n        \"commands\" : [ \"Install-WindowsFeature -Name GPMC,RSAT-AD-PowerShell,RSAT-AD-AdminCenter,RSAT-ADDS-Tools,RSAT-DNS-Server\" ]\n      }\n    },\n    \"isEnd\" : true\n  }, {\n    \"name\" : \"TerminateInstance\",\n    \"action\" : \"aws:executeAwsApi\",\n    \"inputs\" : {\n      \"Service\" : \"ec2\",\n      \"Api\" : \"TerminateInstances\",\n      \"InstanceIds\" : [ \"{{ GetLaunchedInstance.EC2InstanceId }}\" ]\n    },\n    \"maxAttempts\" : 3,\n    \"isCritical\" : \"true\",\n    \"onFailure\" : \"Continue\",\n    \"timeoutSeconds\" : 240\n  }, {\n    \"name\" : \"WaitUntilInstanceStateTerminated\",\n    \"action\" : \"aws:waitForAwsResourceProperty\",\n    \"timeoutSeconds\" : 60,\n    \"maxAttempts\" : 3,\n    \"onFailure\" : \"Continue\",\n    \"inputs\" : {\n      \"Service\" : \"ec2\",\n      \"Api\" : \"DescribeInstanceStatus\",\n      \"IncludeAllInstances\" : true,\n      \"InstanceIds\" : [ \"{{ GetLaunchedInstance.EC2InstanceId }}\" ],\n      \"PropertySelector\" : \"$.InstanceStatuses[0].InstanceState.Name\",\n      \"DesiredValues\" : [ \"terminated\" ]\n    }\n  }, {\n    \"name\" : \"RemoveRoleFromInstanceProfile\",\n    \"action\" : \"aws:executeAwsApi\",\n    \"onFailure\" : \"Continue\",\n    \"maxAttempts\" : 3,\n    \"inputs\" : {\n      \"Service\" : \"iam\",\n      \"Api\" : \"RemoveRoleFromInstanceProfile\",\n      \"InstanceProfileName\" : \"{{ CreateInstanceProfile.InstanceProfile}}\",\n      \"RoleName\" : \"{{ CreateIAMRole.ManagedInstanceRole }}\"\n    }\n  }, {\n    \"name\" : \"DetachSSMIAMPolicy\",\n    \"action\" : \"aws:executeAwsApi\",\n    \"onFailure\" : \"Continue\",\n    \"inputs\" : {\n      \"Service\" : \"iam\",\n      \"Api\" : \"DetachRolePolicy\",\n      \"PolicyArn\" : \"arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore\",\n      \"RoleName\" : \"{{ CreateIAMRole.ManagedInstanceRole }}\"\n    }\n  }, {\n    \"name\" : \"DetachDsIAMPolicy\",\n    \"action\" : \"aws:executeAwsApi\",\n    \"onFailure\" : \"Continue\",\n    \"inputs\" : {\n      \"Service\" : \"iam\",\n      \"Api\" : \"DetachRolePolicy\",\n      \"PolicyArn\" : \"arn:aws:iam::aws:policy/AmazonSSMDirectoryServiceAccess\",\n      \"RoleName\" : \"{{ CreateIAMRole.ManagedInstanceRole }}\"\n    }\n  }, {\n    \"name\" : \"DeleteCreatedIAMRole\",\n    \"action\" : \"aws:executeAwsApi\",\n    \"onFailure\" : \"Continue\",\n    \"maxAttempts\" : 3,\n    \"inputs\" : {\n      \"Service\" : \"iam\",\n      \"Api\" : \"DeleteRole\",\n      \"RoleName\" : \"{{ CreateIAMRole.ManagedInstanceRole }}\"\n    }\n  }, {\n    \"name\" : \"DeleteCreatedInstanceProfile\",\n    \"action\" : \"aws:executeAwsApi\",\n    \"onFailure\" : \"Continue\",\n    \"maxAttempts\" : 3,\n    \"inputs\" : {\n      \"Service\" : \"iam\",\n      \"Api\" : \"DeleteInstanceProfile\",\n      \"InstanceProfileName\" : \"{{ CreateInstanceProfile.InstanceProfile}}\"\n    }\n  }, {\n    \"name\" : \"DeleteCreatedSecurityGroup\",\n    \"action\" : \"aws:executeAwsApi\",\n    \"onFailure\" : \"Continue\",\n    \"timeoutSeconds\" : 240,\n    \"maxAttempts\" : 3,\n    \"inputs\" : {\n      \"Service\" : \"ec2\",\n      \"Api\" : \"DeleteSecurityGroup\",\n      \"GroupId\" : \"{{ CreateSecurityGroup.SecurityGroupId }}\"\n    },\n    \"isEnd\" : true\n  } ]\n}",
  "CreatedDate": "2021-06-10T18:08:10.352Z",
  "DisplayName": null,
  "DocumentFormat": {
    "Value": "JSON"
  },
  "DocumentType": {
    "Value": "Automation"
  },
  "DocumentVersion": "1",
  "Name": "AWS-CreateDSManagementInstance",
  "Requires": [],
  "ReviewStatus": null,
  "Status": {
    "Value": "Active"
  },
  "StatusInformation": null,
  "VersionName": null,
  "ResponseMetadata": {
    "RequestId": "45817647-9703-40fe-ba57-2fb5aab04f46",
    "Metadata": {},
    "ChecksumAlgorithm": 0,
    "ChecksumValidationStatus": 0
  },
  "ContentLength": 30551,
  "HttpStatusCode": 200,
  "LoggedAt": "2022-05-01T07:12:30.1639686+00:00"
}
