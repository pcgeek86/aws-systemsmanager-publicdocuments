{
  "AttachmentsContent": [],
  "Content": "{\n  \"outputs\" : [ \"Remediation.Output\", \"ParseInput.AffectedObject\" ],\n  \"schemaVersion\" : \"0.3\",\n  \"assumeRole\" : \"{{ AutomationAssumeRole }}\",\n  \"parameters\" : {\n    \"AutomationAssumeRole\" : {\n      \"default\" : \"\",\n      \"description\" : \"(Required) The ARN of the role that allows Automation to perform the actions on your behalf.\",\n      \"type\" : \"String\",\n      \"allowedPattern\" : \"^arn:(?:aws|aws-us-gov|aws-cn):iam::\\\\d{12}:role/[\\\\w+=,.@-]+\"\n    },\n    \"Finding\" : {\n      \"description\" : \"The input from Step function for APIGateway.3 finding\",\n      \"type\" : \"StringMap\"\n    }\n  },\n  \"mainSteps\" : [ {\n    \"outputs\" : [ {\n      \"Type\" : \"String\",\n      \"Name\" : \"StageArn\",\n      \"Selector\" : \"$.Payload.resource.Id\"\n    }, {\n      \"Type\" : \"String\",\n      \"Name\" : \"FindingId\",\n      \"Selector\" : \"$.Payload.finding_id\"\n    }, {\n      \"Type\" : \"String\",\n      \"Name\" : \"ProductArn\",\n      \"Selector\" : \"$.Payload.product_arn\"\n    }, {\n      \"Type\" : \"StringMap\",\n      \"Name\" : \"AffectedObject\",\n      \"Selector\" : \"$.Payload.object\"\n    } ],\n    \"inputs\" : {\n      \"Script\" : \"#!/usr/bin/python\\n###############################################################################\\n#  Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.         #\\n#                                                                             #\\n#  Licensed under the Apache License Version 2.0 (the \\\"License\\\"). You may not #\\n#  use this file except in compliance with the License. A copy of the License #\\n#  is located at                                                              #\\n#                                                                             #\\n#      http://www.apache.org/licenses/LICENSE-2.0/                            #\\n#                                                                             #\\n#  or in the \\\"license\\\" file accompanying this file. This file is distributed  #\\n#  on an \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, express #\\n#  or implied. See the License for the specific language governing permis-    #\\n#  sions and limitations under the License.                                   #\\n###############################################################################\\nimport re\\n\\ndef get_control_id_from_arn(finding_id_arn):\\n    check_finding_id = re.match(\\n        '^arn:(?:aws|aws-cn|aws-us-gov):securityhub:(?:[a-z]{2}(?:-gov)?-[a-z]+-\\\\\\\\d):\\\\\\\\d{12}:subscription/aws-foundational-security-best-practices/v/1\\\\\\\\.0\\\\\\\\.0/(.*)/finding/(?i:[0-9a-f]{8}-(?:[0-9a-f]{4}-){3}[0-9a-f]{12})$',\\n        finding_id_arn\\n    )\\n    if check_finding_id:\\n        control_id = check_finding_id.group(1)\\n        return control_id\\n    else:\\n        exit(f'ERROR: Finding Id is invalid: {finding_id_arn}')\\n\\ndef parse_event(event, context):\\n    expected_control_id = event['expected_control_id']\\n    parse_id_pattern = event['parse_id_pattern']\\n    resource_id_matches = []\\n    finding = event['Finding']\\n    testmode = bool('testmode' in finding)\\n\\n    finding_id = finding['Id']\\n        \\n    account_id = finding.get('AwsAccountId', '')\\n    if not re.match('^\\\\\\\\d{12}$', account_id):\\n        exit(f'ERROR: AwsAccountId is invalid: {account_id}')\\n\\n    control_id = get_control_id_from_arn(finding['Id'])\\n\\n    # ControlId present and valid\\n    if not control_id:\\n        exit(f'ERROR: Finding Id is invalid: {finding_id} - missing Control Id')\\n\\n    # ControlId is the expected value\\n    if control_id not in expected_control_id:\\n        exit(f'ERROR: Control Id from input ({control_id}) does not match {str(expected_control_id)}')\\n\\n    # ProductArn present and valid\\n    product_arn = finding['ProductArn']\\n    if not re.match('^arn:(?:aws|aws-cn|aws-us-gov):securityhub:(?:[a-z]{2}(?:-gov)?-[a-z]+-\\\\\\\\d)::product/aws/securityhub$', product_arn):\\n        exit(f'ERROR: ProductArn is invalid: {product_arn}')\\n\\n    resource = finding['Resources'][0]\\n\\n    # Details\\n    details = finding['Resources'][0].get('Details', {})\\n\\n    # Regex match Id to get remediation-specific identifier\\n    identifier_raw = finding['Resources'][0]['Id']\\n    resource_id = identifier_raw\\n\\n    if parse_id_pattern:\\n        identifier_match = re.match(\\n            parse_id_pattern,\\n            identifier_raw\\n        )\\n\\n        if identifier_match:\\n            for group in range(1, len(identifier_match.groups())+1):\\n                resource_id_matches.append(identifier_match.group(group))\\n            resource_id = identifier_match.group(event.get('resource_index', 1))\\n        else:\\n            exit(f'ERROR: Invalid resource Id {identifier_raw}')   \\n\\n    if not resource_id:\\n        exit('ERROR: Resource Id is missing from the finding json Resources (Id)')\\n\\n    affected_object = {'Type': resource['Type'], 'Id': resource_id, 'OutputKey': 'Remediation.Output'}\\n    return {\\n        \\\"account_id\\\": account_id,\\n        \\\"resource_id\\\": resource_id, \\n        \\\"finding_id\\\": finding_id, \\n        \\\"control_id\\\": control_id,\\n        \\\"product_arn\\\": product_arn, \\n        \\\"object\\\": affected_object,\\n        \\\"matches\\\": resource_id_matches,\\n        \\\"details\\\": details,\\n        \\\"testmode\\\": testmode,\\n        \\\"resource\\\": resource\\n}\",\n      \"Runtime\" : \"python3.7\",\n      \"InputPayload\" : {\n        \"expected_control_id\" : \"APIGateway.3\",\n        \"parse_id_pattern\" : \"\",\n        \"Finding\" : \"{{Finding}}\"\n      },\n      \"Handler\" : \"parse_event\"\n    },\n    \"name\" : \"ParseInput\",\n    \"action\" : \"aws:executeScript\",\n    \"isEnd\" : false\n  }, {\n    \"inputs\" : {\n      \"RuntimeParameters\" : {\n        \"AutomationAssumeRole\" : \"arn:{{global:AWS_PARTITION}}:iam::{{global:ACCOUNT_ID}}:role/SO0111-Remediate-AFSBP-1.0.0-APIGateway.3\",\n        \"StageArn\" : \"{{ParseInput.StageArn}}\"\n      },\n      \"DocumentName\" : \"Copy-AWSConfigRemediation-EnableAPIGatewayTracing\"\n    },\n    \"name\" : \"Remediation\",\n    \"action\" : \"aws:executeAutomation\",\n    \"isEnd\" : false\n  }, {\n    \"inputs\" : {\n      \"FindingIdentifiers\" : [ {\n        \"ProductArn\" : \"{{ParseInput.ProductArn}}\",\n        \"Id\" : \"{{ParseInput.FindingId}}\"\n      } ],\n      \"Service\" : \"securityhub\",\n      \"Workflow\" : {\n        \"Status\" : \"RESOLVED\"\n      },\n      \"Api\" : \"BatchUpdateFindings\"\n    },\n    \"name\" : \"UpdateFinding\",\n    \"action\" : \"aws:executeAwsApi\",\n    \"description\" : \"Update finding\",\n    \"isEnd\" : true\n  } ]\n}",
  "CreatedDate": "2022-02-28T06:39:39.27Z",
  "DisplayName": null,
  "DocumentFormat": {
    "Value": "JSON"
  },
  "DocumentType": {
    "Value": "Automation"
  },
  "DocumentVersion": "1",
  "Name": "arn:aws:ssm:us-west-2:570646387953:document/SSM.4-Test_Document",
  "Requires": [],
  "ReviewStatus": null,
  "Status": {
    "Value": "Active"
  },
  "StatusInformation": null,
  "VersionName": null,
  "ResponseMetadata": {
    "RequestId": "d10ea5c0-bff9-47d1-a202-5a87048b6e7b",
    "Metadata": {},
    "ChecksumAlgorithm": 0,
    "ChecksumValidationStatus": 0
  },
  "ContentLength": 7067,
  "HttpStatusCode": 200,
  "LoggedAt": "2022-02-28T07:13:10.4842777+00:00"
}
