{
  "AttachmentsContent": [],
  "Content": "{\n  \"schemaVersion\": \"0.3\",\n  \"description\": \"The AWSSupport-TroubleshootRDP automation document allows the user to check or modify common settings on the target instance which may impact Remote Desktop Protocol (RDP) connections, such as the RDP port, Network Layer Authentication (NLA) and Windows Firewall profiles. Optionally, changes can be applied offline by stopping and starting the instance, if the user explicitly allows for offline remediation. By default, the document reads and outputs the values of the settings. IMPORTANT: Changes to the RDP settings, RDP service and Windows Firewall profiles should be carefully reviewed before running this document.\",\n  \"assumeRole\": \"{{ AutomationAssumeRole }}\",\n  \"parameters\": {\n    \"InstanceId\": {\n      \"type\": \"String\",\n      \"description\": \"(Required) The ID of the instance to troubleshoot the RDP settings of.\",\n      \"allowedPattern\": \"^[m]{0,1}i-[a-z0-9]{8,17}$\"\n    },\n    \"Action\": {\n      \"description\": \"(Optional) [Custom] Use the values from Firewall, RDPServiceStartupType, RDPServiceAction, RDPPortAction, NLASettingAction and RemoteConnections to manage the settings. [CheckAll] Read the values of the settings without changing them. [FixAll] Restore RDP default settings, and disable the Windows Firewall.\",\n      \"type\": \"String\",\n      \"allowedValues\": [\n        \"CheckAll\",\n        \"FixAll\",\n        \"Custom\"\n      ],\n      \"default\": \"Custom\"\n    },\n    \"AllowOffline\": {\n      \"type\": \"String\",\n      \"description\": \"(Optional) Fix only - Set it to true if you allow an offline RDP remediation in case the online troubleshooting fails, or the provided instance is not a managed instance. Note: For the offline remediation, SSM Automation stops the instance, and creates an AMI before attempting any operations.\",\n      \"default\": \"False\",\n      \"allowedValues\": [\n        \"True\",\n        \"False\"\n      ]\n    },\n    \"Firewall\": {\n      \"type\": \"String\",\n      \"description\": \"(Optional) Check or disable the Windows firewall (all profiles).\",\n      \"default\": \"Check\",\n      \"allowedValues\": [\n        \"Check\",\n        \"Disable\"\n      ]\n    },\n    \"RDPServiceStartupType\": {\n      \"type\": \"String\",\n      \"description\": \"(Optional) Check or set the RDP service to automatically start when Windows boots.\",\n      \"default\": \"Check\",\n      \"allowedValues\": [\n        \"Check\",\n        \"Auto\"\n      ]\n    },\n    \"RDPServiceAction\": {\n      \"type\": \"String\",\n      \"description\": \"(Optional) Check, start, restart, or force-restart the RDP service (TermService).\",\n      \"default\": \"Check\",\n      \"allowedValues\": [\n        \"Check\",\n        \"Start\",\n        \"Restart\",\n        \"Force-Restart\"\n      ]\n    },\n    \"RDPPortAction\": {\n      \"type\": \"String\",\n      \"description\": \"(Optional) Check the current port used for RDP connections, or modify the RDP port back to 3389 and restart the service.\",\n      \"default\": \"Check\",\n      \"allowedValues\": [\n        \"Check\",\n        \"Modify\"\n      ]\n    },\n    \"NLASettingAction\": {\n      \"type\": \"String\",\n      \"description\": \"(Optional) Check or disable Network Layer Authentication (NLA).\",\n      \"default\": \"Check\",\n      \"allowedValues\": [\n        \"Check\",\n        \"Disable\"\n      ]\n    },\n    \"RemoteConnections\": {\n      \"type\": \"String\",\n      \"description\": \"(Optional) An action to perform on the fDenyTSConnections setting: Check, Enable.\",\n      \"default\": \"Check\",\n      \"allowedValues\": [\n        \"Check\",\n        \"Enable\"\n      ]\n    },\n    \"SubnetId\": {\n      \"type\": \"String\",\n      \"description\": \"(Optional) Offline only - The subnet ID for the EC2Rescue instance used to perform the offline troubleshooting. If no subnet ID is specified, AWS Systems Manager Automation will create a new VPC. IMPORTANT: The subnet must be in the same Availability Zone as InstanceId, and it must allow access to the SSM endpoints.\",\n      \"default\": \"SelectedInstanceSubnet\",\n      \"allowedPattern\": \"^$|^subnet-[a-z0-9]{8,17}$|SelectedInstanceSubnet\"\n    },\n    \"S3BucketName\": {\n      \"description\": \"(Optional) Offline only - S3 bucket name in your account where you want to upload the troubleshooting logs. Make sure the bucket policy does not grant unnecessary read/write permissions to parties that do not need access to the collected logs.\",\n      \"allowedPattern\": \"^$|^[_a-zA-Z0-9][-._a-zA-Z0-9]{2,62}$\",\n      \"type\": \"String\",\n      \"default\": \"\"\n    },\n    \"AutomationAssumeRole\": {\n      \"type\": \"String\",\n      \"description\": \"(Optional) The IAM role for this execution. If no role is specified, AWS Systems Manager Automation will use the permissions of the user that executes this document.\",\n      \"default\": \"\"\n    }\n  },\n  \"mainSteps\": [\n    {\n      \"name\": \"assertInstanceIsWindows\",\n      \"action\": \"aws:assertAwsResourceProperty\",\n      \"onFailure\": \"Abort\",\n      \"inputs\": {\n        \"Service\": \"ec2\",\n        \"Api\": \"DescribeInstances\",\n        \"InstanceIds\": [\n          \"{{ InstanceId }}\"\n        ],\n        \"PropertySelector\": \"$.Reservations[0].Instances[0].Platform\",\n        \"DesiredValues\": [\n          \"windows\"\n        ]\n      },\n      \"isCritical\": \"true\"\n    },\n    {\n      \"name\": \"assertInstanceIsManagedInstance\",\n      \"action\": \"aws:assertAwsResourceProperty\",\n      \"onFailure\": \"step:assertAllowOffline\",\n      \"inputs\": {\n        \"Service\": \"ssm\",\n        \"Api\": \"DescribeInstanceInformation\",\n        \"InstanceInformationFilterList\": [\n          {\n            \"key\": \"InstanceIds\",\n            \"valueSet\": [\n              \"{{ InstanceId }}\"\n            ]\n          }\n        ],\n        \"PropertySelector\": \"$.InstanceInformationList[0].PingStatus\",\n        \"DesiredValues\": [\n          \"Online\"\n        ]\n      },\n      \"isCritical\": \"false\",\n      \"nextStep\": \"assertActionIsCustom\"\n    },\n    {\n      \"name\": \"assertActionIsCustom\",\n      \"action\": \"aws:assertAwsResourceProperty\",\n      \"onFailure\": \"step:assertActionIsCheckAll\",\n      \"inputs\": {\n        \"Service\": \"ssm\",\n        \"Api\": \"GetAutomationExecution\",\n        \"AutomationExecutionId\": \"{{ automation:EXECUTION_ID }}\",\n        \"PropertySelector\": \"AutomationExecution.Parameters.Action[0]\",\n        \"DesiredValues\": [\n          \"Custom\"\n        ]\n      },\n      \"isCritical\": \"false\",\n      \"nextStep\": \"manageFirewallProfiles\"\n    },\n    {\n      \"name\": \"manageFirewallProfiles\",\n      \"action\": \"aws:runCommand\",\n      \"onFailure\": \"Continue\",\n      \"inputs\": {\n        \"DocumentName\": \"AWS-RunPowerShellScript\",\n        \"InstanceIds\": [\n          \"{{ InstanceId }}\"\n        ],\n        \"Parameters\": {\n          \"commands\": [\n            \"Function Invoke-FirewallAction {\",\n            \"\",\n            \"    param (\",\n            \"        [Parameter(Mandatory = $true)]\",\n            \"        [ValidateSet(\\\"Check\\\", \\\"Disable\\\")] \",\n            \"        [String]$FirewallAction\",\n            \"    )\",\n            \"\",\n            \"    Try {\",\n            \"\",\n            \"        If ( $FirewallAction -eq \\\"Check\\\") {\",\n            \"\",\n            \"            & \\\"${env:SYSTEMROOT}\\\\system32\\\\netsh.exe\\\" advfirewall show allprofiles \",\n            \"\",\n            \"        }\",\n            \"        else {\",\n            \"\",\n            \"            #Turn off firewall (Domain, Private, Public profile)\",\n            \"            & \\\"${env:SYSTEMROOT}\\\\system32\\\\netsh.exe\\\" advfirewall set allprofiles state off > $null\",\n            \"            Write-Host \\\"All Windows firewall profiles have been disabled (Domain, Private, Public).\\\"\",\n            \"\",\n            \"        }\",\n            \"    }\",\n            \"    Catch {\",\n            \"\",\n            \"        throw \\\"Unable to apply action $FirewallAction to firewall. Reason: \\\" + $_.Exception.Message\",\n            \"\",\n            \"    }\",\n            \"\",\n            \"}\",\n            \"\",\n            \"Try {\",\n            \"\",\n            \"    #Input variables \",\n            \"    $documentActionInput = \\\"{{ Action }}\\\"\",\n            \"    $firewallInput = \\\"{{ Firewall }}\\\"\",\n            \"\",\n            \"    switch ($documentActionInput) {\",\n            \"        \\\"Custom\\\" { $firewallAction = $firewallInput }\",\n            \"        \\\"CheckAll\\\" { $firewallAction = \\\"Check\\\" }\",\n            \"        \\\"FixAll\\\" { $firewallAction = \\\"Disable\\\" }\",\n            \"        default { throw \\\"Unexpected input.\\\"} \",\n            \"    }\",\n            \"\",\n            \"    #Firewall Action\",\n            \"    Invoke-FirewallAction -FirewallAction $firewallAction\",\n            \"\",\n            \"}\",\n            \"Catch {\",\n            \"\",\n            \"    Write-Host $_.Exception.Message\",\n            \"    Exit 1\",\n            \"\",\n            \"}\"\n          ]\n        }\n      },\n      \"isCritical\": \"true\",\n      \"nextStep\": \"manageRDPServiceSettings\"\n    },\n    {\n      \"name\": \"manageRDPServiceSettings\",\n      \"action\": \"aws:executeAutomation\",\n      \"onFailure\": \"Continue\",\n      \"inputs\": {\n        \"DocumentName\": \"AWSSupport-ManageWindowsService\",\n        \"RuntimeParameters\": {\n          \"InstanceId\": [\n            \"{{ InstanceId }}\"\n          ],\n          \"WindowsServiceName\": [\n            \"TermService\"\n          ],\n          \"StartupType\": [\n            \"{{ RDPServiceStartupType }}\"\n          ],\n          \"ServiceAction\": [\n            \"{{ RDPServiceAction }}\"\n          ]\n        }\n      },\n      \"isCritical\": \"true\",\n      \"nextStep\": \"manageRDPSettings\"\n    },\n    {\n      \"name\": \"manageRDPSettings\",\n      \"action\": \"aws:executeAutomation\",\n      \"onFailure\": \"Abort\",\n      \"inputs\": {\n        \"DocumentName\": \"AWSSupport-ManageRDPSettings\",\n        \"RuntimeParameters\": {\n          \"InstanceId\": [\n            \"{{ InstanceId }}\"\n          ],\n          \"RDPPortAction\": [\n            \"{{ RDPPortAction }}\"\n          ],\n          \"RDPPort\": [\n            \"3389\"\n          ],\n          \"NLASettingAction\": [\n            \"{{ NLASettingAction }}\"\n          ],\n          \"RemoteConnections\": [\n            \"{{ RemoteConnections }}\"\n          ]\n        }\n      },\n      \"isEnd\": \"true\"\n    },\n    {\n      \"name\": \"assertActionIsCheckAll\",\n      \"action\": \"aws:assertAwsResourceProperty\",\n      \"onFailure\": \"step:assertActionIsFixAll\",\n      \"inputs\": {\n        \"Service\": \"ssm\",\n        \"Api\": \"GetAutomationExecution\",\n        \"AutomationExecutionId\": \"{{ automation:EXECUTION_ID }}\",\n        \"PropertySelector\": \"$.AutomationExecution.Parameters.Action[0]\",\n        \"DesiredValues\": [\n          \"CheckAll\"\n        ]\n      },\n      \"isCritical\": \"false\",\n      \"nextStep\": \"checkFirewallProfiles\"\n    },\n    {\n      \"name\": \"checkFirewallProfiles\",\n      \"action\": \"aws:runCommand\",\n      \"onFailure\": \"Continue\",\n      \"inputs\": {\n        \"DocumentName\": \"AWS-RunPowerShellScript\",\n        \"InstanceIds\": [\n          \"{{ InstanceId }}\"\n        ],\n        \"Parameters\": {\n          \"commands\": [\n            \"Function Invoke-FirewallAction {\",\n            \"\",\n            \"    param (\",\n            \"        [Parameter(Mandatory = $true)]\",\n            \"        [ValidateSet(\\\"Check\\\", \\\"Disable\\\")] \",\n            \"        [String]$FirewallAction\",\n            \"    )\",\n            \"\",\n            \"    Try {\",\n            \"\",\n            \"        If ( $FirewallAction -eq \\\"Check\\\") {\",\n            \"\",\n            \"            & \\\"${env:SYSTEMROOT}\\\\system32\\\\netsh.exe\\\" advfirewall show allprofiles \",\n            \"\",\n            \"        }\",\n            \"        else {\",\n            \"\",\n            \"            #Turn off firewall (Domain, Private, Public profile)\",\n            \"            & \\\"${env:SYSTEMROOT}\\\\system32\\\\netsh.exe\\\" advfirewall set allprofiles state off > $null\",\n            \"            Write-Host \\\"All Windows firewall profiles have been disabled (Domain, Private, Public).\\\"\",\n            \"\",\n            \"        }\",\n            \"    }\",\n            \"    Catch {\",\n            \"\",\n            \"        throw \\\"Unable to apply action $FirewallAction to firewall. Reason: \\\" + $_.Exception.Message\",\n            \"\",\n            \"    }\",\n            \"\",\n            \"}\",\n            \"\",\n            \"Try {\",\n            \"\",\n            \"    #Input variables \",\n            \"    $documentActionInput = \\\"{{ Action }}\\\"\",\n            \"    $firewallInput = \\\"{{ Firewall }}\\\"\",\n            \"\",\n            \"    switch ($documentActionInput) {\",\n            \"        \\\"Custom\\\" { $firewallAction = $firewallInput }\",\n            \"        \\\"CheckAll\\\" { $firewallAction = \\\"Check\\\" }\",\n            \"        \\\"FixAll\\\" { $firewallAction = \\\"Disable\\\" }\",\n            \"        default { throw \\\"Unexpected input.\\\"} \",\n            \"    }\",\n            \"\",\n            \"    #Firewall Action\",\n            \"    Invoke-FirewallAction -FirewallAction $firewallAction\",\n            \"\",\n            \"}\",\n            \"Catch {\",\n            \"\",\n            \"    Write-Host $_.Exception.Message\",\n            \"    Exit 1\",\n            \"\",\n            \"}\"\n          ]\n        }\n      },\n      \"isCritical\": \"true\",\n      \"nextStep\": \"checkRDPServiceSettings\"\n    },\n    {\n      \"name\": \"checkRDPServiceSettings\",\n      \"action\": \"aws:executeAutomation\",\n      \"onFailure\": \"Continue\",\n      \"inputs\": {\n        \"DocumentName\": \"AWSSupport-ManageWindowsService\",\n        \"RuntimeParameters\": {\n          \"InstanceId\": [\n            \"{{ InstanceId }}\"\n          ],\n          \"WindowsServiceName\": [\n            \"TermService\"\n          ],\n          \"StartupType\": [\n            \"Check\"\n          ],\n          \"ServiceAction\": [\n            \"Check\"\n          ]\n        }\n      },\n      \"isCritical\": \"true\",\n      \"nextStep\": \"checkRDPSettings\"\n    },\n    {\n      \"name\": \"checkRDPSettings\",\n      \"action\": \"aws:executeAutomation\",\n      \"onFailure\": \"Abort\",\n      \"inputs\": {\n        \"DocumentName\": \"AWSSupport-ManageRDPSettings\",\n        \"RuntimeParameters\": {\n          \"InstanceId\": [\n            \"{{ InstanceId }}\"\n          ],\n          \"RDPPortAction\": [\n            \"Check\"\n          ],\n          \"NLASettingAction\": [\n            \"Check\"\n          ],\n          \"RemoteConnections\": [\n            \"Check\"\n          ]\n        }\n      },\n      \"isEnd\": \"true\"\n    },\n    {\n      \"name\": \"assertActionIsFixAll\",\n      \"action\": \"aws:assertAwsResourceProperty\",\n      \"onFailure\": \"Abort\",\n      \"inputs\": {\n        \"Service\": \"ssm\",\n        \"Api\": \"GetAutomationExecution\",\n        \"AutomationExecutionId\": \"{{ automation:EXECUTION_ID }}\",\n        \"PropertySelector\": \"$.AutomationExecution.Parameters.Action[0]\",\n        \"DesiredValues\": [\n          \"FixAll\"\n        ]\n      },\n      \"nextStep\": \"disableFirewallProfiles\"\n    },\n    {\n      \"name\": \"disableFirewallProfiles\",\n      \"action\": \"aws:runCommand\",\n      \"onFailure\": \"Continue\",\n      \"inputs\": {\n        \"DocumentName\": \"AWS-RunPowerShellScript\",\n        \"InstanceIds\": [\n          \"{{ InstanceId }}\"\n        ],\n        \"Parameters\": {\n          \"commands\": [\n            \"Function Invoke-FirewallAction {\",\n            \"\",\n            \"    param (\",\n            \"        [Parameter(Mandatory = $true)]\",\n            \"        [ValidateSet(\\\"Check\\\", \\\"Disable\\\")] \",\n            \"        [String]$FirewallAction\",\n            \"    )\",\n            \"\",\n            \"    Try {\",\n            \"\",\n            \"        If ( $FirewallAction -eq \\\"Check\\\") {\",\n            \"\",\n            \"            & \\\"${env:SYSTEMROOT}\\\\system32\\\\netsh.exe\\\" advfirewall show allprofiles \",\n            \"\",\n            \"        }\",\n            \"        else {\",\n            \"\",\n            \"            #Turn off firewall (Domain, Private, Public profile)\",\n            \"            & \\\"${env:SYSTEMROOT}\\\\system32\\\\netsh.exe\\\" advfirewall set allprofiles state off > $null\",\n            \"            Write-Host \\\"All Windows firewall profiles have been disabled (Domain, Private, Public).\\\"\",\n            \"\",\n            \"        }\",\n            \"    }\",\n            \"    Catch {\",\n            \"\",\n            \"        throw \\\"Unable to apply action $FirewallAction to firewall. Reason: \\\" + $_.Exception.Message\",\n            \"\",\n            \"    }\",\n            \"\",\n            \"}\",\n            \"\",\n            \"Try {\",\n            \"\",\n            \"    #Input variables \",\n            \"    $documentActionInput = \\\"{{ Action }}\\\"\",\n            \"    $firewallInput = \\\"{{ Firewall }}\\\"\",\n            \"\",\n            \"    switch ($documentActionInput) {\",\n            \"        \\\"Custom\\\" { $firewallAction = $firewallInput }\",\n            \"        \\\"CheckAll\\\" { $firewallAction = \\\"Check\\\" }\",\n            \"        \\\"FixAll\\\" { $firewallAction = \\\"Disable\\\" }\",\n            \"        default { throw \\\"Unexpected input.\\\"} \",\n            \"    }\",\n            \"\",\n            \"    #Firewall Action\",\n            \"    Invoke-FirewallAction -FirewallAction $firewallAction\",\n            \"\",\n            \"}\",\n            \"Catch {\",\n            \"\",\n            \"    Write-Host $_.Exception.Message\",\n            \"    Exit 1\",\n            \"\",\n            \"}\"\n          ]\n        }\n      },\n      \"isCritical\": \"true\",\n      \"nextStep\": \"restoreDefaultRDPServiceSettings\"\n    },\n    {\n      \"name\": \"restoreDefaultRDPServiceSettings\",\n      \"action\": \"aws:executeAutomation\",\n      \"onFailure\": \"Continue\",\n      \"inputs\": {\n        \"DocumentName\": \"AWSSupport-ManageWindowsService\",\n        \"RuntimeParameters\": {\n          \"InstanceId\": [\n            \"{{ InstanceId }}\"\n          ],\n          \"WindowsServiceName\": [\n            \"TermService\"\n          ],\n          \"StartupType\": [\n            \"Auto\"\n          ],\n          \"ServiceAction\": [\n            \"Start\"\n          ]\n        }\n      },\n      \"isCritical\": \"true\",\n      \"nextStep\": \"restoreDefaultRDPSettings\"\n    },\n    {\n      \"name\": \"restoreDefaultRDPSettings\",\n      \"action\": \"aws:executeAutomation\",\n      \"onFailure\": \"Abort\",\n      \"inputs\": {\n        \"DocumentName\": \"AWSSupport-ManageRDPSettings\",\n        \"RuntimeParameters\": {\n          \"InstanceId\": [\n            \"{{ InstanceId }}\"\n          ],\n          \"RDPPortAction\": [\n            \"Modify\"\n          ],\n          \"RDPPort\": [\n            \"3389\"\n          ],\n          \"NLASettingAction\": [\n            \"Disable\"\n          ],\n          \"RemoteConnections\": [\n            \"Enable\"\n          ]\n        }\n      },\n      \"isEnd\": \"true\"\n    },\n    {\n      \"name\": \"assertAllowOffline\",\n      \"action\": \"aws:assertAwsResourceProperty\",\n      \"onFailure\": \"Abort\",\n      \"inputs\": {\n        \"Service\": \"ssm\",\n        \"Api\": \"GetAutomationExecution\",\n        \"AutomationExecutionId\": \"{{ automation:EXECUTION_ID }}\",\n        \"PropertySelector\": \"$.AutomationExecution.Parameters.AllowOffline[0]\",\n        \"DesiredValues\": [\n          \"True\"\n        ]\n      },\n      \"nextStep\": \"assertActionIsFixAllForOfflineBranch\"\n    },\n    {\n      \"name\": \"assertActionIsFixAllForOfflineBranch\",\n      \"action\": \"aws:assertAwsResourceProperty\",\n      \"onFailure\": \"Abort\",\n      \"inputs\": {\n        \"Service\": \"ssm\",\n        \"Api\": \"GetAutomationExecution\",\n        \"AutomationExecutionId\": \"{{ automation:EXECUTION_ID }}\",\n        \"PropertySelector\": \"$.AutomationExecution.Parameters.Action[0]\",\n        \"DesiredValues\": [\n          \"FixAll\"\n        ]\n      },\n      \"nextStep\": \"assertSubnetId\"\n    },\n    {\n      \"name\": \"assertSubnetId\",\n      \"action\": \"aws:assertAwsResourceProperty\",\n      \"onFailure\": \"step:troubleshootRDPOffline\",\n      \"inputs\": {\n        \"Service\": \"ssm\",\n        \"Api\": \"GetAutomationExecution\",\n        \"AutomationExecutionId\": \"{{ automation:EXECUTION_ID }}\",\n        \"PropertySelector\": \"$.AutomationExecution.Parameters.SubnetId[0]\",\n        \"DesiredValues\": [\n          \"SelectedInstanceSubnet\"\n        ]\n      },\n      \"isCritical\": \"false\",\n      \"nextStep\": \"describeSourceInstance\"\n    },\n    {\n      \"name\": \"describeSourceInstance\",\n      \"action\": \"aws:executeAwsApi\",\n      \"onFailure\": \"Abort\",\n      \"inputs\": {\n        \"Service\": \"ec2\",\n        \"Api\": \"DescribeInstances\",\n        \"InstanceIds\": [\n          \"{{ InstanceId }}\"\n        ]\n      },\n      \"outputs\": [\n        {\n          \"Name\": \"SubnetId\",\n          \"Selector\": \"$.Reservations[0].Instances[0].NetworkInterfaces[0].SubnetId\",\n          \"Type\": \"String\"\n        }\n      ],\n      \"nextStep\": \"troubleshootRDPOfflineWithSubnetId\"\n    },\n    {\n      \"name\": \"troubleshootRDPOffline\",\n      \"action\": \"aws:executeAutomation\",\n      \"onFailure\": \"Abort\",\n      \"inputs\": {\n        \"RuntimeParameters\": {\n          \"UnreachableInstanceId\": [\n            \"{{ InstanceId }}\"\n          ],\n          \"SubnetId\": [\n            \"{{ SubnetId }}\"\n          ],\n          \"LogDestination\": [\n            \"{{ S3BucketName }}\"\n          ],\n          \"AssumeRole\": [\n            \"{{ AutomationAssumeRole }}\"\n          ]\n        },\n        \"DocumentName\": \"AWSSupport-ExecuteEC2Rescue\"\n      },\n      \"isEnd\": \"true\"\n    },\n    {\n      \"name\": \"troubleshootRDPOfflineWithSubnetId\",\n      \"action\": \"aws:executeAutomation\",\n      \"onFailure\": \"Abort\",\n      \"inputs\": {\n        \"RuntimeParameters\": {\n          \"UnreachableInstanceId\": [\n            \"{{ InstanceId }}\"\n          ],\n          \"SubnetId\": [\n            \"{{ describeSourceInstance.SubnetId }}\"\n          ],\n          \"LogDestination\": [\n            \"{{ S3BucketName }}\"\n          ],\n          \"AssumeRole\": [\n            \"{{ AutomationAssumeRole }}\"\n          ]\n        },\n        \"DocumentName\": \"AWSSupport-ExecuteEC2Rescue\"\n      },\n      \"isEnd\": \"true\"\n    }\n  ],\n  \"outputs\": [\n    \"manageFirewallProfiles.Output\",\n    \"manageRDPServiceSettings.Output\",\n    \"manageRDPSettings.Output\",\n    \"checkFirewallProfiles.Output\",\n    \"checkRDPServiceSettings.Output\",\n    \"checkRDPSettings.Output\",\n    \"disableFirewallProfiles.Output\",\n    \"restoreDefaultRDPServiceSettings.Output\",\n    \"restoreDefaultRDPSettings.Output\",\n    \"troubleshootRDPOffline.Output\",\n    \"troubleshootRDPOfflineWithSubnetId.Output\"\n  ]\n}",
  "CreatedDate": "2018-09-22T01:32:57.219Z",
  "DisplayName": null,
  "DocumentFormat": {
    "Value": "JSON"
  },
  "DocumentType": {
    "Value": "Automation"
  },
  "DocumentVersion": "3",
  "Name": "AWSSupport-TroubleshootRDP",
  "Requires": [],
  "ReviewStatus": null,
  "Status": {
    "Value": "Active"
  },
  "StatusInformation": null,
  "VersionName": null,
  "ResponseMetadata": {
    "RequestId": "12da88a5-05f4-4c8e-bcb4-ea57c0a1915f",
    "Metadata": {},
    "ChecksumAlgorithm": 0,
    "ChecksumValidationStatus": 0
  },
  "ContentLength": 24296,
  "HttpStatusCode": 200,
  "LoggedAt": "2022-12-23T07:11:36.3236362+00:00"
}
