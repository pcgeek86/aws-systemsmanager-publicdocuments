{
  "AttachmentsContent": [
    {
      "Hash": "881072d6d71379f8c627366e9f2b640955ccfdf60065dfd5bafca64610711c5e",
      "HashType": {
        "Value": "Sha256"
      },
      "Name": "attachment.zip",
      "Size": 20205,
      "Url": "https://aws-ssm-document-attachments-us-west-2.s3.us-west-2.amazonaws.com/947/190294270367/Automation/AWSSupport-TroubleshootS3AccessSameAccount%21165ca3f2-f10f-4b10-8762-b11c4c53b7e0/4/attachment.zip?x-attachment-size=20205&x-requester-accountId=987868780346&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEKf%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIQC4L5BPZ60ypMGdb7P3%2BGQe8cKxoIi0Gl3dTEqrYwO0nAIgDrC0tFsIvrandJYHoPtv7obUjWP38ysLJhrFDvjKzp4q2wQIz%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FARADGgwyNDk5MjQ1Mjc0MTAiDEKlpWJ7Vub9oeTEYiqvBBnpLvcSkhnJDjURDX8TAqGmncTpLOWuxbuFvVtmMdUYamVGEebptXhShEo4QbqJ5%2F69%2BAKrdxV8ciQHMtP8eie4%2FTb8wQMrXqD1mkst89jBEjai3YA%2FAUp0ycXS2iIfW6XK8YjoPNkuJkv23qvJP2n%2B3qBmKZUL%2FW1PDxTnASuKkB91Vfai7Bll8tdog9YAjEPDNPahKIFCXAazxeqhR4TgORGFbyfP6D9uLAwoWjnX7gsq5AeClqPH76IaKpjTaJ24yEF3CTTbvOx8wySCLwOmkSYPpW31vX3RJIOxPCiBD3Jj8DNWVR836NHK%2FBqOz6fnZ8auF3xM6c9xzEypwTquZR7y0iyMGEmketQd%2FpXBaIKaZOR%2FIvztb9hDaMH7hP6F28Cs4eL4shd0AJ2IsI%2FwKga6XERL4kIv84%2BaB12rgwRaQkZTElWx0LY%2B2FL2yAfPAhZ1SORz4ePkE90veHg%2F4HXMN9ZSr3%2FN5dCaHzVoHXzrO0Hl7ElUin9IdU2jAIW%2BFUzSVwEJzsMX%2F7KfNjzZOGe7tg%2BuS3KBq6CRpymDQsX471xoubqWzlMr%2FFeAhqN659lZcElOYBPSmRUxxQm9rwcQypo9MKkdATSS46FO%2BnPUYUAr40zdWz9arcesAMEz8mOO5DAvfOSrhtQQZvJm0HXE6FDxwwSZJezQO65N9%2BzPMuMfoDR5X4%2F5AVzXvm7umONLrwBs5MJH8zsgil8Qmlc83Bg84YTJHZBD%2Ft4w3PeZlgY6qQGW%2FwqNizruM6W6yMpkciUkRnWCQn0KpgTqF3J829ml67XGvpgD1%2FO9SWe0MnZRWCZXQytMnc%2FfAM8xCZkappczDKi3Uq%2FvF1vzx2nV%2B7E6Rnq%2Fs2GY6B1jC22%2F6qMP9C37vFspJ5g0%2Bi219uh7ttgMKDz8AK%2FdJ6Og3oeXtxiKxlLxi2KQPHWyJ%2BKHLmWfsV3CjDXw%2Bo0uii6MAzfdc1B%2FrY3tDBBzMHPb&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Date=20220707T071259Z&X-Amz-SignedHeaders=host&X-Amz-Expires=86400&X-Amz-Credential=ASIATUMFJUUZIOANG46Y%2F20220707%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Signature=3ef1e38ffa6dc82c4726a76ce6e13cd80f3aee0e0ca3f52dc7ad5739b1c94251"
    }
  ],
  "Content": "{\n  \"description\": \"The **AWSSupport-TroubleshootS3AccessSameAccount** runbook helps diagnose Amazon Simple Storage Service (Amazon S3) access denied issues on bucket or object operations by evaluating the access level granted to the requester (IAM user or role) on your S3 resource. The runbook evaluates all the relevant access policies, user policies, and resource-based policies (bucket policy, bucket ACL, object ACL) associated with the S3 resource and the IAM user or role specified in the input parameters.\\n\\n### Important\\n> * You can only use this runbook to evaluate access denied issues if the requestor is in the same AWS account as the S3 bucket/object.\\n\\n> * Please make sure that your user or the 'AutomationAssumeRole' used to run this runbook has the necessary permissions to get/list the relevant resource policies and bucket/key metadata configuration.\\n\\n> * If there is a NotPrincipal element in the Resource Policy, the runbook will throw an error in the step 'PolicyModifier'\",\n  \"schemaVersion\": \"0.3\",\n  \"assumeRole\": \"{{AutomationAssumeRole}}\",\n  \"parameters\": {\n    \"AutomationAssumeRole\": {\n      \"type\": \"String\",\n      \"description\": \"(Optional) The ARN of the role that allows the Automation to perform the actions on your behalf. If no role is specified, Systems Manager Automation uses your user context IAM permissions to run this document.\",\n      \"allowedPattern\": \"^$|^arn:(aws|aws-cn|aws-us-gov):iam::\\\\d{12}:role\\\\/[\\\\w+=/,.@-]+$\",\n      \"default\": \"\"\n    },\n    \"S3ResourceArn\": {\n      \"type\": \"String\",\n      \"description\": \"(Required) The ARN of your Amazon S3 resource (bucket or key). For object operations such as PutObject or GetObject, please provide the ARN of the object. Example: arn:aws:s3:::bucket_name, or arn:aws:s3:::bucket_name/key_name. \",\n      \"allowedPattern\": \"^arn:(aws|aws-cn|aws-us-gov):s3:::[ a-zA-Z0-9/\\\\.\\\\-_\\\\\\\\]{1,2048}$\"\n    },\n    \"S3Action\": {\n      \"type\": \"String\",\n      \"description\": \"(Required) The S3 Action for which you want the runbook to evaluate the access context for. Make sure you provide the corresponding S3 resource type (bucket or object) for the specific action.\",\n      \"allowedValues\": [\n        \"AbortMultipartUpload\",\n        \"CompleteMultipartUpload\",\n        \"CreateBucket\",\n        \"CreateMultipartUpload\",\n        \"DeleteBucket\",\n        \"DeleteBucketAnalyticsConfiguration\",\n        \"DeleteBucketCors\",\n        \"DeleteBucketEncryption\",\n        \"DeleteBucketIntelligentTieringConfiguration\",\n        \"DeleteBucketInventoryConfiguration\",\n        \"DeleteBucketLifecycle\",\n        \"DeleteBucketMetricsConfiguration\",\n        \"DeleteBucketOwnershipControls\",\n        \"DeleteBucketPolicy\",\n        \"DeleteBucketReplication\",\n        \"DeleteBucketTagging\",\n        \"DeleteBucketWebsite\",\n        \"DeleteObject\",\n        \"DeleteObjects\",\n        \"DeleteObjectTagging\",\n        \"DeletePublicAccessBlock\",\n        \"GetBucketAccelerateConfiguration\",\n        \"GetBucketAcl\",\n        \"GetBucketAnalyticsConfiguration\",\n        \"GetBucketCors\",\n        \"GetBucketEncryption\",\n        \"GetBucketIntelligentTieringConfiguration\",\n        \"GetBucketInventoryConfiguration\",\n        \"GetBucketLifecycle\",\n        \"GetBucketLifecycleConfiguration\",\n        \"GetBucketLocation\",\n        \"GetBucketLogging\",\n        \"GetBucketMetricsConfiguration\",\n        \"GetBucketNotification\",\n        \"GetBucketNotificationConfiguration\",\n        \"GetBucketOwnershipControls\",\n        \"GetBucketPolicy\",\n        \"GetBucketPolicyStatus\",\n        \"GetBucketReplication\",\n        \"GetBucketRequestPayment\",\n        \"GetBucketTagging\",\n        \"GetBucketVersioning\",\n        \"GetBucketWebsite\",\n        \"GetObject\",\n        \"GetObjectAcl\",\n        \"GetObjectLegalHold\",\n        \"GetObjectLockConfiguration\",\n        \"GetObjectRetention\",\n        \"GetObjectTagging\",\n        \"GetObjectTorrent\",\n        \"GetPublicAccessBlock\",\n        \"HeadBucket\",\n        \"HeadObject\",\n        \"ListBucketAnalyticsConfigurations\",\n        \"ListBucketIntelligentTieringConfigurations\",\n        \"ListBucketInventoryConfigurations\",\n        \"ListBucketMetricsConfigurations\",\n        \"ListBuckets\",\n        \"ListMultipartUploads\",\n        \"ListObjects\",\n        \"ListObjectsV2\",\n        \"ListObjectVersions\",\n        \"ListParts\",\n        \"PutBucketAccelerateConfiguration\",\n        \"PutBucketAcl\",\n        \"PutBucketAnalyticsConfiguration\",\n        \"PutBucketCors\",\n        \"PutBucketEncryption\",\n        \"PutBucketIntelligentTieringConfiguration\",\n        \"PutBucketInventoryConfiguration\",\n        \"PutBucketLifecycle\",\n        \"PutBucketLifecycleConfiguration\",\n        \"PutBucketLogging\",\n        \"PutBucketMetricsConfiguration\",\n        \"PutBucketNotification\",\n        \"PutBucketNotificationConfiguration\",\n        \"PutBucketOwnershipControls\",\n        \"PutBucketPolicy\",\n        \"PutBucketReplication\",\n        \"PutBucketRequestPayment\",\n        \"PutBucketTagging\",\n        \"PutBucketVersioning\",\n        \"PutBucketWebsite\",\n        \"PutObject\",\n        \"PutObjectAcl\",\n        \"PutObjectLegalHold\",\n        \"PutObjectLockConfiguration\",\n        \"PutObjectRetention\",\n        \"PutObjectTagging\",\n        \"PutPublicAccessBlock\",\n        \"RestoreObject\",\n        \"SelectObjectContent\",\n        \"UploadPart\"\n      ]\n    },\n    \"RequesterArn\": {\n      \"type\": \"String\",\n      \"description\": \"(Required) The IAM Principal (user or role) ARN for which you want to find the access level on the specific S3 resource. For example: arn:aws:iam::123456789012:user/user_name or arn:aws:iam::123456789012:role/example-role.\",\n      \"allowedPattern\": \"^arn:(aws|aws-cn|aws-us-gov):(iam|sts)::\\\\d{12}:(role|user)\\\\/[\\\\w+/=,.@-]+$\"\n    },\n    \"RequesterRoleSessionName\": {\n      \"type\": \"String\",\n      \"description\": \"(Optional) The session name of the assumed role, in case the IAM ARN is a role and you want to provide a specific session name.\",\n      \"allowedPattern\": \"^$|^[\\\\w+/=,.@-]{1,255}$\",\n      \"default\": \"\"\n    },\n    \"S3ObjectVersionId\": {\n      \"type\": \"String\",\n      \"description\": \"(Optional) If the object has multiple versions, this parameter allows you to specify the specific version of the object you want to evaluate the access context.\",\n      \"default\": \"\",\n      \"allowedPattern\": \"^$|^[\\\\w+=,.@-]{1,1024}$\"\n    },\n    \"KmsKeyArn\": {\n      \"type\": \"String\",\n      \"description\": \"(Optional) The KMS Key ARN if it is relevant to the action, example: 'CompleteMultipartUpload','CopyObject','CreateMultipartUpload','PutObject', etc., and the type of resource (bucket or object) for which you want to evaluate the access context.\",\n      \"default\": \"\",\n      \"allowedPattern\": \"^$|^arn:(aws|aws-cn|aws-us-gov):kms:[-a-z0-9]*:[0-9]*:key/[-a-z0-9]*$\"\n    },\n    \"VpcEndpointId\": {\n      \"type\": \"String\",\n      \"description\": \"(Optional) The virtual private cloud (VPC) endpoint ID related to the access evaluation. Amazon S3 bucket policies can control access to buckets from specific virtual private cloud (VPC) endpoints.\",\n      \"default\": \"\",\n      \"allowedPattern\": \"^$|^vpce-[0-9a-zA-Z]{17,17}$\"\n    },\n    \"ContextKeyList\": {\n      \"type\": \"MapList\",\n      \"description\": \"(Optional) Condition keys list and corresponding values with respect to the policy evaluation. For example: [{\\\"ContextKeyName\\\":\\\"aws:PrincipalArn\\\",\\\"ContextKeyValues\\\":[\\\"arn:aws:iam::123456789012:root\\\"],\\\"ContextKeyType\\\":\\\"string\\\"},{\\\"ContextKeyName\\\":\\\"aws:SourceIp\\\",\\\"ContextKeyValues\\\":[\\\"54.240.143.0/24\\\"],\\\"ContextKeyType\\\":\\\"ip\\\"}]\\n(Please remove any new lines, tabs, or white spaces when you input a value)\\nFor more information please see the context-entries parameter in https://docs.aws.amazon.com/cli/latest/reference/iam/simulate-principal-policy.html\",\n      \"default\": [],\n      \"allowedPattern\": \"\\\\{\\\\\\\"ContextKeyName\\\\\\\":\\\\\\\"[:a-zA-Z0-9]{5,256}\\\\\\\",\\\\\\\"ContextKeyValues\\\\\\\":\\\\[(\\\\\\\"[@*:_a-zA-Z0-9\\\\/\\\\.\\\\-_\\\\\\\\]{1,50}\\\\\\\",?){1,256}\\\\],\\\\\\\"ContextKeyType\\\\\\\":\\\\\\\"(string|stringList|numeric|numericList|boolean|booleanList|ip|ipList|binary|binaryList|date|dateList)\\\\\\\"\\\\}\",\n      \"maxItems\": 5\n    },\n    \"SCPPolicy\": {\n      \"type\": \"String\",\n      \"description\": \"(Optional) The AWS Organizations Service Control Policy (SCP) in case you want the runbook to evaluate the input against a particular SCP policy. This is not needed and ignored when you run this runbook from the organization's management account. (Please remove any new lines, tabs, or white spaces when you input a value).\",\n      \"default\": \"{\\\"Version\\\":\\\"2012-10-17\\\",\\\"Statement\\\":[{\\\"Effect\\\":\\\"Allow\\\",\\\"Action\\\":\\\"*\\\",\\\"Resource\\\":\\\"*\\\"}]}\",\n      \"allowedPattern\": \"^$|\\\\{\\\\\\\"Version\\\\\\\":\\\\\\\"2012-10-17\\\\\\\",\\\\\\\"Statement\\\\\\\":\\\\[(\\\\{\\\\\\\"(Sid|Effect|NotAction|Action|Resource|Condition)\\\\\\\":([@*\\\",:_a-zA-Z0-9\\\\/\\\\.\\\\-\\\\\\\\\\\\[\\\\]\\\\{\\\\}]*)\\\\},?){0,10}]\\\\}\"\n    }\n  },\n  \"mainSteps\": [\n    {\n      \"name\": \"IAMCheckTypeset\",\n      \"action\": \"aws:executeScript\",\n      \"description\": \"Checks if the IAM user or role exists, and parses the ARN into its constituent parts.\",\n      \"timeoutSeconds\": 180,\n      \"onFailure\": \"Abort\",\n      \"inputs\": {\n        \"Runtime\": \"python3.7\",\n        \"Attachment\": \"attachment.zip\",\n        \"Handler\": \"iam_typecheck_typeset.iam_typecheck_typeset\",\n        \"InputPayload\": {\n          \"IAMArn\": \"{{RequesterArn}}\",\n          \"RequesterRoleSessionName\": \"{{RequesterRoleSessionName}}\"\n        }\n      },\n      \"outputs\": [\n        {\n          \"Name\": \"user_name\",\n          \"Selector\": \"$.Payload.user_name\",\n          \"Type\": \"String\"\n        },\n        {\n          \"Name\": \"account_number\",\n          \"Selector\": \"$.Payload.account_number\",\n          \"Type\": \"String\"\n        },\n        {\n          \"Name\": \"iam_type\",\n          \"Selector\": \"$.Payload.iam_type\",\n          \"Type\": \"String\"\n        },\n        {\n          \"Name\": \"iam_assumed_arn\",\n          \"Selector\": \"$.Payload.iam_assumed_arn\",\n          \"Type\": \"String\"\n        },\n        {\n          \"Name\": \"iam_root\",\n          \"Selector\": \"$.Payload.iam_root\",\n          \"Type\": \"String\"\n        },\n        {\n          \"Name\": \"iam_id\",\n          \"Selector\": \"$.Payload.iam_id\",\n          \"Type\": \"String\"\n        },\n        {\n          \"Name\": \"iam_assumed_id\",\n          \"Selector\": \"$.Payload.iam_assumed_id\",\n          \"Type\": \"String\"\n        }\n      ]\n    },\n    {\n      \"name\": \"ResourceTypeCheck\",\n      \"action\": \"aws:executeScript\",\n      \"description\": \"Checks if the S3 resource (key or object) exist and return the bucket and key name.\",\n      \"timeoutSeconds\": 180,\n      \"onFailure\": \"Abort\",\n      \"inputs\": {\n        \"Runtime\": \"python3.7\",\n        \"Attachment\": \"attachment.zip\",\n        \"Handler\": \"check_resource_type.check_resource_type\",\n        \"InputPayload\": {\n          \"S3BucketArn\": \"{{S3ResourceArn}}\"\n        }\n      },\n      \"outputs\": [\n        {\n          \"Name\": \"bucket_name\",\n          \"Selector\": \"$.Payload.bucket_name\",\n          \"Type\": \"String\"\n        },\n        {\n          \"Name\": \"key_prefix\",\n          \"Selector\": \"$.Payload.key_prefix\",\n          \"Type\": \"String\"\n        },\n        {\n          \"Name\": \"resource_type\",\n          \"Selector\": \"$.Payload.resource_type\",\n          \"Type\": \"String\"\n        },\n        {\n          \"Name\": \"bucket_location\",\n          \"Selector\": \"$.Payload.bucket_location\",\n          \"Type\": \"String\"\n        }\n      ]\n    },\n    {\n      \"name\": \"UaBoOoAccountCheck\",\n      \"action\": \"aws:executeScript\",\n      \"description\": \"Checks the S3 bucket owner account and returns the S3 bucket owner Canonical user ID\",\n      \"timeoutSeconds\": 180,\n      \"onFailure\": \"Abort\",\n      \"inputs\": {\n        \"Runtime\": \"python3.7\",\n        \"Attachment\": \"attachment.zip\",\n        \"Handler\": \"ua_bo_oo_account_checks.ua_bo_oo_account_checks\",\n        \"InputPayload\": {\n          \"BucketName\": \"{{ResourceTypeCheck.bucket_name}}\",\n          \"AccountNumber\": \"{{IAMCheckTypeset.account_number}}\"\n        }\n      },\n      \"outputs\": [\n        {\n          \"Name\": \"requestor_canonical_id\",\n          \"Selector\": \"$.Payload.requestor_canonical_id\",\n          \"Type\": \"String\"\n        },\n        {\n          \"Name\": \"bucket_ACL_string\",\n          \"Selector\": \"$.Payload.bucket_ACL_string\",\n          \"Type\": \"StringList\"\n        }\n      ]\n    },\n    {\n      \"name\": \"KeyDetailsChecker\",\n      \"action\": \"aws:executeScript\",\n      \"description\": \"Checks if the type of resource ARN matches with the type of action and extract key and permission details.\",\n      \"timeoutSeconds\": 180,\n      \"onFailure\": \"Abort\",\n      \"inputs\": {\n        \"Runtime\": \"python3.7\",\n        \"Attachment\": \"attachment.zip\",\n        \"Handler\": \"key_details_checker.key_details_checker\",\n        \"InputPayload\": {\n          \"ResourceType\": \"{{ResourceTypeCheck.resource_type}}\",\n          \"BucketLocation\": \"{{ResourceTypeCheck.bucket_location}}\",\n          \"S3Action\": \"{{S3Action}}\",\n          \"BucketName\": \"{{ResourceTypeCheck.bucket_name}}\",\n          \"KeyPrefix\": \"{{ResourceTypeCheck.key_prefix}}\",\n          \"KeyVersion\": \"{{S3ObjectVersionId}}\",\n          \"KmsKeyArn\": \"{{KmsKeyArn}}\",\n          \"CanonicalID\": \"{{UaBoOoAccountCheck.requestor_canonical_id}}\"\n        }\n      },\n      \"outputs\": [\n        {\n          \"Name\": \"perm_required\",\n          \"Selector\": \"$.Payload.perm_required\",\n          \"Type\": \"StringList\"\n        },\n        {\n          \"Name\": \"action_type\",\n          \"Selector\": \"$.Payload.action_type\",\n          \"Type\": \"String\"\n        },\n        {\n          \"Name\": \"kms\",\n          \"Selector\": \"$.Payload.kms\",\n          \"Type\": \"String\"\n        },\n        {\n          \"Name\": \"acl_allow_check\",\n          \"Selector\": \"$.Payload.acl_allow_check\",\n          \"Type\": \"Integer\"\n        }\n      ]\n    },\n    {\n      \"name\": \"ACLBucketCheck\",\n      \"action\": \"aws:executeScript\",\n      \"description\": \"Checks if the bucket ACL allows the S3 action.\",\n      \"timeoutSeconds\": 180,\n      \"onFailure\": \"Abort\",\n      \"inputs\": {\n        \"Runtime\": \"python3.7\",\n        \"Attachment\": \"attachment.zip\",\n        \"Handler\": \"bucket_allow_acl_check.bucket_allow_acl_check\",\n        \"InputPayload\": {\n          \"PermsList\": \"{{KeyDetailsChecker.perm_required}}\",\n          \"BucketACL\": \"{{UaBoOoAccountCheck.bucket_ACL_string}}\"\n        }\n      },\n      \"outputs\": [\n        {\n          \"Name\": \"bucket_allow_acl_check\",\n          \"Selector\": \"$.Payload.bucket_allow_acl_check\",\n          \"Type\": \"Integer\"\n        }\n      ]\n    },\n    {\n      \"name\": \"ConditionSetter\",\n      \"action\": \"aws:executeScript\",\n      \"description\": \"Pre-fill some of the condition keys from the input parameters\",\n      \"timeoutSeconds\": 180,\n      \"onFailure\": \"Abort\",\n      \"inputs\": {\n        \"Runtime\": \"python3.7\",\n        \"Attachment\": \"attachment.zip\",\n        \"Handler\": \"condition_setter.condition_setter\",\n        \"InputPayload\": {\n          \"IAMArn\": \"{{RequesterArn}}\",\n          \"IAMType\": \"{{IAMCheckTypeset.iam_type}}\",\n          \"IAMAssumedRoleArn\": \"{{IAMCheckTypeset.iam_assumed_arn}}\",\n          \"IAMUserName\": \"{{IAMCheckTypeset.user_name}}\",\n          \"IAMAccountNumber\": \"{{IAMCheckTypeset.account_number}}\",\n          \"RequesterRoleSessionName\": \"{{RequesterRoleSessionName}}\",\n          \"KeyPrefix\": \"{{ResourceTypeCheck.key_prefix}}\",\n          \"ContextKeyList\": \"{{ContextKeyList}}\",\n          \"KeyVersion\": \"{{S3ObjectVersionId}}\",\n          \"KMSKey\": \"{{KeyDetailsChecker.kms}}\",\n          \"VpcEndpointId\": \"{{VpcEndpointId}}\"\n        }\n      },\n      \"outputs\": [\n        {\n          \"Name\": \"condition_list\",\n          \"Selector\": \"$.Payload.condition_list\",\n          \"Type\": \"MapList\"\n        }\n      ]\n    },\n    {\n      \"name\": \"FetchIAMPolicy\",\n      \"action\": \"aws:executeScript\",\n      \"description\": \"Fetches IAM Policy\",\n      \"timeoutSeconds\": 180,\n      \"onFailure\": \"Abort\",\n      \"inputs\": {\n        \"Runtime\": \"python3.7\",\n        \"Attachment\": \"attachment.zip\",\n        \"Handler\": \"iam_policy_fetch.iam_policy_fetch\",\n        \"InputPayload\": {\n          \"UserName\": \"{{IAMCheckTypeset.user_name}}\",\n          \"IAMType\": \"{{IAMCheckTypeset.iam_type}}\"\n        }\n      },\n      \"outputs\": [\n        {\n          \"Name\": \"iam_policy\",\n          \"Selector\": \"$.Payload.iam_policy\",\n          \"Type\": \"String\"\n        },\n        {\n          \"Name\": \"perm_boundary_policy\",\n          \"Selector\": \"$.Payload.perm_boundary_policy\",\n          \"Type\": \"StringMap\"\n        }\n      ]\n    },\n    {\n      \"name\": \"ACLCheckBranch\",\n      \"description\": \"If the ACL check fails, the runbook goes to last step\",\n      \"action\": \"aws:branch\",\n      \"inputs\": {\n        \"Choices\": [\n          {\n            \"NextStep\": \"EvaluatePolicy\",\n            \"Variable\": \"{{KeyDetailsChecker.acl_allow_check}}\",\n            \"NumericEquals\": 0\n          },\n          {\n            \"NextStep\": \"FetchBucketPolicy\",\n            \"Variable\": \"{{KeyDetailsChecker.acl_allow_check}}\",\n            \"NumericEquals\": 1\n          }\n        ]\n      }\n    },\n    {\n      \"name\": \"FetchBucketPolicy\",\n      \"action\": \"aws:executeScript\",\n      \"description\": \"Fetches Bucket Policy\",\n      \"timeoutSeconds\": 180,\n      \"onFailure\": \"Abort\",\n      \"inputs\": {\n        \"Runtime\": \"python3.7\",\n        \"Attachment\": \"attachment.zip\",\n        \"Handler\": \"bucket_policy_fetch.bucket_policy_fetch\",\n        \"InputPayload\": {\n          \"BucketName\": \"{{ResourceTypeCheck.bucket_name}}\"\n        }\n      },\n      \"outputs\": [\n        {\n          \"Name\": \"bucket_policy_str\",\n          \"Selector\": \"$.Payload.bucket_policy_str\",\n          \"Type\": \"String\"\n        }\n      ]\n    },\n    {\n      \"name\": \"KMSCheckBranch\",\n      \"description\": \"If KMS key involved go to fetch KMS policy else fetch VPCe policy\",\n      \"action\": \"aws:branch\",\n      \"inputs\": {\n        \"Choices\": [\n          {\n            \"NextStep\": \"VPCeCheckBranch\",\n            \"Variable\": \"{{KeyDetailsChecker.kms}}\",\n            \"StringEquals\": \"NONE\"\n          }\n        ],\n        \"Default\": \"FetchKMSPolicy\"\n      }\n    },\n    {\n      \"name\": \"FetchKMSPolicy\",\n      \"action\": \"aws:executeScript\",\n      \"description\": \"Fetch KMS policy and permissions required\",\n      \"timeoutSeconds\": 180,\n      \"onFailure\": \"Abort\",\n      \"inputs\": {\n        \"Runtime\": \"python3.7\",\n        \"Attachment\": \"attachment.zip\",\n        \"Handler\": \"kms_policy_fetch.kms_policy_fetch\",\n        \"InputPayload\": {\n          \"KmsArn\": \"{{KeyDetailsChecker.kms}}\",\n          \"S3Actions\": \"{{KeyDetailsChecker.perm_required}}\"\n        }\n      },\n      \"outputs\": [\n        {\n          \"Name\": \"kms_policy\",\n          \"Selector\": \"$.Payload.kms_policy\",\n          \"Type\": \"String\"\n        },\n        {\n          \"Name\": \"kms_perms_list\",\n          \"Selector\": \"$.Payload.kms_perms_list\",\n          \"Type\": \"String\"\n        }\n      ]\n    },\n    {\n      \"name\": \"VPCeCheckBranch\",\n      \"action\": \"aws:branch\",\n      \"description\": \"If VPCe involved, fetch VPCe policy else fetch SCP policy\",\n      \"inputs\": {\n        \"Choices\": [\n          {\n            \"NextStep\": \"FetchSCPPolicy\",\n            \"Variable\": \"{{VpcEndpointId}}\",\n            \"StringEquals\": \"\"\n          }\n        ],\n        \"Default\": \"FetchVPCePolicy\"\n      }\n    },\n    {\n      \"name\": \"FetchVPCePolicy\",\n      \"action\": \"aws:executeScript\",\n      \"description\": \"Fetch VPCe policy\",\n      \"timeoutSeconds\": 180,\n      \"onFailure\": \"Abort\",\n      \"inputs\": {\n        \"Runtime\": \"python3.7\",\n        \"Attachment\": \"attachment.zip\",\n        \"Handler\": \"vpce_policy_fetch.vpce_policy_fetch\",\n        \"InputPayload\": {\n          \"VpcEndpointId\": \"{{VpcEndpointId}}\"\n        }\n      },\n      \"outputs\": [\n        {\n          \"Name\": \"vpce_policy\",\n          \"Selector\": \"$.Payload.vpce_policy\",\n          \"Type\": \"String\"\n        }\n      ]\n    },\n    {\n      \"name\": \"FetchSCPPolicy\",\n      \"action\": \"aws:executeScript\",\n      \"description\": \"Fetch SCP policy\",\n      \"timeoutSeconds\": 180,\n      \"onFailure\": \"Abort\",\n      \"inputs\": {\n        \"Runtime\": \"python3.7\",\n        \"Attachment\": \"attachment.zip\",\n        \"Handler\": \"scp_policy_fetch.scp_policy_fetch\",\n        \"InputPayload\": {\n          \"SCPPolicy\": \"{{SCPPolicy}}\"\n        }\n      },\n      \"outputs\": [\n        {\n          \"Name\": \"scp_policy\",\n          \"Selector\": \"$.Payload.scp_policy\",\n          \"Type\": \"String\"\n        }\n      ]\n    },\n    {\n      \"name\": \"PolicyModifier\",\n      \"action\": \"aws:executeScript\",\n      \"description\": \"Modify the IAM role identity with dummy user identity to simulate policy, if needed\",\n      \"onFailure\": \"Abort\",\n      \"inputs\": {\n        \"Runtime\": \"python3.7\",\n        \"Attachment\": \"attachment.zip\",\n        \"Handler\": \"policy_modifier.policy_modifier\",\n        \"InputPayload\": {\n          \"IAMArn\": \"{{RequesterArn}}\",\n          \"IAMUserName\": \"{{IAMCheckTypeset.user_name}}\",\n          \"IAMType\": \"{{IAMCheckTypeset.iam_type}}\",\n          \"IAMRoot\": \"{{IAMCheckTypeset.iam_root}}\",\n          \"IAMID\": \"{{IAMCheckTypeset.iam_id}}\",\n          \"IAMAssumedRoleArn\": \"{{IAMCheckTypeset.iam_assumed_arn}}\",\n          \"IAMAssumedID\": \"{{IAMCheckTypeset.iam_assumed_id}}\",\n          \"IAMPolicy\": \"{{FetchIAMPolicy.iam_policy}}\",\n          \"BucketPolicy\": \"{{FetchBucketPolicy.bucket_policy_str}}\",\n          \"VpcEndpointId\": \"{{VpcEndpointId}}\",\n          \"VPCePolicy\": \"{{FetchVPCePolicy.vpce_policy}}\",\n          \"SCPPolicy\": \"{{FetchSCPPolicy.scp_policy}}\",\n          \"S3Actions\": \"{{KeyDetailsChecker.perm_required}}\",\n          \"S3BucketArn\": \"{{S3ResourceArn}}\",\n          \"KMSPolicy\": \"{{FetchKMSPolicy.kms_policy}}\",\n          \"KMSActions\": \"{{FetchKMSPolicy.kms_perms_list}}\",\n          \"KMSArn\": \"{{KeyDetailsChecker.kms}}\",\n          \"ContextKeyList\": \"{{ContextKeyList}}\",\n          \"RequesterRoleSessionName\": \"{{RequesterRoleSessionName}}\"\n        }\n      },\n      \"outputs\": [\n        {\n          \"Name\": \"iam_policy_modified_s3\",\n          \"Selector\": \"$.Payload.iam_policy_modified_s3\",\n          \"Type\": \"String\"\n        },\n        {\n          \"Name\": \"bucket_policy_modified\",\n          \"Selector\": \"$.Payload.bucket_policy_modified\",\n          \"Type\": \"String\"\n        },\n        {\n          \"Name\": \"vpce_policy_modified\",\n          \"Selector\": \"$.Payload.vpce_policy_modified\",\n          \"Type\": \"String\"\n        },\n        {\n          \"Name\": \"scp_policy_modified_s3\",\n          \"Selector\": \"$.Payload.scp_policy_modified_s3\",\n          \"Type\": \"String\"\n        },\n        {\n          \"Name\": \"iam_policy_modified_kms\",\n          \"Selector\": \"$.Payload.iam_policy_modified_kms\",\n          \"Type\": \"String\"\n        },\n        {\n          \"Name\": \"kms_policy_modified\",\n          \"Selector\": \"$.Payload.kms_policy_modified\",\n          \"Type\": \"String\"\n        },\n        {\n          \"Name\": \"scp_policy_modified_kms\",\n          \"Selector\": \"$.Payload.scp_policy_modified_kms\",\n          \"Type\": \"String\"\n        },\n        {\n          \"Name\": \"iam_evaluating_user_arn\",\n          \"Selector\": \"$.Payload.iam_evaluating_user_arn\",\n          \"Type\": \"String\"\n        },\n        {\n          \"Name\": \"kms_root_check\",\n          \"Selector\": \"$.Payload.kms_root_check\",\n          \"Type\": \"Integer\"\n        }\n      ]\n    },\n    {\n      \"name\": \"EvaluatePolicy\",\n      \"action\": \"aws:executeScript\",\n      \"description\": \"Simulate policy\",\n      \"timeoutSeconds\": 180,\n      \"onFailure\": \"Abort\",\n      \"inputs\": {\n        \"Runtime\": \"python3.7\",\n        \"Attachment\": \"attachment.zip\",\n        \"Handler\": \"evaluate_policy.evaluate_policy\",\n        \"InputPayload\": {\n          \"AclCheck\": \"{{KeyDetailsChecker.acl_allow_check}}\",\n          \"IAMPermBoundary\": \"{{FetchIAMPolicy.perm_boundary_policy}}\",\n          \"IAMEvaluatingArn\": \"{{PolicyModifier.iam_evaluating_user_arn}}\",\n          \"ContextKeyList\": \"{{ConditionSetter.condition_list}}\",\n          \"IAMPolicyS3\": \"{{PolicyModifier.iam_policy_modified_s3}}\",\n          \"BucketPolicy\": \"{{PolicyModifier.bucket_policy_modified}}\",\n          \"VPCePolicy\": \"{{PolicyModifier.vpce_policy_modified}}\",\n          \"SCPPolicyS3\": \"{{PolicyModifier.scp_policy_modified_s3}}\",\n          \"S3Actions\": \"{{KeyDetailsChecker.perm_required}}\",\n          \"S3BucketArn\": \"{{S3ResourceArn}}\",\n          \"IAMPolicyKMS\": \"{{PolicyModifier.iam_policy_modified_kms}}\",\n          \"SCPPolicyKMS\": \"{{PolicyModifier.scp_policy_modified_kms}}\",\n          \"KMSPolicy\": \"{{PolicyModifier.kms_policy_modified}}\",\n          \"KMSActions\": \"{{FetchKMSPolicy.kms_perms_list}}\",\n          \"KMSArn\": \"{{KeyDetailsChecker.kms}}\",\n          \"KMSRootCheck\": \"{{PolicyModifier.kms_root_check}}\"\n        }\n      },\n      \"outputs\": [\n        {\n          \"Name\": \"final_decision\",\n          \"Selector\": \"$.Payload.final_decision\",\n          \"Type\": \"String\"\n        },\n        {\n          \"Name\": \"allowed_statements_array\",\n          \"Selector\": \"$.Payload.allowed_statements_array\",\n          \"Type\": \"MapList\"\n        },\n        {\n          \"Name\": \"denied_statements_array\",\n          \"Selector\": \"$.Payload.denied_statements_array\",\n          \"Type\": \"MapList\"\n        }\n      ]\n    }\n  ],\n  \"outputs\": [\n    \"EvaluatePolicy.final_decision\",\n    \"EvaluatePolicy.allowed_statements_array\",\n    \"EvaluatePolicy.denied_statements_array\"\n  ],\n  \"files\": {\n    \"attachment.zip\": {\n      \"checksums\": {\n        \"sha256\": \"881072d6d71379f8c627366e9f2b640955ccfdf60065dfd5bafca64610711c5e\"\n      }\n    }\n  }\n}",
  "CreatedDate": "2022-05-12T16:04:14.279Z",
  "DisplayName": null,
  "DocumentFormat": {
    "Value": "JSON"
  },
  "DocumentType": {
    "Value": "Automation"
  },
  "DocumentVersion": "4",
  "Name": "AWSSupport-TroubleshootS3AccessSameAccount",
  "Requires": [],
  "ReviewStatus": null,
  "Status": {
    "Value": "Active"
  },
  "StatusInformation": null,
  "VersionName": null,
  "ResponseMetadata": {
    "RequestId": "36104a52-f52c-4f33-b368-36f2d998f062",
    "Metadata": {},
    "ChecksumAlgorithm": 0,
    "ChecksumValidationStatus": 0
  },
  "ContentLength": 30129,
  "HttpStatusCode": 200,
  "LoggedAt": "2022-07-07T07:12:59.4498145+00:00"
}
