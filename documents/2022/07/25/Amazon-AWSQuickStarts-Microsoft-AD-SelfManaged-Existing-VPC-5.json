{
  "AttachmentsContent": [],
  "Content": "{\n  \"schemaVersion\" : \"1.0\",\n  \"description\" : \"This template creates 2 Windows Active Directory Domain Controllers into private subnets in separate Availability Zones inside a VPC. The default Domain Administrator password will be the one retrieved from the instance.  For adding members to the domain, ensure that they are launched using the domain member security group created by this template and then configure them to use the AD instances fixed private IP addresses as the DNS server. **WARNING** This template creates Amazon EC2 Windows instance and related resources. You will be billed for the AWS resources used if you create a stack from this template. (qs-1qup6rae5)\",\n  \"templateBody\" : {\n    \"AWSTemplateFormatVersion\" : \"2010-09-09\",\n    \"Description\" : \"This template creates 2 Windows Active Directory Domain Controllers into private subnets in separate Availability Zones inside a VPC. The default Domain Administrator password will be the one retrieved from the instance.  For adding members to the domain, ensure that they are launched using the domain member security group created by this template and then configure them to use the AD instances fixed private IP addresses as the DNS server. **WARNING** This template creates Amazon EC2 Windows instance and related resources. You will be billed for the AWS resources used if you create a stack from this template. (qs-1qup6rae5)\",\n    \"Metadata\" : {\n      \"cfn-lint\" : {\n        \"config\" : {\n          \"ignore_checks\" : [ \"W9006\", \"E9101\", \"W9901\" ]\n        }\n      },\n      \"QuickStartDocumentation\" : {\n        \"EntrypointName\" : \"Parameters for deploying self-managed AD into an existing VPC\",\n        \"Order\" : \"2\"\n      },\n      \"AWS::CloudFormation::Interface\" : {\n        \"ParameterGroups\" : [ {\n          \"Label\" : {\n            \"default\" : \"Network configuration\"\n          },\n          \"Parameters\" : [ \"VPCCIDR\", \"VPCID\", \"DHCPOptionSet\", \"PrivateSubnet1ID\", \"PrivateSubnet2ID\" ]\n        }, {\n          \"Label\" : {\n            \"default\" : \"Amazon EC2 configuration\"\n          },\n          \"Parameters\" : [ \"ADServer1InstanceType\", \"ADServer1NetBIOSName\", \"ADServer1PrivateIP\", \"ADServer2InstanceType\", \"ADServer2NetBIOSName\", \"ADServer2PrivateIP\", \"DataDriveSizeGiB\", \"EbsEncryptionKmsKeyId\", \"EnableAdvancedAudtingandMetrics\", \"KeyPairName\", \"WINFULLBASE\" ]\n        }, {\n          \"Label\" : {\n            \"default\" : \"Microsoft Active Directory Domain Services configuration\"\n          },\n          \"Parameters\" : [ \"DomainAdminUser\", \"DomainAdminPassword\", \"DomainDNSName\", \"DomainNetBIOSName\", \"CreateDefaultOUs\", \"TombstoneLifetime\", \"DeletedObjectLifetime\" ]\n        }, {\n          \"Label\" : {\n            \"default\" : \"Microsoft Active Directory Certificate Services configuration\"\n          },\n          \"Parameters\" : [ \"PKI\", \"CaServerInstanceType\", \"CaDataDriveSizeGiB\", \"CaAmi\", \"OrCaServerNetBIOSName\", \"EntCaServerNetBIOSName\", \"CaKeyLength\", \"CaHashAlgorithm\", \"OrCaValidityPeriodUnits\", \"CaValidityPeriodUnits\", \"UseS3ForCRL\", \"S3CRLBucketName\" ]\n        }, {\n          \"Label\" : {\n            \"default\" : \"AWS Quick Start configuration\"\n          },\n          \"Parameters\" : [ \"QSS3BucketName\", \"QSS3BucketRegion\", \"QSS3KeyPrefix\" ]\n        } ],\n        \"ParameterLabels\" : {\n          \"ADServer1InstanceType\" : {\n            \"default\" : \"Domain Controller 1 Instance Type\"\n          },\n          \"ADServer1NetBIOSName\" : {\n            \"default\" : \"Domain Controller 1 NetBIOS Name\"\n          },\n          \"ADServer1PrivateIP\" : {\n            \"default\" : \"Domain Controller 1 Private IP Address\"\n          },\n          \"ADServer2InstanceType\" : {\n            \"default\" : \"Domain Controller 2 Instance Type\"\n          },\n          \"ADServer2NetBIOSName\" : {\n            \"default\" : \"Domain Controller 2 NetBIOS Name\"\n          },\n          \"ADServer2PrivateIP\" : {\n            \"default\" : \"Domain Controller 2 Private IP Address\"\n          },\n          \"CaAmi\" : {\n            \"default\" : \"CA SSM Parameter Value for Latest AMI ID\"\n          },\n          \"CaDataDriveSizeGiB\" : {\n            \"default\" : \"CA Data Drive Size\"\n          },\n          \"CaHashAlgorithm\" : {\n            \"default\" : \"CA Hash Algorithm\"\n          },\n          \"CaKeyLength\" : {\n            \"default\" : \"CA Key Length\"\n          },\n          \"CaServerInstanceType\" : {\n            \"default\" : \"CA Instance Type\"\n          },\n          \"CaValidityPeriodUnits\" : {\n            \"default\" : \"Enterprise Root or Subordinate CA Certificate Validity Period in Years\"\n          },\n          \"CreateDefaultOUs\" : {\n            \"default\" : \"Create Default OUs\"\n          },\n          \"DHCPOptionSet\" : {\n            \"default\" : \"Create a DHCP Options set\"\n          },\n          \"DataDriveSizeGiB\" : {\n            \"default\" : \"SYSVOL and NTDS Data Drive Size\"\n          },\n          \"DeletedObjectLifetime\" : {\n            \"default\" : \"Set new Deleted Objects Lifetime in Days\"\n          },\n          \"DomainAdminPassword\" : {\n            \"default\" : \"Alternate Domain Admin Password\"\n          },\n          \"DomainAdminUser\" : {\n            \"default\" : \"Alternate Domain Admin User Name\"\n          },\n          \"DomainDNSName\" : {\n            \"default\" : \"Domain DNS Name\"\n          },\n          \"DomainNetBIOSName\" : {\n            \"default\" : \"Domain NetBIOS Name\"\n          },\n          \"EbsEncryptionKmsKeyId\" : {\n            \"default\" : \"KMS Key for EBS Encryption\"\n          },\n          \"EnableAdvancedAudtingandMetrics\" : {\n            \"default\" : \"Advanced Auditing and Metrics\"\n          },\n          \"EntCaServerNetBIOSName\" : {\n            \"default\" : \"Enterprise Root or Subordinate CA NetBIOS Name\"\n          },\n          \"KeyPairName\" : {\n            \"default\" : \"Key Pair Name\"\n          },\n          \"OrCaServerNetBIOSName\" : {\n            \"default\" : \"Offline Root CA NetBIOS Name (Only Used For Two Tier PKI)\"\n          },\n          \"OrCaValidityPeriodUnits\" : {\n            \"default\" : \"Offline Root CA Certificate Validity Period in Years (Only Used For Two Tier PKI)\"\n          },\n          \"PKI\" : {\n            \"default\" : \"CA Deployment Type\"\n          },\n          \"PrivateSubnet1ID\" : {\n            \"default\" : \"Subnet 1 ID\"\n          },\n          \"PrivateSubnet2ID\" : {\n            \"default\" : \"Subnet 2 ID\"\n          },\n          \"QSS3BucketName\" : {\n            \"default\" : \"Quick Start S3 Bucket Name\"\n          },\n          \"QSS3BucketRegion\" : {\n            \"default\" : \"Quick Start S3 Bucket Region\"\n          },\n          \"QSS3KeyPrefix\" : {\n            \"default\" : \"Quick Start S3 Key Prefix\"\n          },\n          \"S3CRLBucketName\" : {\n            \"default\" : \"CA CRL S3 Bucket Name\"\n          },\n          \"TombstoneLifetime\" : {\n            \"default\" : \"Set new Tombstone Lifetime in Days\"\n          },\n          \"UseS3ForCRL\" : {\n            \"default\" : \"Use S3 for CA CRL Location\"\n          },\n          \"VPCCIDR\" : {\n            \"default\" : \"VPC CIDR\"\n          },\n          \"VPCID\" : {\n            \"default\" : \"VPC ID\"\n          },\n          \"WINFULLBASE\" : {\n            \"default\" : \"SSM Parameter Value for Latest AMI ID\"\n          }\n        }\n      }\n    },\n    \"Parameters\" : {\n      \"ADServer1InstanceType\" : {\n        \"AllowedValues\" : [ \"t3.medium\", \"t3.large\", \"t3.xlarge\", \"t3.2xlarge\", \"m5.large\", \"m5.xlarge\", \"m5.2xlarge\", \"m5.4xlarge\" ],\n        \"Default\" : \"m5.large\",\n        \"Description\" : \"Amazon EC2 instance type for the first Active Directory Domain Controller instance\",\n        \"Type\" : \"String\"\n      },\n      \"ADServer1NetBIOSName\" : {\n        \"AllowedPattern\" : \"^[a-zA-Z0-9\\\\-]+$\",\n        \"Default\" : \"DC1\",\n        \"Description\" : \"NetBIOS name of the first Active Directory Domain Controller (up to 15 characters)\",\n        \"MaxLength\" : \"15\",\n        \"MinLength\" : \"1\",\n        \"Type\" : \"String\"\n      },\n      \"ADServer1PrivateIP\" : {\n        \"AllowedPattern\" : \"^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$\",\n        \"Default\" : \"10.0.0.10\",\n        \"Description\" : \"Fixed private IP for the first Active Directory Domain Controller located in Availability Zone 1\",\n        \"Type\" : \"String\"\n      },\n      \"ADServer2InstanceType\" : {\n        \"AllowedValues\" : [ \"t3.medium\", \"t3.large\", \"t3.xlarge\", \"t3.2xlarge\", \"m5.large\", \"m5.xlarge\", \"m5.2xlarge\", \"m5.4xlarge\" ],\n        \"Default\" : \"m5.large\",\n        \"Description\" : \"Amazon EC2 instance type for the second Active Directory Domain Controller instance\",\n        \"Type\" : \"String\"\n      },\n      \"ADServer2NetBIOSName\" : {\n        \"AllowedPattern\" : \"^[a-zA-Z0-9\\\\-]+$\",\n        \"Default\" : \"DC2\",\n        \"Description\" : \"NetBIOS name of the second Active Directory Domain Controller (up to 15 characters)\",\n        \"MaxLength\" : \"15\",\n        \"MinLength\" : \"1\",\n        \"Type\" : \"String\"\n      },\n      \"ADServer2PrivateIP\" : {\n        \"AllowedPattern\" : \"^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$\",\n        \"Default\" : \"10.0.32.10\",\n        \"Description\" : \"Fixed private IP for the second Active Directory Domain Controller located in Availability Zone 2\",\n        \"Type\" : \"String\"\n      },\n      \"CaAmi\" : {\n        \"Default\" : \"/aws/service/ami-windows-latest/Windows_Server-2022-English-Full-Base\",\n        \"Description\" : \"Enterprise Root CA SSM Parameter Value to grab the latest AMI ID\",\n        \"Type\" : \"String\"\n      },\n      \"CaDataDriveSizeGiB\" : {\n        \"Default\" : \"2\",\n        \"Description\" : \"Size of the data drive in GiB for the CA instance(s)\",\n        \"Type\" : \"Number\"\n      },\n      \"CaHashAlgorithm\" : {\n        \"AllowedValues\" : [ \"SHA256\", \"SHA384\", \"SHA512\" ],\n        \"Default\" : \"SHA256\",\n        \"Description\" : \"CA(s) Hash Algorithm for Signing Certificates\",\n        \"Type\" : \"String\"\n      },\n      \"CaKeyLength\" : {\n        \"AllowedValues\" : [ \"2048\", \"4096\" ],\n        \"Default\" : \"2048\",\n        \"Description\" : \"CA(s) Cryptographic Provider Key Length\",\n        \"Type\" : \"String\"\n      },\n      \"CaServerInstanceType\" : {\n        \"AllowedValues\" : [ \"t3.small\", \"t3.medium\", \"t3.large\", \"t3.xlarge\", \"t3.2xlarge\", \"m5.large\", \"m5.xlarge\", \"m5.2xlarge\", \"m5.4xlarge\" ],\n        \"Default\" : \"t3.medium\",\n        \"Description\" : \"Amazon EC2 instance type for the CA instance(s)\",\n        \"Type\" : \"String\"\n      },\n      \"CaValidityPeriodUnits\" : {\n        \"Default\" : \"5\",\n        \"Description\" : \"Validity Period in Years\",\n        \"Type\" : \"String\"\n      },\n      \"CreateDefaultOUs\" : {\n        \"AllowedValues\" : [ \"Yes\", \"No\" ],\n        \"Default\" : \"No\",\n        \"Description\" : \"Domain Elevated Accounts, Domain Users, Domain Computers, Domain Servers, Domain Service Accounts, and Domain Groups OUs and set the default users and computers containers to Domain Users and Domain Computers\",\n        \"Type\" : \"String\"\n      },\n      \"DHCPOptionSet\" : {\n        \"AllowedValues\" : [ \"Yes\", \"No\" ],\n        \"Default\" : \"Yes\",\n        \"Description\" : \"Do you want to create and apply a new DHCP Options Set\",\n        \"Type\" : \"String\"\n      },\n      \"DataDriveSizeGiB\" : {\n        \"Default\" : \"10\",\n        \"Description\" : \"Size of SYSVOL and NTDS data drive in GiB\",\n        \"Type\" : \"Number\"\n      },\n      \"DeletedObjectLifetime\" : {\n        \"Default\" : \"180\",\n        \"Description\" : \"The number of days before a deleted object is removed from the Active Directory recycle bin, minimum number is 2\",\n        \"MinValue\" : \"2\",\n        \"Type\" : \"Number\"\n      },\n      \"DomainAdminPassword\" : {\n        \"AllowedPattern\" : \"(?=^.{6,255}$)((?=.*\\\\d)(?=.*[A-Z])(?=.*[a-z])|(?=.*\\\\d)(?=.*[^A-Za-z0-9])(?=.*[a-z])|(?=.*[^A-Za-z0-9])(?=.*[A-Z])(?=.*[a-z])|(?=.*\\\\d)(?=.*[A-Z])(?=.*[^A-Za-z0-9]))^.*\",\n        \"Description\" : \"Password for the account named above. Must be at least 8 characters containing letters, numbers and symbols\",\n        \"MaxLength\" : \"32\",\n        \"MinLength\" : \"8\",\n        \"NoEcho\" : \"true\",\n        \"Type\" : \"String\"\n      },\n      \"DomainAdminUser\" : {\n        \"AllowedPattern\" : \"^[a-zA-Z0-9]+$\",\n        \"Default\" : \"Admin\",\n        \"Description\" : \"User name for the account that will be added as a Domain Administrator. This is separate from the default \\\"Administrator\\\" account\",\n        \"MaxLength\" : \"25\",\n        \"MinLength\" : \"5\",\n        \"Type\" : \"String\"\n      },\n      \"DomainDNSName\" : {\n        \"AllowedPattern\" : \"^[a-zA-Z0-9\\\\-\\\\.]+$\",\n        \"Default\" : \"example.com\",\n        \"Description\" : \"Fully qualified domain name (FQDN) of the forest root domain e.g. example.com\",\n        \"MaxLength\" : \"255\",\n        \"MinLength\" : \"2\",\n        \"Type\" : \"String\"\n      },\n      \"DomainNetBIOSName\" : {\n        \"AllowedPattern\" : \"^[a-zA-Z0-9\\\\-]+$\",\n        \"Default\" : \"example\",\n        \"Description\" : \"NetBIOS name of the domain (up to 15 characters) for users of earlier versions of Windows e.g. EXAMPLE\",\n        \"MaxLength\" : \"15\",\n        \"MinLength\" : \"1\",\n        \"Type\" : \"String\"\n      },\n      \"EbsEncryptionKmsKeyId\" : {\n        \"Default\" : \"alias/aws/ebs\",\n        \"Description\" : \"The identifier of the AWS KMS key to use for Amazon EBS encryption. You can specify the KMS key using any of the following; Key ID, Key alias, Key ARN, Alias ARN\",\n        \"Type\" : \"String\"\n      },\n      \"EnableAdvancedAudtingandMetrics\" : {\n        \"Description\" : \"Enable advanced auditing and metrics and upload them to CloudWatch using the Amazon Kinesis Agent for Microsoft Windows\",\n        \"AllowedValues\" : [ \"true\", \"false\" ],\n        \"Type\" : \"String\",\n        \"Default\" : \"false\"\n      },\n      \"EntCaServerNetBIOSName\" : {\n        \"AllowedPattern\" : \"^[a-zA-Z0-9\\\\-]+$\",\n        \"Default\" : \"ENTCA1\",\n        \"Description\" : \"NetBIOS name of the Enterprise Root or Subordinate CA server (up to 15 characters)\",\n        \"MaxLength\" : \"15\",\n        \"MinLength\" : \"1\",\n        \"Type\" : \"String\"\n      },\n      \"KeyPairName\" : {\n        \"Description\" : \"Public/private key pairs allow you to securely connect to your instance after it launches\",\n        \"Type\" : \"AWS::EC2::KeyPair::KeyName\"\n      },\n      \"OrCaServerNetBIOSName\" : {\n        \"AllowedPattern\" : \"^[a-zA-Z0-9\\\\-]+$\",\n        \"Default\" : \"ORCA1\",\n        \"Description\" : \"NetBIOS name of the Offline Root CA server (Only Used For Two Tier PKI) (up to 15 characters)\",\n        \"MaxLength\" : \"15\",\n        \"MinLength\" : \"1\",\n        \"Type\" : \"String\"\n      },\n      \"OrCaValidityPeriodUnits\" : {\n        \"Default\" : \"10\",\n        \"Description\" : \"Validity Period in Years (Only Used For Two Tier PKI)\",\n        \"Type\" : \"String\"\n      },\n      \"PKI\" : {\n        \"AllowedValues\" : [ \"One-Tier\", \"Two-Tier\", \"No\" ],\n        \"Default\" : \"No\",\n        \"Description\" : \"Deploy Two Tier (Offline Root with Subordinate Enterprise CA) or One Tier (Enterprise Root CA) PKI Infrastructure\",\n        \"Type\" : \"String\"\n      },\n      \"PrivateSubnet1ID\" : {\n        \"Description\" : \"ID of subnet 1 in Availability Zone 1 (e.g., subnet-a0246dcd)\",\n        \"Type\" : \"AWS::EC2::Subnet::Id\"\n      },\n      \"PrivateSubnet2ID\" : {\n        \"Description\" : \"ID of subnet 2 in Availability Zone 2 (e.g., subnet-a0246dcd)\",\n        \"Type\" : \"AWS::EC2::Subnet::Id\"\n      },\n      \"QSS3BucketName\" : {\n        \"AllowedPattern\" : \"^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$\",\n        \"ConstraintDescription\" : \"Quick Start bucket name can include numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen (-).\",\n        \"Default\" : \"aws-quickstart\",\n        \"Description\" : \"S3 bucket name for the Quick Start assets. Quick Start bucket name can include numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen (-).\",\n        \"Type\" : \"String\"\n      },\n      \"QSS3BucketRegion\" : {\n        \"AllowedPattern\" : \"^[a-z]+-[a-z\\\\-]+-[0-9]{1}$\",\n        \"Default\" : \"us-east-1\",\n        \"Description\" : \"The AWS Region where the Quick Start S3 bucket (QSS3BucketName) is hosted. When using your own bucket, you must specify this value\",\n        \"Type\" : \"String\"\n      },\n      \"QSS3KeyPrefix\" : {\n        \"AllowedPattern\" : \"^[a-zA-Z0-9\\\\-/]+$\",\n        \"ConstraintDescription\" : \"Quick Start key prefix can include numbers, lowercase letters, uppercase letters, hyphens (-), and forward slash (/)\",\n        \"Default\" : \"quickstart-microsoft-activedirectory/\",\n        \"Description\" : \"S3 key prefix for the Quick Start assets. Quick Start key prefix can include numbers, lowercase letters, uppercase letters, hyphens (-), and forward slash (/)\",\n        \"Type\" : \"String\"\n      },\n      \"S3CRLBucketName\" : {\n        \"AllowedPattern\" : \"^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$\",\n        \"Default\" : \"examplebucket\",\n        \"Description\" : \"S3 bucket name for CA CRL(s) storage. Bucket name can include numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen (-)\",\n        \"Type\" : \"String\"\n      },\n      \"TombstoneLifetime\" : {\n        \"Default\" : \"180\",\n        \"Description\" : \"The number of days before a deleted object is removed from Active Directory, minimum number is 2\",\n        \"MinValue\" : \"2\",\n        \"Type\" : \"Number\"\n      },\n      \"UseS3ForCRL\" : {\n        \"AllowedValues\" : [ \"Yes\", \"No\" ],\n        \"Default\" : \"No\",\n        \"Description\" : \"Store CA CRL(s) in an S3 bucket\",\n        \"Type\" : \"String\"\n      },\n      \"VPCCIDR\" : {\n        \"AllowedPattern\" : \"^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\\\/(1[6-9]|2[0-8]))$\",\n        \"ConstraintDescription\" : \"CIDR block parameter must be in the form x.x.x.x/16-28\",\n        \"Default\" : \"10.0.0.0/16\",\n        \"Description\" : \"CIDR Block for the VPC\",\n        \"Type\" : \"String\"\n      },\n      \"VPCID\" : {\n        \"Description\" : \"ID of the VPC (e.g., vpc-0343606e)\",\n        \"Type\" : \"AWS::EC2::VPC::Id\"\n      },\n      \"WINFULLBASE\" : {\n        \"Default\" : \"/aws/service/ami-windows-latest/Windows_Server-2022-English-Full-Base\",\n        \"Description\" : \"System Manager parameter value for latest Windows Server AMI\",\n        \"Type\" : \"AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>\"\n      }\n    },\n    \"Rules\" : {\n      \"SubnetsInVPC\" : {\n        \"Assertions\" : [ {\n          \"Assert\" : {\n            \"Fn::EachMemberIn\" : [ {\n              \"Fn::ValueOfAll\" : [ \"AWS::EC2::Subnet::Id\", \"VpcId\" ]\n            }, {\n              \"Fn::RefAll\" : \"AWS::EC2::VPC::Id\"\n            } ]\n          },\n          \"AssertDescription\" : \"All subnets must in the VPC\"\n        } ]\n      },\n      \"S3CRLBucketNameValidation\" : {\n        \"RuleCondition\" : {\n          \"Fn::And\" : [ {\n            \"Fn::Equals\" : [ {\n              \"Ref\" : \"UseS3ForCRL\"\n            }, \"Yes\" ]\n          }, {\n            \"Fn::Not\" : [ {\n              \"Fn::Equals\" : [ {\n                \"Ref\" : \"PKI\"\n              }, \"No\" ]\n            } ]\n          } ]\n        },\n        \"Assertions\" : [ {\n          \"AssertDescription\" : \"CRL BucketName cannot must be valid BucketName\",\n          \"Assert\" : {\n            \"Fn::Not\" : [ {\n              \"Fn::Equals\" : [ {\n                \"Ref\" : \"S3CRLBucketName\"\n              }, \"examplebucket\" ]\n            } ]\n          }\n        } ]\n      }\n    },\n    \"Conditions\" : {\n      \"ShouldCreateDHCPOption\" : {\n        \"Fn::Not\" : [ {\n          \"Fn::Equals\" : [ {\n            \"Ref\" : \"DHCPOptionSet\"\n          }, \"No\" ]\n        } ]\n      },\n      \"ShouldCreateOneTierPkiResource\" : {\n        \"Fn::Equals\" : [ {\n          \"Ref\" : \"PKI\"\n        }, \"One-Tier\" ]\n      },\n      \"ShouldCreateTwoTierPkiResource\" : {\n        \"Fn::Equals\" : [ {\n          \"Ref\" : \"PKI\"\n        }, \"Two-Tier\" ]\n      },\n      \"UsingDefaultBucket\" : {\n        \"Fn::Equals\" : [ {\n          \"Ref\" : \"QSS3BucketName\"\n        }, \"aws-quickstart\" ]\n      }\n    },\n    \"Resources\" : {\n      \"DHCPOptions\" : {\n        \"Condition\" : \"ShouldCreateDHCPOption\",\n        \"DependsOn\" : [ \"DomainController1\", \"DomainController2\" ],\n        \"Type\" : \"AWS::EC2::DHCPOptions\",\n        \"Properties\" : {\n          \"DomainName\" : {\n            \"Ref\" : \"DomainDNSName\"\n          },\n          \"DomainNameServers\" : [ {\n            \"Ref\" : \"ADServer1PrivateIP\"\n          }, {\n            \"Ref\" : \"ADServer2PrivateIP\"\n          } ],\n          \"Tags\" : [ {\n            \"Key\" : \"Domain\",\n            \"Value\" : {\n              \"Ref\" : \"DomainDNSName\"\n            }\n          } ]\n        }\n      },\n      \"VPCDHCPOptionsAssociation\" : {\n        \"Condition\" : \"ShouldCreateDHCPOption\",\n        \"Type\" : \"AWS::EC2::VPCDHCPOptionsAssociation\",\n        \"Properties\" : {\n          \"VpcId\" : {\n            \"Ref\" : \"VPCID\"\n          },\n          \"DhcpOptionsId\" : {\n            \"Ref\" : \"DHCPOptions\"\n          }\n        }\n      },\n      \"AWSQuickstartActiveDirectoryDS\" : {\n        \"Type\" : \"AWS::SSM::Document\",\n        \"Properties\" : {\n          \"DocumentType\" : \"Automation\",\n          \"Tags\" : [ {\n            \"Key\" : \"StackName\",\n            \"Value\" : {\n              \"Ref\" : \"AWS::StackName\"\n            }\n          } ],\n          \"Content\" : {\n            \"schemaVersion\" : \"0.3\",\n            \"description\" : \"Deploy AD with SSM Automation\",\n            \"parameters\" : {\n              \"VPCCIDR\" : {\n                \"default\" : \"10.0.0.0/16\",\n                \"description\" : \"CIDR Block for the VPC\",\n                \"type\" : \"String\"\n              },\n              \"ADServer1NetBIOSName\" : {\n                \"default\" : \"DC1\",\n                \"description\" : \"NetBIOS name of the first Active Directory Domain Controller (up to 15 characters)\",\n                \"type\" : \"String\"\n              },\n              \"ADServer1PrivateIP\" : {\n                \"default\" : \"10.0.0.10\",\n                \"description\" : \"Fixed private IP for the first Active Directory Domain Controller located in Availability Zone 1\",\n                \"type\" : \"String\"\n              },\n              \"ADServer2NetBIOSName\" : {\n                \"default\" : \"DC2\",\n                \"description\" : \"NetBIOS name of the second Active Directory Domain Controller (up to 15 characters)\",\n                \"type\" : \"String\"\n              },\n              \"ADServer2PrivateIP\" : {\n                \"default\" : \"10.0.32.10\",\n                \"description\" : \"Fixed private IP for the second Active Directory Domain Controller located in Availability Zone 2\",\n                \"type\" : \"String\"\n              },\n              \"ADAdminSecParamName\" : {\n                \"description\" : \"AWS Secrets Parameter Name that has Password and User namer for the built-in administrator\",\n                \"type\" : \"String\"\n              },\n              \"ADAltUserSecParamName\" : {\n                \"description\" : \"AWS Secrets Parameter Name for the account that will be added as Domain Administrator. This is separate from the built-in Administrator account\",\n                \"type\" : \"String\"\n              },\n              \"RestoreModeSecParamName\" : {\n                \"description\" : \"AWS Secrets Parameter Name for the Active Directory Restore Mode Password\",\n                \"type\" : \"String\"\n              },\n              \"DomainDNSName\" : {\n                \"default\" : \"example.com\",\n                \"description\" : \"Fully qualified domain name (FQDN) of the forest root domain e.g. example.com\",\n                \"type\" : \"String\"\n              },\n              \"DomainNetBIOSName\" : {\n                \"default\" : \"example\",\n                \"description\" : \"NetBIOS name of the domain (up to 15 characters) for users of earlier versions of Windows e.g. EXAMPLE\",\n                \"type\" : \"String\"\n              },\n              \"EnableAdvancedAudtingandMetrics\" : {\n                \"allowedValues\" : [ \"true\", \"false\" ],\n                \"default\" : \"false\",\n                \"description\" : \"Enable advanced auditing and metrics\",\n                \"type\" : \"String\"\n              },\n              \"CreateDefaultOUs\" : {\n                \"allowedValues\" : [ \"Yes\", \"No\" ],\n                \"default\" : \"No\",\n                \"description\" : \"Create Domain Elevated Accounts, Domain Users, Domain Computers, Domain Servers, Domain Service Accounts, and Domain Groups OUs\",\n                \"type\" : \"String\"\n              },\n              \"TombstoneLifetime\" : {\n                \"default\" : \"180\",\n                \"description\" : \"The number of days before a deleted object is removed from the directory services\",\n                \"type\" : \"String\"\n              },\n              \"DeletedObjectLifetime\" : {\n                \"default\" : \"180\",\n                \"description\" : \"The number of days before a deleted object is removed from the directory services recycling bin\",\n                \"type\" : \"String\"\n              },\n              \"QSS3BucketName\" : {\n                \"default\" : \"aws-quickstart\",\n                \"description\" : \"S3 bucket name for the Quick Start assets. Quick Start bucket name can include numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen (-)\",\n                \"type\" : \"String\"\n              },\n              \"QSS3BucketRegion\" : {\n                \"default\" : \"us-east-1\",\n                \"description\" : \"The AWS Region where the Quick Start S3 bucket (QSS3BucketName) is hosted. When using your own bucket, you must specify this value\",\n                \"type\" : \"String\"\n              },\n              \"QSS3KeyPrefix\" : {\n                \"default\" : \"quickstart-microsoft-activedirectory/\",\n                \"description\" : \"S3 key prefix for the Quick Start assets. Quick Start key prefix can include numbers, lowercase letters, uppercase letters, hyphens (-), and forward slash (/)\",\n                \"type\" : \"String\"\n              },\n              \"StackName\" : {\n                \"description\" : \"Stack Name Input for cfn resource signal\",\n                \"maxChars\" : \"128\",\n                \"minChars\" : \"1\",\n                \"type\" : \"String\"\n              },\n              \"URLSuffix\" : {\n                \"default\" : \"amazonaws.com\",\n                \"description\" : \"AWS URL suffix\",\n                \"type\" : \"String\"\n              }\n            },\n            \"mainSteps\" : [ {\n              \"name\" : \"dcsInstanceIds\",\n              \"action\" : \"aws:executeAwsApi\",\n              \"onFailure\" : \"step:signalfailure\",\n              \"inputs\" : {\n                \"Service\" : \"ec2\",\n                \"Api\" : \"DescribeInstances\",\n                \"Filters\" : [ {\n                  \"Name\" : \"tag:Name\",\n                  \"Values\" : [ \"{{ADServer1NetBIOSName}}\", \"{{ADServer2NetBIOSName}}\" ]\n                }, {\n                  \"Name\" : \"tag:aws:cloudformation:stack-name\",\n                  \"Values\" : [ \"{{StackName}}\" ]\n                }, {\n                  \"Name\" : \"instance-state-name\",\n                  \"Values\" : [ \"running\" ]\n                } ]\n              },\n              \"outputs\" : [ {\n                \"Name\" : \"InstanceIds\",\n                \"Selector\" : \"$.Reservations..Instances..InstanceId\",\n                \"Type\" : \"StringList\"\n              } ],\n              \"nextStep\" : \"dc1InstanceId\"\n            }, {\n              \"name\" : \"dc1InstanceId\",\n              \"action\" : \"aws:executeAwsApi\",\n              \"onFailure\" : \"step:signalfailure\",\n              \"inputs\" : {\n                \"Service\" : \"ec2\",\n                \"Api\" : \"DescribeInstances\",\n                \"Filters\" : [ {\n                  \"Name\" : \"tag:Name\",\n                  \"Values\" : [ \"{{ADServer1NetBIOSName}}\" ]\n                }, {\n                  \"Name\" : \"tag:aws:cloudformation:stack-name\",\n                  \"Values\" : [ \"{{StackName}}\" ]\n                }, {\n                  \"Name\" : \"instance-state-name\",\n                  \"Values\" : [ \"running\" ]\n                } ]\n              },\n              \"outputs\" : [ {\n                \"Name\" : \"InstanceId\",\n                \"Selector\" : \"$.Reservations[0].Instances[0].InstanceId\",\n                \"Type\" : \"String\"\n              } ],\n              \"nextStep\" : \"dc2InstanceId\"\n            }, {\n              \"name\" : \"dc2InstanceId\",\n              \"action\" : \"aws:executeAwsApi\",\n              \"onFailure\" : \"step:signalfailure\",\n              \"inputs\" : {\n                \"Service\" : \"ec2\",\n                \"Api\" : \"DescribeInstances\",\n                \"Filters\" : [ {\n                  \"Name\" : \"tag:Name\",\n                  \"Values\" : [ \"{{ADServer2NetBIOSName}}\" ]\n                }, {\n                  \"Name\" : \"tag:aws:cloudformation:stack-name\",\n                  \"Values\" : [ \"{{StackName}}\" ]\n                }, {\n                  \"Name\" : \"instance-state-name\",\n                  \"Values\" : [ \"running\" ]\n                } ]\n              },\n              \"outputs\" : [ {\n                \"Name\" : \"InstanceId\",\n                \"Selector\" : \"$.Reservations[0].Instances[0].InstanceId\",\n                \"Type\" : \"String\"\n              } ],\n              \"nextStep\" : \"intializeInstance\"\n            }, {\n              \"name\" : \"intializeInstance\",\n              \"action\" : \"aws:runCommand\",\n              \"inputs\" : {\n                \"DocumentName\" : \"AWS-RunPowerShellScript\",\n                \"InstanceIds\" : [ \"{{dcsInstanceIds.InstanceIds}}\" ],\n                \"Parameters\" : {\n                  \"commands\" : \"[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12\\n\\n$S3BucketName = '{{QSS3BucketName}}'\\n$S3KeyPrefix = '{{QSS3KeyPrefix}}'\\n$S3BucketRegion = '{{QSS3BucketRegion}}'\\n\\n$CustomModules = @(\\n    'Module-AD.psd1',\\n    'Module-AD.psm1'\\n)\\n\\n$Modules = @(\\n    @{\\n        Name = 'NetworkingDsc'\\n        Version = '8.2.0'\\n    },\\n    @{\\n        Name = 'ActiveDirectoryDsc'\\n        Version = '6.0.1'\\n    },\\n    @{\\n        Name = 'ComputerManagementDsc'\\n        Version = '8.5.0'\\n    },\\n    @{\\n        Name = 'DnsServerDsc'\\n        Version = '3.0.0'\\n    },\\n    @{\\n        Name = 'AuditPolicyDsc'\\n        Version = '1.4.0.0'\\n    }\\n)\\n\\nWrite-Output 'Creating AWSQuickstart Directory'\\nTry {\\n    $Null = New-Item -Path 'C:\\\\AWSQuickstart\\\\Module-AD' -ItemType 'Directory' -ErrorAction Stop\\n} Catch [System.Exception] {\\n    Write-Output \\\"Failed to create AWSQuickstart directory $_\\\"\\n    Exit 1\\n}\\n\\n$S3KeyPrefix = $S3KeyPrefix.Substring(0,$S3KeyPrefix.Length -1)\\nWrite-Output 'Downloading AD PowerShell Module'\\nForeach ($CustomModule in $CustomModules) {\\n    Try {\\n        $Null = Read-S3Object -BucketName $S3BucketName -Key \\\"$($S3KeyPrefix)/scripts/Modules/Module-AD/$CustomModule\\\" -File \\\"C:\\\\AWSQuickstart\\\\Module-AD\\\\$CustomModule\\\" -Region $S3BucketRegion\\n    } Catch [System.Exception] {\\n        Write-Output \\\"Failed to read and download $CustomModule.Name from S3 $_\\\"\\n        Exit 1\\n    }\\n}\\n\\nWrite-Output 'Installing NuGet Package Provider'\\nTry {\\n    $Null = Install-PackageProvider -Name 'NuGet' -MinimumVersion '2.8.5' -Force -ErrorAction Stop\\n} Catch [System.Exception] {\\n    Write-Output \\\"Failed to install NuGet Package Provider $_\\\"\\n    Exit 1\\n}\\n\\nWrite-Output 'Setting PSGallery Respository to trusted'\\nTry {\\n    Set-PSRepository -Name 'PSGallery' -InstallationPolicy 'Trusted' -ErrorAction Stop\\n} Catch [System.Exception] {\\n    Write-Output \\\"Failed to set PSGallery Respository to trusted $_\\\"\\n    Exit 1\\n}\\n\\nWrite-Output 'Installing the needed Powershell DSC modules for this Quick Start'\\nForeach ($Module in $Modules) {\\n    Try {\\n        Install-Module -Name $Module.Name -RequiredVersion $Module.Version -ErrorAction Stop\\n    } Catch [System.Exception] {\\n        Write-Output \\\"Failed to Import Modules $_\\\"\\n        Exit 1\\n    }\\n} \"\n                },\n                \"CloudWatchOutputConfig\" : {\n                  \"CloudWatchOutputEnabled\" : true,\n                  \"CloudWatchLogGroupName\" : {\n                    \"Fn::Sub\" : \"/aws/Quick_Start/${AWS::StackName}\"\n                  }\n                }\n              },\n              \"nextStep\" : \"configureInstance\"\n            }, {\n              \"name\" : \"configureInstance\",\n              \"action\" : \"aws:runCommand\",\n              \"inputs\" : {\n                \"DocumentName\" : \"AWS-RunPowerShellScript\",\n                \"InstanceIds\" : [ \"{{dcsInstanceIds.InstanceIds}}\" ],\n                \"Parameters\" : {\n                  \"commands\" : \"Try {\\n    Import-Module -Name 'C:\\\\AWSQuickstart\\\\Module-AD\\\\Module-AD.psm1' -Force\\n} Catch [System.Exception] {\\n    Write-Output \\\"Failed to import AD PS Module $_\\\"\\n    Exit 1\\n}\\nNew-VolumeFromRawDisk\\nInvoke-PreConfig\\nInvoke-LcmConfig\"\n                },\n                \"CloudWatchOutputConfig\" : {\n                  \"CloudWatchOutputEnabled\" : true,\n                  \"CloudWatchLogGroupName\" : {\n                    \"Fn::Sub\" : \"/aws/Quick_Start/${AWS::StackName}\"\n                  }\n                }\n              },\n              \"nextStep\" : \"configureDc1Mof\"\n            }, {\n              \"name\" : \"configureDc1Mof\",\n              \"action\" : \"aws:runCommand\",\n              \"inputs\" : {\n                \"DocumentName\" : \"AWS-RunPowerShellScript\",\n                \"InstanceIds\" : [ \"{{dc1InstanceId.InstanceId}}\" ],\n                \"Parameters\" : {\n                  \"commands\" : \"Try {\\n    Import-Module -Name 'C:\\\\AWSQuickstart\\\\Module-AD\\\\Module-AD.psm1' -Force\\n} Catch [System.Exception] {\\n    Write-Output \\\"Failed to import AD PS Module $_\\\"\\n    Exit 1\\n}\\n$EniConfig = Get-EniConfig\\n$DaSecret = Get-SecretInfo -Domain '{{DomainNetBIOSName}}' -SecretArn '{{ADAdminSecParamName}}'\\n$RmSecret = Get-SecretInfo -Domain '{{DomainNetBIOSName}}' -SecretArn '{{RestoreModeSecParamName}}'\\n$AltSecret = Get-SecretInfo -Domain '{{DomainNetBIOSName}}' -SecretArn '{{ADAltUserSecParamName}}'\\nSet-DscConfiguration -AltAdminCredentials $AltSecret.Credentials -AltAdminUserName $AltSecret.Username -DaCredentials $DaSecret.DomainCredentials -DeploymentType 'FirstDc' -DomainDNSName '{{DomainDNSName}}' -DomainNetBIOSName '{{DomainNetBIOSName}}' -GatewayAddress $EniConfig.GatewayAddress -InstanceIP $EniConfig.IpAddress -InstanceNetBIOSName '{{ADServer1NetBIOSName}}' -LaCredentials $DaSecret.Credentials -MacAddress $EniConfig.MacAddress -RestoreModeCredentials $RmSecret.Credentials -SiteName '{{global:REGION}}' -VPCCIDR '{{VPCCIDR}}'\"\n                },\n                \"CloudWatchOutputConfig\" : {\n                  \"CloudWatchOutputEnabled\" : true,\n                  \"CloudWatchLogGroupName\" : {\n                    \"Fn::Sub\" : \"/aws/Quick_Start/${AWS::StackName}\"\n                  }\n                }\n              },\n              \"nextStep\" : \"runDc1Mof\"\n            }, {\n              \"name\" : \"runDc1Mof\",\n              \"action\" : \"aws:runCommand\",\n              \"onFailure\" : \"step:signalfailure\",\n              \"inputs\" : {\n                \"DocumentName\" : \"AWS-RunPowerShellScript\",\n                \"InstanceIds\" : [ \"{{dc1InstanceId.InstanceId}}\" ],\n                \"Parameters\" : {\n                  \"commands\" : \"Try {\\n    Import-Module -Name 'C:\\\\AWSQuickstart\\\\Module-AD\\\\Module-AD.psm1' -Force\\n} Catch [System.Exception] {\\n    Write-Output \\\"Failed to import AD PS Module $_\\\"\\n    Exit 1\\n}\\nStart-DscConfiguration 'C:\\\\AWSQuickstart\\\\ConfigInstance' -Wait -Verbose -Force\\nInvoke-DscStatusCheck\"\n                },\n                \"CloudWatchOutputConfig\" : {\n                  \"CloudWatchOutputEnabled\" : true,\n                  \"CloudWatchLogGroupName\" : {\n                    \"Fn::Sub\" : \"/aws/Quick_Start/${AWS::StackName}\"\n                  }\n                }\n              },\n              \"nextStep\" : \"configureDc2Mof\"\n            }, {\n              \"name\" : \"configureDc2Mof\",\n              \"action\" : \"aws:runCommand\",\n              \"inputs\" : {\n                \"DocumentName\" : \"AWS-RunPowerShellScript\",\n                \"InstanceIds\" : [ \"{{dc2InstanceId.InstanceId}}\" ],\n                \"Parameters\" : {\n                  \"commands\" : \"Try {\\n    Import-Module -Name 'C:\\\\AWSQuickstart\\\\Module-AD\\\\Module-AD.psm1' -Force\\n} Catch [System.Exception] {\\n    Write-Output \\\"Failed to import AD PS Module $_\\\"\\n    Exit 1\\n}\\n$EniConfig = Get-EniConfig\\n$DaSecret = Get-SecretInfo -Domain '{{DomainNetBIOSName}}' -SecretArn '{{ADAdminSecParamName}}'\\n$RmSecret = Get-SecretInfo -Domain '{{DomainNetBIOSName}}' -SecretArn '{{RestoreModeSecParamName}}'\\nSet-DscConfiguration -DaCredentials $DaSecret.DomainCredentials -DeploymentType 'SecondaryDC' -DomainDNSName '{{DomainDNSName}}' -DomainNetBIOSName '{{DomainNetBIOSName}}' -ExistingDcIP01 '{{ADServer1PrivateIP}}' -GatewayAddress $EniConfig.GatewayAddress -InstanceIP $EniConfig.IpAddress -InstanceIPDns $EniConfig.DnsIpAddress -InstanceNetBIOSName '{{ADServer2NetBIOSName}}' -MacAddress $EniConfig.MacAddress -RestoreModeCredentials $RmSecret.Credentials\"\n                },\n                \"CloudWatchOutputConfig\" : {\n                  \"CloudWatchOutputEnabled\" : true,\n                  \"CloudWatchLogGroupName\" : {\n                    \"Fn::Sub\" : \"/aws/Quick_Start/${AWS::StackName}\"\n                  }\n                }\n              },\n              \"nextStep\" : \"runDc2Mof\"\n            }, {\n              \"name\" : \"runDc2Mof\",\n              \"action\" : \"aws:runCommand\",\n              \"onFailure\" : \"step:signalfailure\",\n              \"inputs\" : {\n                \"DocumentName\" : \"AWS-RunPowerShellScript\",\n                \"InstanceIds\" : [ \"{{dc2InstanceId.InstanceId}}\" ],\n                \"Parameters\" : {\n                  \"commands\" : \"Try {\\n    Import-Module -Name 'C:\\\\AWSQuickstart\\\\Module-AD\\\\Module-AD.psm1' -Force\\n} Catch [System.Exception] {\\n    Write-Output \\\"Failed to import AD PS Module $_\\\"\\n    Exit 1\\n}\\nStart-DscConfiguration 'C:\\\\AWSQuickstart\\\\ConfigInstance' -Wait -Verbose -Force\\nInvoke-DscStatusCheck\"\n                },\n                \"CloudWatchOutputConfig\" : {\n                  \"CloudWatchOutputEnabled\" : true,\n                  \"CloudWatchLogGroupName\" : {\n                    \"Fn::Sub\" : \"/aws/Quick_Start/${AWS::StackName}\"\n                  }\n                }\n              },\n              \"nextStep\" : \"DisableFW\"\n            }, {\n              \"name\" : \"DisableFW\",\n              \"action\" : \"aws:runCommand\",\n              \"inputs\" : {\n                \"DocumentName\" : \"AWS-RunPowerShellScript\",\n                \"InstanceIds\" : [ \"{{dcsInstanceIds.InstanceIds}}\" ],\n                \"Parameters\" : {\n                  \"commands\" : \"Try {\\n    Get-NetFirewallProfile -ErrorAction Stop | Set-NetFirewallProfile -Enabled False -ErrorAction Stop\\n} Catch [System.Exception] {\\n    Write-Output \\\"Failed to disable Windows Firewall $_\\\"\\n    Exit 1\\n}\"\n                },\n                \"CloudWatchOutputConfig\" : {\n                  \"CloudWatchOutputEnabled\" : true,\n                  \"CloudWatchLogGroupName\" : {\n                    \"Fn::Sub\" : \"/aws/Quick_Start/${AWS::StackName}\"\n                  }\n                }\n              },\n              \"nextStep\" : \"DnsConfig\"\n            }, {\n              \"name\" : \"DnsConfig\",\n              \"action\" : \"aws:runCommand\",\n              \"onFailure\" : \"step:signalfailure\",\n              \"inputs\" : {\n                \"DocumentName\" : \"AWS-RunPowerShellScript\",\n                \"InstanceIds\" : [ \"{{dc2InstanceId.InstanceId}}\" ],\n                \"Parameters\" : {\n                  \"commands\" : \"Try {\\n    Import-Module -Name 'C:\\\\AWSQuickstart\\\\Module-AD\\\\Module-AD.psm1' -Force\\n} Catch [System.Exception] {\\n    Write-Output \\\"Failed to import AD PS Module $_\\\"\\n    Exit 1\\n}\\n$DaSecret = Get-SecretInfo -Domain '{{DomainNetBIOSName}}' -SecretArn '{{ADAdminSecParamName}}'\\nSet-DnsDscConfiguration -AD1Deployment -ADServer1NetBIOSName '{{ADServer1NetBIOSName}}' -ADServer2NetBIOSName '{{ADServer2NetBIOSName}}' -ADServer1PrivateIP '{{ADServer1PrivateIP}}' -ADServer2PrivateIP '{{ADServer2PrivateIP}}' -DomainDNSName '{{DomainDNSName}}' -DaCredentials $DaSecret.Credentials -VPCCIDR '{{VPCCIDR}}'\"\n                },\n                \"CloudWatchOutputConfig\" : {\n                  \"CloudWatchOutputEnabled\" : true,\n                  \"CloudWatchLogGroupName\" : {\n                    \"Fn::Sub\" : \"/aws/Quick_Start/${AWS::StackName}\"\n                  }\n                }\n              },\n              \"nextStep\" : \"PostConfig\"\n            }, {\n              \"name\" : \"PostConfig\",\n              \"action\" : \"aws:runCommand\",\n              \"inputs\" : {\n                \"DocumentName\" : \"AWS-RunPowerShellScript\",\n                \"InstanceIds\" : [ \"{{dcsInstanceIds.InstanceIds}}\" ],\n                \"Parameters\" : {\n                  \"commands\" : \"Try {\\n    Import-Module -Name 'C:\\\\AWSQuickstart\\\\Module-AD\\\\Module-AD.psm1' -Force\\n} Catch [System.Exception] {\\n    Write-Output \\\"Failed to import AD PS Module $_\\\"\\n    Exit 1\\n}\\nSet-PostPromoConfig -S3BucketName '{{QSS3BucketName}}' -S3BucketRegion '{{QSS3BucketRegion}}' -S3KeyPrefix '{{QSS3KeyPrefix}}' -CreateDefaultOUs '{{CreateDefaultOUs}}' -TombstoneLifetime '{{TombstoneLifetime}}' -DeletedObjectLifetime '{{DeletedObjectLifetime}}'\\n\\nIf ('{{EnableAdvancedAudtingandMetrics}}' -eq 'true') {\\n  Set-DcAuditDscConfiguration\\n  Set-LogsAndMetricsCollection -Role 'DomainController' -Stackname '{{StackName}}'\\n}\\n\\nInvoke-Cleanup -VPCCIDR '{{VPCCIDR}}'\"\n                },\n                \"CloudWatchOutputConfig\" : {\n                  \"CloudWatchOutputEnabled\" : true,\n                  \"CloudWatchLogGroupName\" : {\n                    \"Fn::Sub\" : \"/aws/Quick_Start/${AWS::StackName}\"\n                  }\n                }\n              }\n            }, {\n              \"name\" : \"CFNSignalEnd\",\n              \"action\" : \"aws:branch\",\n              \"inputs\" : {\n                \"Choices\" : [ {\n                  \"NextStep\" : \"signalsuccess\",\n                  \"Not\" : {\n                    \"Variable\" : \"{{StackName}}\",\n                    \"StringEquals\" : \"\"\n                  }\n                }, {\n                  \"NextStep\" : \"sleepend\",\n                  \"Variable\" : \"{{StackName}}\",\n                  \"StringEquals\" : \"\"\n                } ]\n              }\n            }, {\n              \"name\" : \"signalsuccess\",\n              \"action\" : \"aws:executeAwsApi\",\n              \"isEnd\" : true,\n              \"inputs\" : {\n                \"Service\" : \"cloudformation\",\n                \"Api\" : \"SignalResource\",\n                \"LogicalResourceId\" : \"DomainController2\",\n                \"StackName\" : \"{{StackName}}\",\n                \"Status\" : \"SUCCESS\",\n                \"UniqueId\" : \"{{dc2InstanceId.InstanceId}}\"\n              }\n            }, {\n              \"name\" : \"sleepend\",\n              \"action\" : \"aws:sleep\",\n              \"isEnd\" : true,\n              \"inputs\" : {\n                \"Duration\" : \"PT1S\"\n              }\n            }, {\n              \"name\" : \"signalfailure\",\n              \"action\" : \"aws:executeAwsApi\",\n              \"inputs\" : {\n                \"Service\" : \"cloudformation\",\n                \"Api\" : \"SignalResource\",\n                \"LogicalResourceId\" : \"DomainController2\",\n                \"StackName\" : \"{{StackName}}\",\n                \"Status\" : \"FAILURE\",\n                \"UniqueId\" : \"{{dc2InstanceId.InstanceId}}\"\n              }\n            } ]\n          }\n        }\n      },\n      \"ADServerRole\" : {\n        \"Type\" : \"AWS::IAM::Role\",\n        \"Metadata\" : {\n          \"cfn_nag\" : {\n            \"rules_to_suppress\" : [ {\n              \"id\" : \"W11\",\n              \"reason\" : \"* required\"\n            } ]\n          }\n        },\n        \"Properties\" : {\n          \"Policies\" : [ {\n            \"PolicyDocument\" : {\n              \"Version\" : \"2012-10-17\",\n              \"Statement\" : [ {\n                \"Effect\" : \"Allow\",\n                \"Action\" : \"s3:GetObject\",\n                \"Resource\" : [ {\n                  \"Fn::Sub\" : \"arn:${AWS::Partition}:s3:::aws-ssm-${AWS::Region}/*\"\n                }, {\n                  \"Fn::Sub\" : \"arn:${AWS::Partition}:s3:::aws-windows-downloads-${AWS::Region}/*\"\n                }, {\n                  \"Fn::Sub\" : \"arn:${AWS::Partition}:s3:::amazon-ssm-${AWS::Region}/*\"\n                }, {\n                  \"Fn::Sub\" : \"arn:${AWS::Partition}:s3:::amazon-ssm-packages-${AWS::Region}/*\"\n                }, {\n                  \"Fn::Sub\" : \"arn:${AWS::Partition}:s3:::${AWS::Region}-birdwatcher-prod/*\"\n                }, {\n                  \"Fn::Sub\" : \"arn:${AWS::Partition}:s3:::patch-baseline-snapshot-${AWS::Region}/*\"\n                }, {\n                  \"Fn::Sub\" : \"arn:${AWS::Partition}:s3:::aws-ssm-distributor-file-${AWS::Region}/*\"\n                }, {\n                  \"Fn::Sub\" : \"arn:${AWS::Partition}:s3:::aws-ssm-document-attachments-${AWS::Region}/*\"\n                } ]\n              } ]\n            },\n            \"PolicyName\" : \"SSMAgent\"\n          }, {\n            \"PolicyDocument\" : {\n              \"Version\" : \"2012-10-17\",\n              \"Statement\" : [ {\n                \"Effect\" : \"Allow\",\n                \"Action\" : \"s3:ListBucket\",\n                \"Resource\" : {\n                  \"Fn::Sub\" : [ \"arn:${AWS::Partition}:s3:::${S3Bucket}\", {\n                    \"S3Bucket\" : {\n                      \"Fn::If\" : [ \"UsingDefaultBucket\", {\n                        \"Fn::Sub\" : \"${QSS3BucketName}-${AWS::Region}\"\n                      }, {\n                        \"Ref\" : \"QSS3BucketName\"\n                      } ]\n                    }\n                  } ]\n                }\n              }, {\n                \"Effect\" : \"Allow\",\n                \"Action\" : \"s3:GetObject\",\n                \"Resource\" : {\n                  \"Fn::Sub\" : [ \"arn:${AWS::Partition}:s3:::${S3Bucket}/${QSS3KeyPrefix}*\", {\n                    \"S3Bucket\" : {\n                      \"Fn::If\" : [ \"UsingDefaultBucket\", {\n                        \"Fn::Sub\" : \"${QSS3BucketName}-${AWS::Region}\"\n                      }, {\n                        \"Ref\" : \"QSS3BucketName\"\n                      } ]\n                    }\n                  } ]\n                }\n              }, {\n                \"Effect\" : \"Allow\",\n                \"Action\" : \"ssm:StartAutomationExecution\",\n                \"Resource\" : {\n                  \"Fn::Sub\" : \"arn:${AWS::Partition}:ssm:${AWS::Region}:${AWS::AccountId}:automation-definition/${AWSQuickstartActiveDirectoryDS}:$DEFAULT\"\n                }\n              }, {\n                \"Effect\" : \"Allow\",\n                \"Action\" : \"ssm:SendCommand\",\n                \"Resource\" : [ {\n                  \"Fn::Sub\" : \"arn:${AWS::Partition}:ssm:${AWS::Region}:*:document/AWS-RunRemoteScript\"\n                }, {\n                  \"Fn::Sub\" : \"arn:${AWS::Partition}:ssm:${AWS::Region}:*:document/AWS-RunPowerShellScript\"\n                } ]\n              }, {\n                \"Effect\" : \"Allow\",\n                \"Action\" : \"ssm:SendCommand\",\n                \"Resource\" : {\n                  \"Fn::Sub\" : \"arn:${AWS::Partition}:ec2:${AWS::Region}:${AWS::AccountId}:instance/*\"\n                },\n                \"Condition\" : {\n                  \"StringEquals\" : {\n                    \"ssm:ResourceTag/aws:cloudformation:stack-name\" : {\n                      \"Ref\" : \"AWS::StackName\"\n                    }\n                  }\n                }\n              }, {\n                \"Sid\" : \"ReadOperations\",\n                \"Effect\" : \"Allow\",\n                \"Action\" : [ \"ec2:DescribeInstances\", \"ssm:DescribeInstanceInformation\", \"ssm:ListCommands\", \"ssm:ListCommandInvocations\" ],\n                \"Resource\" : \"*\"\n              }, {\n                \"Effect\" : \"Allow\",\n                \"Action\" : \"cloudformation:SignalResource\",\n                \"Resource\" : {\n                  \"Fn::Sub\" : \"arn:${AWS::Partition}:cloudformation:${AWS::Region}:${AWS::AccountId}:stack/${AWS::StackName}/*\"\n                }\n              } ]\n            },\n            \"PolicyName\" : \"AWS-Mgmt-Quick-Start-Policy\"\n          }, {\n            \"PolicyDocument\" : {\n              \"Version\" : \"2012-10-17\",\n              \"Statement\" : [ {\n                \"Effect\" : \"Allow\",\n                \"Action\" : [ \"secretsmanager:GetSecretValue\", \"secretsmanager:DescribeSecret\" ],\n                \"Resource\" : [ {\n                  \"Ref\" : \"ADAdminSecrets\"\n                }, {\n                  \"Ref\" : \"RestoreModeSecrets\"\n                }, {\n                  \"Ref\" : \"ADAltUserSecrets\"\n                } ]\n              } ]\n            },\n            \"PolicyName\" : \"AWS-Mgd-AD-Secret-Policy\"\n          } ],\n          \"Path\" : \"/\",\n          \"ManagedPolicyArns\" : [ {\n            \"Fn::Sub\" : \"arn:${AWS::Partition}:iam::aws:policy/AmazonSSMManagedInstanceCore\"\n          }, {\n            \"Fn::Sub\" : \"arn:${AWS::Partition}:iam::aws:policy/CloudWatchAgentServerPolicy\"\n          } ],\n          \"Tags\" : [ {\n            \"Key\" : \"StackName\",\n            \"Value\" : {\n              \"Ref\" : \"AWS::StackName\"\n            }\n          } ],\n          \"AssumeRolePolicyDocument\" : {\n            \"Statement\" : [ {\n              \"Effect\" : \"Allow\",\n              \"Action\" : \"sts:AssumeRole\",\n              \"Principal\" : {\n                \"Service\" : [ \"ec2.amazonaws.com\" ]\n              }\n            } ],\n            \"Version\" : \"2012-10-17\"\n          }\n        }\n      },\n      \"ADServerProfile\" : {\n        \"Type\" : \"AWS::IAM::InstanceProfile\",\n        \"Properties\" : {\n          \"Roles\" : [ {\n            \"Ref\" : \"ADServerRole\"\n          } ],\n          \"Path\" : \"/\"\n        }\n      },\n      \"ADAdminSecrets\" : {\n        \"Type\" : \"AWS::SecretsManager::Secret\",\n        \"Properties\" : {\n          \"Name\" : {\n            \"Fn::Sub\" : \"ADAdministratorSecret-${AWS::StackName}\"\n          },\n          \"Description\" : \"Administrator Password for AD Quick Start\",\n          \"GenerateSecretString\" : {\n            \"SecretStringTemplate\" : \"{\\\"username\\\": \\\"Administrator\\\"}\",\n            \"GenerateStringKey\" : \"password\",\n            \"PasswordLength\" : 30,\n            \"ExcludeCharacters\" : \"\\\"@/\\\\\"\n          }\n        }\n      },\n      \"RestoreModeSecrets\" : {\n        \"Type\" : \"AWS::SecretsManager::Secret\",\n        \"Properties\" : {\n          \"Name\" : {\n            \"Fn::Sub\" : \"RestoreModeSecrets-${AWS::StackName}\"\n          },\n          \"Description\" : \"Restore Mode Password for AD Quick Start\",\n          \"GenerateSecretString\" : {\n            \"SecretStringTemplate\" : \"{\\\"username\\\": \\\"Administrator\\\"}\",\n            \"GenerateStringKey\" : \"password\",\n            \"PasswordLength\" : 30,\n            \"ExcludeCharacters\" : \"\\\"@/\\\\\"\n          }\n        }\n      },\n      \"ADAltUserSecrets\" : {\n        \"Type\" : \"AWS::SecretsManager::Secret\",\n        \"Properties\" : {\n          \"Name\" : {\n            \"Fn::Sub\" : \"ADAltUserSecrets-${AWS::StackName}\"\n          },\n          \"Description\" : \"Alternate AD Admin User from AD Quick Start\",\n          \"SecretString\" : {\n            \"Fn::Sub\" : \"{ \\\"username\\\" : \\\"${DomainAdminUser}\\\", \\\"password\\\" : \\\"${DomainAdminPassword}\\\" }\"\n          }\n        }\n      },\n      \"DomainController1\" : {\n        \"Type\" : \"AWS::EC2::Instance\",\n        \"Properties\" : {\n          \"ImageId\" : {\n            \"Ref\" : \"WINFULLBASE\"\n          },\n          \"IamInstanceProfile\" : {\n            \"Ref\" : \"ADServerProfile\"\n          },\n          \"InstanceType\" : {\n            \"Ref\" : \"ADServer1InstanceType\"\n          },\n          \"SubnetId\" : {\n            \"Ref\" : \"PrivateSubnet1ID\"\n          },\n          \"Tags\" : [ {\n            \"Key\" : \"Name\",\n            \"Value\" : {\n              \"Ref\" : \"ADServer1NetBIOSName\"\n            }\n          }, {\n            \"Key\" : \"Domain\",\n            \"Value\" : {\n              \"Ref\" : \"DomainDNSName\"\n            }\n          }, {\n            \"Key\" : \"Role\",\n            \"Value\" : \"Domain Controller\"\n          } ],\n          \"BlockDeviceMappings\" : [ {\n            \"DeviceName\" : \"/dev/sda1\",\n            \"Ebs\" : {\n              \"VolumeSize\" : 60,\n              \"VolumeType\" : \"gp3\",\n              \"Encrypted\" : true,\n              \"KmsKeyId\" : {\n                \"Ref\" : \"EbsEncryptionKmsKeyId\"\n              },\n              \"DeleteOnTermination\" : true\n            }\n          }, {\n            \"DeviceName\" : \"/dev/xvdf\",\n            \"Ebs\" : {\n              \"VolumeSize\" : {\n                \"Ref\" : \"DataDriveSizeGiB\"\n              },\n              \"VolumeType\" : \"gp3\",\n              \"Encrypted\" : true,\n              \"KmsKeyId\" : {\n                \"Ref\" : \"EbsEncryptionKmsKeyId\"\n              },\n              \"DeleteOnTermination\" : true\n            }\n          } ],\n          \"SecurityGroupIds\" : [ {\n            \"Ref\" : \"DomainControllersSG\"\n          } ],\n          \"PrivateIpAddress\" : {\n            \"Ref\" : \"ADServer1PrivateIP\"\n          },\n          \"KeyName\" : {\n            \"Ref\" : \"KeyPairName\"\n          }\n        }\n      },\n      \"DomainController2\" : {\n        \"CreationPolicy\" : {\n          \"ResourceSignal\" : {\n            \"Timeout\" : \"PT60M\",\n            \"Count\" : 1\n          }\n        },\n        \"DependsOn\" : \"DomainController1\",\n        \"Type\" : \"AWS::EC2::Instance\",\n        \"Properties\" : {\n          \"ImageId\" : {\n            \"Ref\" : \"WINFULLBASE\"\n          },\n          \"IamInstanceProfile\" : {\n            \"Ref\" : \"ADServerProfile\"\n          },\n          \"InstanceType\" : {\n            \"Ref\" : \"ADServer2InstanceType\"\n          },\n          \"SubnetId\" : {\n            \"Ref\" : \"PrivateSubnet2ID\"\n          },\n          \"Tags\" : [ {\n            \"Key\" : \"Name\",\n            \"Value\" : {\n              \"Ref\" : \"ADServer2NetBIOSName\"\n            }\n          }, {\n            \"Key\" : \"Domain\",\n            \"Value\" : {\n              \"Ref\" : \"DomainDNSName\"\n            }\n          }, {\n            \"Key\" : \"Role\",\n            \"Value\" : \"Domain Controller\"\n          } ],\n          \"BlockDeviceMappings\" : [ {\n            \"DeviceName\" : \"/dev/sda1\",\n            \"Ebs\" : {\n              \"VolumeSize\" : 60,\n              \"VolumeType\" : \"gp3\",\n              \"Encrypted\" : true,\n              \"KmsKeyId\" : {\n                \"Ref\" : \"EbsEncryptionKmsKeyId\"\n              },\n              \"DeleteOnTermination\" : true\n            }\n          }, {\n            \"DeviceName\" : \"/dev/xvdf\",\n            \"Ebs\" : {\n              \"VolumeSize\" : {\n                \"Ref\" : \"DataDriveSizeGiB\"\n              },\n              \"VolumeType\" : \"gp3\",\n              \"Encrypted\" : true,\n              \"KmsKeyId\" : {\n                \"Ref\" : \"EbsEncryptionKmsKeyId\"\n              },\n              \"DeleteOnTermination\" : true\n            }\n          } ],\n          \"SecurityGroupIds\" : [ {\n            \"Ref\" : \"DomainControllersSG\"\n          } ],\n          \"PrivateIpAddress\" : {\n            \"Ref\" : \"ADServer2PrivateIP\"\n          },\n          \"KeyName\" : {\n            \"Ref\" : \"KeyPairName\"\n          },\n          \"UserData\" : {\n            \"Fn::Base64\" : {\n              \"Fn::Sub\" : [ \"<powershell>\\n$Params = @{\\n    ADAdminSecParamName = '${ADAdminSecrets}'\\n    ADServer1NetBIOSName = '${ADServer1NetBIOSName}'\\n    ADServer1PrivateIP = '${ADServer1PrivateIP}'\\n    ADServer2NetBIOSName = '${ADServer2NetBIOSName}'\\n    ADServer2PrivateIP = '${ADServer2PrivateIP}'\\n    ADAltUserSecParamName = '${ADAltUserSecrets}'\\n    CreateDefaultOUs = '${CreateDefaultOUs}'\\n    DeletedObjectLifetime = '${DeletedObjectLifetime}'\\n    DomainDNSName = '${DomainDNSName}'\\n    DomainNetBIOSName = '${DomainNetBIOSName}'\\n    EnableAdvancedAudtingandMetrics = '${EnableAdvancedAudtingandMetrics}'\\n    RestoreModeSecParamName = '${RestoreModeSecrets}'\\n    QSS3BucketName = '${QSS3BucketName}'\\n    QSS3BucketRegion =  '${QSS3BucketRegion}'\\n    QSS3KeyPrefix = '${QSS3KeyPrefix}'\\n    StackName = '${AWS::StackName}'\\n    TombstoneLifetime = '${TombstoneLifetime}'\\n    URLSuffix = '${AWS::URLSuffix}'\\n    VPCCIDR = '${VPCCIDR}'\\n}\\nStart-SSMAutomationExecution -DocumentName '${AWSQuickstartActiveDirectoryDS}' -Parameter $Params\\n</powershell>\\n\", {\n                \"QSS3BucketName\" : {\n                  \"Fn::If\" : [ \"UsingDefaultBucket\", {\n                    \"Fn::Sub\" : \"${QSS3BucketName}-${AWS::Region}\"\n                  }, {\n                    \"Fn::Sub\" : \"${QSS3BucketName}\"\n                  } ]\n                },\n                \"QSS3BucketRegion\" : {\n                  \"Fn::If\" : [ \"UsingDefaultBucket\", {\n                    \"Fn::Sub\" : \"${AWS::Region}\"\n                  }, {\n                    \"Fn::Sub\" : \"${QSS3BucketRegion}\"\n                  } ]\n                }\n              } ]\n            }\n          }\n        }\n      },\n      \"DomainControllersSG\" : {\n        \"Type\" : \"AWS::EC2::SecurityGroup\",\n        \"Metadata\" : {\n          \"cfn_nag\" : {\n            \"rules_to_suppress\" : [ {\n              \"id\" : \"F1000\",\n              \"reason\" : \"Standard Amazon practice\"\n            }, {\n              \"id\" : \"W42\",\n              \"reason\" : \"Standard Amazon practice\"\n            }, {\n              \"id\" : \"W27\",\n              \"reason\" : \"Standard Amazon practice\"\n            } ]\n          }\n        },\n        \"Properties\" : {\n          \"GroupDescription\" : \"Domain Controllers Security Group\",\n          \"VpcId\" : {\n            \"Ref\" : \"VPCID\"\n          },\n          \"SecurityGroupIngress\" : [ {\n            \"IpProtocol\" : \"tcp\",\n            \"Description\" : \"DNS\",\n            \"FromPort\" : 53,\n            \"ToPort\" : 53,\n            \"SourceSecurityGroupId\" : {\n              \"Ref\" : \"DomainMembersSG\"\n            }\n          }, {\n            \"IpProtocol\" : \"udp\",\n            \"Description\" : \"DNS\",\n            \"FromPort\" : 53,\n            \"ToPort\" : 53,\n            \"SourceSecurityGroupId\" : {\n              \"Ref\" : \"DomainMembersSG\"\n            }\n          }, {\n            \"IpProtocol\" : \"tcp\",\n            \"Description\" : \"Kerberos\",\n            \"FromPort\" : 88,\n            \"ToPort\" : 88,\n            \"SourceSecurityGroupId\" : {\n              \"Ref\" : \"DomainMembersSG\"\n            }\n          }, {\n            \"IpProtocol\" : \"udp\",\n            \"Description\" : \"Kerberos\",\n            \"FromPort\" : 88,\n            \"ToPort\" : 88,\n            \"SourceSecurityGroupId\" : {\n              \"Ref\" : \"DomainMembersSG\"\n            }\n          }, {\n            \"IpProtocol\" : \"udp\",\n            \"Description\" : \"Windows Time\",\n            \"FromPort\" : 123,\n            \"ToPort\" : 123,\n            \"SourceSecurityGroupId\" : {\n              \"Ref\" : \"DomainMembersSG\"\n            }\n          }, {\n            \"IpProtocol\" : \"tcp\",\n            \"Description\" : \"RPC Port\",\n            \"FromPort\" : 135,\n            \"ToPort\" : 135,\n            \"SourceSecurityGroupId\" : {\n              \"Ref\" : \"DomainMembersSG\"\n            }\n          }, {\n            \"IpProtocol\" : \"udp\",\n            \"Description\" : \"Netlogon\",\n            \"FromPort\" : 138,\n            \"ToPort\" : 138,\n            \"SourceSecurityGroupId\" : {\n              \"Ref\" : \"DomainMembersSG\"\n            }\n          }, {\n            \"IpProtocol\" : \"tcp\",\n            \"Description\" : \"LDAP\",\n            \"FromPort\" : 389,\n            \"ToPort\" : 389,\n            \"SourceSecurityGroupId\" : {\n              \"Ref\" : \"DomainMembersSG\"\n            }\n          }, {\n            \"IpProtocol\" : \"udp\",\n            \"Description\" : \"LDAP\",\n            \"FromPort\" : 389,\n            \"ToPort\" : 389,\n            \"SourceSecurityGroupId\" : {\n              \"Ref\" : \"DomainMembersSG\"\n            }\n          }, {\n            \"IpProtocol\" : \"tcp\",\n            \"Description\" : \"SMB\",\n            \"FromPort\" : 445,\n            \"ToPort\" : 445,\n            \"SourceSecurityGroupId\" : {\n              \"Ref\" : \"DomainMembersSG\"\n            }\n          }, {\n            \"IpProtocol\" : \"udp\",\n            \"Description\" : \"SMB\",\n            \"FromPort\" : 445,\n            \"ToPort\" : 445,\n            \"SourceSecurityGroupId\" : {\n              \"Ref\" : \"DomainMembersSG\"\n            }\n          }, {\n            \"IpProtocol\" : \"udp\",\n            \"Description\" : \"Kerberos Set & Change Password\",\n            \"FromPort\" : 464,\n            \"ToPort\" : 464,\n            \"SourceSecurityGroupId\" : {\n              \"Ref\" : \"DomainMembersSG\"\n            }\n          }, {\n            \"IpProtocol\" : \"tcp\",\n            \"Description\" : \"Kerberos Set & Change Password\",\n            \"FromPort\" : 464,\n            \"ToPort\" : 464,\n            \"SourceSecurityGroupId\" : {\n              \"Ref\" : \"DomainMembersSG\"\n            }\n          }, {\n            \"IpProtocol\" : \"tcp\",\n            \"Description\" : \"LDAP over SSL\",\n            \"FromPort\" : 636,\n            \"ToPort\" : 636,\n            \"SourceSecurityGroupId\" : {\n              \"Ref\" : \"DomainMembersSG\"\n            }\n          }, {\n            \"IpProtocol\" : \"tcp\",\n            \"Description\" : \"LDAP Global Catalog\",\n            \"FromPort\" : 3268,\n            \"ToPort\" : 3268,\n            \"SourceSecurityGroupId\" : {\n              \"Ref\" : \"DomainMembersSG\"\n            }\n          }, {\n            \"IpProtocol\" : \"tcp\",\n            \"Description\" : \"LDAP Global Catalog over SSL\",\n            \"FromPort\" : 3269,\n            \"ToPort\" : 3269,\n            \"SourceSecurityGroupId\" : {\n              \"Ref\" : \"DomainMembersSG\"\n            }\n          }, {\n            \"IpProtocol\" : \"tcp\",\n            \"Description\" : \"RDP\",\n            \"FromPort\" : 3389,\n            \"ToPort\" : 3389,\n            \"SourceSecurityGroupId\" : {\n              \"Ref\" : \"DomainMembersSG\"\n            }\n          }, {\n            \"IpProtocol\" : \"tcp\",\n            \"Description\" : \"WinRM\",\n            \"FromPort\" : 5985,\n            \"ToPort\" : 5985,\n            \"SourceSecurityGroupId\" : {\n              \"Ref\" : \"DomainMembersSG\"\n            }\n          }, {\n            \"IpProtocol\" : \"tcp\",\n            \"Description\" : \"SOAP ADWS\",\n            \"FromPort\" : 9389,\n            \"ToPort\" : 9389,\n            \"SourceSecurityGroupId\" : {\n              \"Ref\" : \"DomainMembersSG\"\n            }\n          }, {\n            \"IpProtocol\" : \"tcp\",\n            \"Description\" : \"Random RPC\",\n            \"FromPort\" : 49152,\n            \"ToPort\" : 65535,\n            \"SourceSecurityGroupId\" : {\n              \"Ref\" : \"DomainMembersSG\"\n            }\n          }, {\n            \"IpProtocol\" : \"udp\",\n            \"Description\" : \"Random RPC\",\n            \"FromPort\" : 49152,\n            \"ToPort\" : 65535,\n            \"SourceSecurityGroupId\" : {\n              \"Ref\" : \"DomainMembersSG\"\n            }\n          } ],\n          \"Tags\" : [ {\n            \"Key\" : \"Name\",\n            \"Value\" : \"DomainControllersSecurityGroup\"\n          } ]\n        }\n      },\n      \"DomainMembersSG\" : {\n        \"Type\" : \"AWS::EC2::SecurityGroup\",\n        \"Metadata\" : {\n          \"cfn_nag\" : {\n            \"rules_to_suppress\" : [ {\n              \"id\" : \"F1000\",\n              \"reason\" : \"Standard Amazon practice\"\n            } ]\n          }\n        },\n        \"Properties\" : {\n          \"GroupDescription\" : \"Domain Members\",\n          \"VpcId\" : {\n            \"Ref\" : \"VPCID\"\n          },\n          \"Tags\" : [ {\n            \"Key\" : \"Name\",\n            \"Value\" : \"DomainMembersSecurityGroup\"\n          } ]\n        }\n      },\n      \"DomainMembersIngressRDP\" : {\n        \"Type\" : \"AWS::EC2::SecurityGroupIngress\",\n        \"Properties\" : {\n          \"Description\" : \"RDP\",\n          \"GroupId\" : {\n            \"Ref\" : \"DomainMembersSG\"\n          },\n          \"IpProtocol\" : \"tcp\",\n          \"FromPort\" : 3389,\n          \"ToPort\" : 3389,\n          \"SourceSecurityGroupId\" : {\n            \"Ref\" : \"DomainMembersSG\"\n          }\n        }\n      },\n      \"DomainMembersIngressWinRMHTTP\" : {\n        \"Type\" : \"AWS::EC2::SecurityGroupIngress\",\n        \"Properties\" : {\n          \"Description\" : \"WinRM-HTTP\",\n          \"GroupId\" : {\n            \"Ref\" : \"DomainMembersSG\"\n          },\n          \"IpProtocol\" : \"tcp\",\n          \"FromPort\" : 5985,\n          \"ToPort\" : 5985,\n          \"SourceSecurityGroupId\" : {\n            \"Ref\" : \"DomainMembersSG\"\n          }\n        }\n      },\n      \"DomainMembersIngressWinRMHTTPS\" : {\n        \"Type\" : \"AWS::EC2::SecurityGroupIngress\",\n        \"Properties\" : {\n          \"Description\" : \"WinRM-HTTPS\",\n          \"GroupId\" : {\n            \"Ref\" : \"DomainMembersSG\"\n          },\n          \"IpProtocol\" : \"tcp\",\n          \"FromPort\" : 5986,\n          \"ToPort\" : 5986,\n          \"SourceSecurityGroupId\" : {\n            \"Ref\" : \"DomainMembersSG\"\n          }\n        }\n      },\n      \"DCSecurityGroupIngress\" : {\n        \"Type\" : \"AWS::EC2::SecurityGroupIngress\",\n        \"Properties\" : {\n          \"Description\" : \"Security Group Rule between Domain Controllers\",\n          \"GroupId\" : {\n            \"Ref\" : \"DomainControllersSG\"\n          },\n          \"IpProtocol\" : \"-1\",\n          \"FromPort\" : -1,\n          \"ToPort\" : -1,\n          \"SourceSecurityGroupId\" : {\n            \"Ref\" : \"DomainControllersSG\"\n          }\n        }\n      },\n      \"EntCAStack\" : {\n        \"Condition\" : \"ShouldCreateOneTierPkiResource\",\n        \"DependsOn\" : \"DomainController2\",\n        \"Type\" : \"AWS::CloudFormation::Stack\",\n        \"Properties\" : {\n          \"TemplateURL\" : {\n            \"Fn::Sub\" : [ \"https://${S3Bucket}.s3.${S3Region}.${AWS::URLSuffix}/${QSS3KeyPrefix}submodules/quickstart-microsoft-pki/templates/one-tier.template\", {\n              \"S3Region\" : {\n                \"Fn::If\" : [ \"UsingDefaultBucket\", {\n                  \"Ref\" : \"AWS::Region\"\n                }, {\n                  \"Ref\" : \"QSS3BucketRegion\"\n                } ]\n              },\n              \"S3Bucket\" : {\n                \"Fn::If\" : [ \"UsingDefaultBucket\", {\n                  \"Fn::Sub\" : \"${QSS3BucketName}-${AWS::Region}\"\n                }, {\n                  \"Ref\" : \"QSS3BucketName\"\n                } ]\n              }\n            } ]\n          },\n          \"Parameters\" : {\n            \"AMI\" : {\n              \"Ref\" : \"CaAmi\"\n            },\n            \"AdministratorSecret\" : {\n              \"Ref\" : \"ADAltUserSecrets\"\n            },\n            \"DirectoryType\" : \"SelfManaged\",\n            \"DomainController1IP\" : {\n              \"Ref\" : \"ADServer1PrivateIP\"\n            },\n            \"DomainController2IP\" : {\n              \"Ref\" : \"ADServer2PrivateIP\"\n            },\n            \"DomainDNSName\" : {\n              \"Ref\" : \"DomainDNSName\"\n            },\n            \"DomainMembersSG\" : {\n              \"Ref\" : \"DomainMembersSG\"\n            },\n            \"DomainNetBIOSName\" : {\n              \"Ref\" : \"DomainNetBIOSName\"\n            },\n            \"EntCaDataDriveSizeGiB\" : {\n              \"Ref\" : \"CaDataDriveSizeGiB\"\n            },\n            \"EntCaHashAlgorithm\" : {\n              \"Ref\" : \"CaHashAlgorithm\"\n            },\n            \"EntCaKeyLength\" : {\n              \"Ref\" : \"CaKeyLength\"\n            },\n            \"EntCaServerInstanceType\" : {\n              \"Ref\" : \"CaServerInstanceType\"\n            },\n            \"EntCaServerNetBIOSName\" : {\n              \"Ref\" : \"EntCaServerNetBIOSName\"\n            },\n            \"EntCaServerSubnet\" : {\n              \"Ref\" : \"PrivateSubnet1ID\"\n            },\n            \"EntCaValidityPeriodUnits\" : {\n              \"Ref\" : \"CaValidityPeriodUnits\"\n            },\n            \"KeyPairName\" : {\n              \"Ref\" : \"KeyPairName\"\n            },\n            \"QSS3BucketName\" : {\n              \"Ref\" : \"QSS3BucketName\"\n            },\n            \"QSS3BucketRegion\" : {\n              \"Ref\" : \"QSS3BucketRegion\"\n            },\n            \"QSS3KeyPrefix\" : {\n              \"Fn::Sub\" : \"${QSS3KeyPrefix}submodules/quickstart-microsoft-pki/\"\n            },\n            \"S3CRLBucketName\" : {\n              \"Ref\" : \"S3CRLBucketName\"\n            },\n            \"UseS3ForCRL\" : {\n              \"Ref\" : \"UseS3ForCRL\"\n            },\n            \"VPCCIDR\" : {\n              \"Ref\" : \"VPCCIDR\"\n            },\n            \"VPCID\" : {\n              \"Ref\" : \"VPCID\"\n            }\n          }\n        }\n      },\n      \"TwoTierCAStack\" : {\n        \"Condition\" : \"ShouldCreateTwoTierPkiResource\",\n        \"DependsOn\" : \"DomainController2\",\n        \"Type\" : \"AWS::CloudFormation::Stack\",\n        \"Properties\" : {\n          \"TemplateURL\" : {\n            \"Fn::Sub\" : [ \"https://${S3Bucket}.s3.${S3Region}.${AWS::URLSuffix}/${QSS3KeyPrefix}submodules/quickstart-microsoft-pki/templates/two-tier.template\", {\n              \"S3Region\" : {\n                \"Fn::If\" : [ \"UsingDefaultBucket\", {\n                  \"Ref\" : \"AWS::Region\"\n                }, {\n                  \"Ref\" : \"QSS3BucketRegion\"\n                } ]\n              },\n              \"S3Bucket\" : {\n                \"Fn::If\" : [ \"UsingDefaultBucket\", {\n                  \"Fn::Sub\" : \"${QSS3BucketName}-${AWS::Region}\"\n                }, {\n                  \"Ref\" : \"QSS3BucketName\"\n                } ]\n              }\n            } ]\n          },\n          \"Parameters\" : {\n            \"AMI\" : {\n              \"Ref\" : \"CaAmi\"\n            },\n            \"AdministratorSecret\" : {\n              \"Ref\" : \"ADAltUserSecrets\"\n            },\n            \"DirectoryType\" : \"SelfManaged\",\n            \"DomainController1IP\" : {\n              \"Ref\" : \"ADServer1PrivateIP\"\n            },\n            \"DomainController2IP\" : {\n              \"Ref\" : \"ADServer2PrivateIP\"\n            },\n            \"DomainDNSName\" : {\n              \"Ref\" : \"DomainDNSName\"\n            },\n            \"DomainMembersSG\" : {\n              \"Ref\" : \"DomainMembersSG\"\n            },\n            \"DomainNetBIOSName\" : {\n              \"Ref\" : \"DomainNetBIOSName\"\n            },\n            \"KeyPairName\" : {\n              \"Ref\" : \"KeyPairName\"\n            },\n            \"OrCaDataDriveSizeGiB\" : {\n              \"Ref\" : \"CaDataDriveSizeGiB\"\n            },\n            \"OrCaHashAlgorithm\" : {\n              \"Ref\" : \"CaHashAlgorithm\"\n            },\n            \"OrCaKeyLength\" : {\n              \"Ref\" : \"CaKeyLength\"\n            },\n            \"OrCaServerInstanceType\" : {\n              \"Ref\" : \"CaServerInstanceType\"\n            },\n            \"OrCaServerNetBIOSName\" : {\n              \"Ref\" : \"OrCaServerNetBIOSName\"\n            },\n            \"OrCaServerSubnet\" : {\n              \"Ref\" : \"PrivateSubnet1ID\"\n            },\n            \"OrCaValidityPeriodUnits\" : {\n              \"Ref\" : \"OrCaValidityPeriodUnits\"\n            },\n            \"QSS3BucketName\" : {\n              \"Ref\" : \"QSS3BucketName\"\n            },\n            \"QSS3BucketRegion\" : {\n              \"Ref\" : \"QSS3BucketRegion\"\n            },\n            \"QSS3KeyPrefix\" : {\n              \"Fn::Sub\" : \"${QSS3KeyPrefix}submodules/quickstart-microsoft-pki/\"\n            },\n            \"S3CRLBucketName\" : {\n              \"Ref\" : \"S3CRLBucketName\"\n            },\n            \"SubCaDataDriveSizeGiB\" : {\n              \"Ref\" : \"CaDataDriveSizeGiB\"\n            },\n            \"SubCaHashAlgorithm\" : {\n              \"Ref\" : \"CaHashAlgorithm\"\n            },\n            \"SubCaKeyLength\" : {\n              \"Ref\" : \"CaKeyLength\"\n            },\n            \"SubCaServerInstanceType\" : {\n              \"Ref\" : \"CaServerInstanceType\"\n            },\n            \"SubCaServerNetBIOSName\" : {\n              \"Ref\" : \"EntCaServerNetBIOSName\"\n            },\n            \"SubCaServerSubnet\" : {\n              \"Ref\" : \"PrivateSubnet1ID\"\n            },\n            \"SubCaValidityPeriodUnits\" : {\n              \"Ref\" : \"CaValidityPeriodUnits\"\n            },\n            \"UseS3ForCRL\" : {\n              \"Ref\" : \"UseS3ForCRL\"\n            },\n            \"VPCCIDR\" : {\n              \"Ref\" : \"VPCCIDR\"\n            },\n            \"VPCID\" : {\n              \"Ref\" : \"VPCID\"\n            }\n          }\n        }\n      }\n    },\n    \"Outputs\" : {\n      \"ADSecretsArn\" : {\n        \"Description\" : \"Alternate AD User Secrets ARN\",\n        \"Value\" : {\n          \"Ref\" : \"ADAltUserSecrets\"\n        }\n      },\n      \"DC1InstanceId\" : {\n        \"Description\" : \"DomainController 1 instance ID\",\n        \"Value\" : {\n          \"Ref\" : \"DomainController1\"\n        }\n      },\n      \"DC2InstanceId\" : {\n        \"Description\" : \"DomainController 2 instance ID\",\n        \"Value\" : {\n          \"Ref\" : \"DomainController2\"\n        }\n      },\n      \"DomainAdmin\" : {\n        \"Description\" : \"Domain administrator account\",\n        \"Value\" : {\n          \"Fn::Sub\" : \"${DomainNetBIOSName}\\\\${DomainAdminUser}\"\n        }\n      },\n      \"DomainControllersSGID\" : {\n        \"Description\" : \"Domain Controllers Security Group ID\",\n        \"Value\" : {\n          \"Ref\" : \"DomainControllersSG\"\n        }\n      },\n      \"DomainMemberSGID\" : {\n        \"Description\" : \"Domain Member Security Group ID\",\n        \"Value\" : {\n          \"Ref\" : \"DomainMembersSG\"\n        }\n      }\n    }\n  }\n}",
  "CreatedDate": "2022-07-19T19:26:29.894Z",
  "DisplayName": null,
  "DocumentFormat": {
    "Value": "JSON"
  },
  "DocumentType": {
    "Value": "CloudFormation"
  },
  "DocumentVersion": "5",
  "Name": "AWSQuickStarts-Microsoft-AD-SelfManaged-Existing-VPC",
  "Requires": [],
  "ReviewStatus": null,
  "Status": {
    "Value": "Active"
  },
  "StatusInformation": null,
  "VersionName": "AWSQuickStarts-Microsoft-AD-SelfManaged-Existing-VPC-2022-07-19-19-19-40",
  "ResponseMetadata": {
    "RequestId": "bef2707e-7f16-4a06-9803-ba69e92161ec",
    "Metadata": {},
    "ChecksumAlgorithm": 0,
    "ChecksumValidationStatus": 0
  },
  "ContentLength": 78737,
  "HttpStatusCode": 200,
  "LoggedAt": "2022-07-25T07:13:32.4030852+00:00"
}
