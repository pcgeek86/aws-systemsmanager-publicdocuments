{
  "AttachmentsContent": [],
  "Content": "{\n  \"description\" : \"# Id\\nrds:sop:promote_non_aurora_replica:2020-04-01\\n\\n## Intent\\nSOP to recover an instance by promoting a replica to master in case of failure in the master instance.\\n\\n## Type\\nHARDWARE\\n\\n## Risk\\nMEDIUM\\n\\n## Requirements\\n* RDS db with at least one read replica\\n\\n## Permission required for AutomationAssumeRole\\n* rds:CreateDBInstanceReadReplica\\n* rds:DeleteDBInstance\\n* rds:DescribeDBInstances\\n* rds:ModifyDBInstance\\n* rds:PromoteReadReplica\\n* kms:DescribeKey\\n* kms:CreateGrant\\n\\n## Supports Rollback\\n  No.\\n\\n## Inputs\\n### DbInstanceIdentifier\\n  * Description: (Required) The identifier of the source DB instance with at least one read replica\\n  * Type: String\\n### Dryrun\\n  * Description: (Optional) Dryrun indicates a testing run, changes will be rolled back.\\n  * Type: String\\n  * Default: False\\n### AutomationAssumeRole:\\n  * Description: (Required) The ARN of the role that allows Automation to perform the actions on your behalf.\\n  * Type: String\\n\\n## Details of SSM Document steps:\\n### On Dryrun mode (Dryrun=True):\\n  * Dryrun_StartBranch\\n  * CreateReadReplica\\n  * WaitForCreateReadReplica\\n  * ReplicaIdParameter\\n  * RecordStartTime\\n  * PromoteReadReplica\\n  * WaitForPromotionToStart\\n  * RenameParameters\\n  * WaitPreviousDatabaseAvailable\\n  * RenamePreviousDatabaseToOld\\n  * WaitForMasterToBeRenamedToOld\\n  * RenameNewDatabaseToNoSuffix\\n  * WaitForNewToBeRenamedToMaster\\n  * OutputRecoveryTime\\n  * Dryrun_EndBranch\\n  * DeletePromotedInstance\\n\\n### On Dryrun mode (Dryrun=False):\\n  * Dryrun_StartBranch\\n  * TrafficRedirectionPause\\n  * FetchFirstReadReplicaName\\n  * ReplicaIdParameter\\n  * RecordStartTime\\n  * PromoteReadReplica\\n  * WaitForPromotionToStart\\n  * RenameParameters\\n  * WaitPreviousDatabaseAvailable\\n  * RenamePreviousDatabaseToOld\\n  * WaitForMasterToBeRenamedToOld\\n  * RenameNewDatabaseToNoSuffix\\n  * WaitForNewToBeRenamedToMaster\\n  * OutputRecoveryTime\\n  * Dryrun_EndBranch\\n  * EmptyStepForWetrunEnd\\n\\n## Outputs\\n  * OutputRecoveryTime.RecoveryTime: recovery time in seconds\",\n  \"schemaVersion\" : \"0.3\",\n  \"assumeRole\" : \"{{ AutomationAssumeRole }}\",\n  \"parameters\" : {\n    \"Dryrun\" : {\n      \"type\" : \"Boolean\",\n      \"default\" : false,\n      \"description\" : \"(Optional) Dryrun indicates a testing run, changes will be rolled back.\"\n    },\n    \"AutomationAssumeRole\" : {\n      \"type\" : \"String\",\n      \"description\" : \"(Required) The ARN of the role that allows Automation to perform the actions on your behalf.\"\n    },\n    \"DbInstanceIdentifier\" : {\n      \"type\" : \"String\",\n      \"description\" : \"(Required) The identifier of the source DB instance with at least one read replica\"\n    }\n  },\n  \"outputs\" : [ \"OutputRecoveryTime.RecoveryTime\" ],\n  \"mainSteps\" : [ {\n    \"name\" : \"Dryrun_StartBranch\",\n    \"action\" : \"aws:branch\",\n    \"inputs\" : {\n      \"Choices\" : [ {\n        \"NextStep\" : \"TrafficRedirectionPause\",\n        \"Variable\" : \"{{Dryrun}}\",\n        \"BooleanEquals\" : false\n      }, {\n        \"NextStep\" : \"CreateReadReplica\",\n        \"Variable\" : \"{{Dryrun}}\",\n        \"BooleanEquals\" : true\n      } ]\n    },\n    \"description\" : \"\"\n  }, {\n    \"name\" : \"TrafficRedirectionPause\",\n    \"action\" : \"aws:pause\",\n    \"inputs\" : {\n      \"Message\" : \"Resume execution once traffic has been redirected from the resource\"\n    }\n  }, {\n    \"name\" : \"FetchFirstReadReplicaName\",\n    \"action\" : \"aws:executeAwsApi\",\n    \"nextStep\" : \"ReplicaIdParameter\",\n    \"inputs\" : {\n      \"Service\" : \"rds\",\n      \"Api\" : \"DescribeDBInstances\",\n      \"DBInstanceIdentifier\" : \"{{DbInstanceIdentifier}}\"\n    },\n    \"outputs\" : [ {\n      \"Name\" : \"ReplicaId\",\n      \"Selector\" : \"$.DBInstances[0].ReadReplicaDBInstanceIdentifiers[0]\",\n      \"Type\" : \"String\"\n    } ]\n  }, {\n    \"name\" : \"CreateReadReplica\",\n    \"action\" : \"aws:executeScript\",\n    \"outputs\" : [ {\n      \"Name\" : \"ReplicaId\",\n      \"Selector\" : \"$.Payload\",\n      \"Type\" : \"String\"\n    } ],\n    \"inputs\" : {\n      \"Runtime\" : \"python3.8\",\n      \"Handler\" : \"script_handler\",\n      \"Script\" : \"\\nimport logging\\nimport random\\nimport time\\nfrom datetime import datetime, timezone\\nfrom operator import itemgetter\\n\\nimport boto3\\nimport botocore\\nfrom botocore.config import Config\\nfrom botocore.exceptions import ClientError\\n\\nlogger = logging.getLogger(__name__)\\nlogger.setLevel(logging.INFO)\\n\\nvalid_capacity_PostgreSQL = [2, 4, 8, 16, 32, 64]\\n\\nRESTORED_CLUSTER_SUFFIX_FORMAT = '%m-%d-%Y-%H-%M-%S'\\n\\n\\n\\n\\ndef get_execution_instance_id(rds_instance_id, middle, execution_id):\\n    \\\"\\\"\\\"\\n    Valid RDS Instance identifier from string\\n    \\\"\\\"\\\"\\n    # identifier must be less than 63 characters, but we allow 2 chars for extra suffix\\n    # https://docs.aws.amazon.com/cli/latest/reference/rds/create-db-instance.html\\n    max_length = 61\\n    prefix_length = max_length - len(execution_id) - len(middle) - 2  # hyphens\\n    prefix = rds_instance_id[0:prefix_length].rstrip('-')  # two consecutive hyphens is not allowed.\\n    rds_instance_id = f\\\"{prefix}-{middle}-{execution_id}\\\"\\n    return rds_instance_id\\n\\n\\n\\n\\ndef script_handler(events, context):\\n  import boto3\\n  rds = boto3.client('rds')\\n  replica_db_instance_id = get_execution_instance_id(events['SourceDBInstanceIdentifier'], 'new', events['AutomationId'])\\n  rds.create_db_instance_read_replica(\\n    DBInstanceIdentifier = replica_db_instance_id,\\n    SourceDBInstanceIdentifier = events['SourceDBInstanceIdentifier']\\n  )\\n  return replica_db_instance_id\",\n      \"InputPayload\" : {\n        \"SourceDBInstanceIdentifier\" : \"{{DbInstanceIdentifier}}\",\n        \"AutomationId\" : \"{{automation:EXECUTION_ID}}\"\n      }\n    }\n  }, {\n    \"name\" : \"WaitForCreateReadReplica\",\n    \"action\" : \"aws:waitForAwsResourceProperty\",\n    \"timeoutSeconds\" : 900,\n    \"maxAttempts\" : 3,\n    \"inputs\" : {\n      \"Service\" : \"rds\",\n      \"Api\" : \"DescribeDBInstances\",\n      \"DBInstanceIdentifier\" : \"{{CreateReadReplica.ReplicaId}}\",\n      \"PropertySelector\" : \"$.DBInstances[0].DBInstanceStatus\",\n      \"DesiredValues\" : [ \"available\" ]\n    }\n  }, {\n    \"name\" : \"ReplicaIdParameter\",\n    \"action\" : \"aws:executeScript\",\n    \"outputs\" : [ {\n      \"Name\" : \"ReplicaId\",\n      \"Selector\" : \"$.Payload\",\n      \"Type\" : \"String\"\n    } ],\n    \"inputs\" : {\n      \"Runtime\" : \"python3.8\",\n      \"Handler\" : \"script_handler\",\n      \"Script\" : \"def script_handler(events, context):\\n  return events['DryrunReplicaId'] if events['Dryrun'] else events['WetrunReplicaId']\",\n      \"InputPayload\" : {\n        \"Dryrun\" : \"{{Dryrun}}\",\n        \"WetrunReplicaId\" : \"{{FetchFirstReadReplicaName.ReplicaId}}\",\n        \"DryrunReplicaId\" : \"{{CreateReadReplica.ReplicaId}}\"\n      }\n    }\n  }, {\n    \"name\" : \"RecordStartTime\",\n    \"action\" : \"aws:executeScript\",\n    \"outputs\" : [ {\n      \"Name\" : \"StartTime\",\n      \"Selector\" : \"$.Payload\",\n      \"Type\" : \"String\"\n    } ],\n    \"inputs\" : {\n      \"Runtime\" : \"python3.8\",\n      \"Handler\" : \"script_handler\",\n      \"Script\" : \"def script_handler(events, context):\\n  from datetime import datetime, timezone\\n  return datetime.now(timezone.utc).isoformat()\"\n    }\n  }, {\n    \"name\" : \"PromoteReadReplica\",\n    \"action\" : \"aws:executeAwsApi\",\n    \"description\" : \"Promote a read replica to standalone instance\",\n    \"inputs\" : {\n      \"Service\" : \"rds\",\n      \"Api\" : \"PromoteReadReplica\",\n      \"DBInstanceIdentifier\" : \"{{ReplicaIdParameter.ReplicaId}}\"\n    }\n  }, {\n    \"name\" : \"WaitForPromotionToStart\",\n    \"action\" : \"aws:sleep\",\n    \"inputs\" : {\n      \"Duration\" : \"PT30S\"\n    }\n  }, {\n    \"name\" : \"WaitForPromoteReadReplica\",\n    \"action\" : \"aws:waitForAwsResourceProperty\",\n    \"timeoutSeconds\" : 900,\n    \"maxAttempts\" : 3,\n    \"inputs\" : {\n      \"Service\" : \"rds\",\n      \"Api\" : \"DescribeDBInstances\",\n      \"DBInstanceIdentifier\" : \"{{ReplicaIdParameter.ReplicaId}}\",\n      \"PropertySelector\" : \"$.DBInstances[0].DBInstanceStatus\",\n      \"DesiredValues\" : [ \"available\" ]\n    }\n  }, {\n    \"name\" : \"RenameParameters\",\n    \"action\" : \"aws:executeScript\",\n    \"outputs\" : [ {\n      \"Name\" : \"MasterSourceId\",\n      \"Selector\" : \"$.Payload.MasterSourceId\",\n      \"Type\" : \"String\"\n    }, {\n      \"Name\" : \"MasterTargetId\",\n      \"Selector\" : \"$.Payload.MasterTargetId\",\n      \"Type\" : \"String\"\n    }, {\n      \"Name\" : \"PromotedSourceId\",\n      \"Selector\" : \"$.Payload.PromotedSourceId\",\n      \"Type\" : \"String\"\n    }, {\n      \"Name\" : \"PromotedTargetId\",\n      \"Selector\" : \"$.Payload.PromotedTargetId\",\n      \"Type\" : \"String\"\n    } ],\n    \"inputs\" : {\n      \"Runtime\" : \"python3.8\",\n      \"Handler\" : \"script_handler\",\n      \"Script\" : \"\\nimport logging\\nimport random\\nimport time\\nfrom datetime import datetime, timezone\\nfrom operator import itemgetter\\n\\nimport boto3\\nimport botocore\\nfrom botocore.config import Config\\nfrom botocore.exceptions import ClientError\\n\\nlogger = logging.getLogger(__name__)\\nlogger.setLevel(logging.INFO)\\n\\nvalid_capacity_PostgreSQL = [2, 4, 8, 16, 32, 64]\\n\\nRESTORED_CLUSTER_SUFFIX_FORMAT = '%m-%d-%Y-%H-%M-%S'\\n\\n\\n\\n\\ndef get_execution_instance_id(rds_instance_id, middle, execution_id):\\n    \\\"\\\"\\\"\\n    Valid RDS Instance identifier from string\\n    \\\"\\\"\\\"\\n    # identifier must be less than 63 characters, but we allow 2 chars for extra suffix\\n    # https://docs.aws.amazon.com/cli/latest/reference/rds/create-db-instance.html\\n    max_length = 61\\n    prefix_length = max_length - len(execution_id) - len(middle) - 2  # hyphens\\n    prefix = rds_instance_id[0:prefix_length].rstrip('-')  # two consecutive hyphens is not allowed.\\n    rds_instance_id = f\\\"{prefix}-{middle}-{execution_id}\\\"\\n    return rds_instance_id\\n\\n\\n\\n\\ndef script_handler(events, context):\\n  automation_id = events['AutomationId']\\n  master_id = events['MasterId']\\n  wetrun_replica_id = events['WetrunReplicaId']\\n  dryrun_replica_id = events['DryrunReplicaId']\\n  old_replica_id = get_execution_instance_id(master_id, 'old', automation_id)\\n  dryrun = events['Dryrun']\\n  return {\\n    'MasterSourceId' : dryrun_replica_id  if dryrun else master_id,\\n    'MasterTargetId' : dryrun_replica_id + '-1' if dryrun else old_replica_id,\\n    'PromotedSourceId' : dryrun_replica_id + '-1' if dryrun else wetrun_replica_id,\\n    'PromotedTargetId' : dryrun_replica_id + '-2' if dryrun else master_id\\n  }\",\n      \"InputPayload\" : {\n        \"Dryrun\" : \"{{Dryrun}}\",\n        \"MasterId\" : \"{{DbInstanceIdentifier}}\",\n        \"WetrunReplicaId\" : \"{{FetchFirstReadReplicaName.ReplicaId}}\",\n        \"DryrunReplicaId\" : \"{{CreateReadReplica.ReplicaId}}\",\n        \"AutomationId\" : \"{{automation:EXECUTION_ID}}\"\n      }\n    }\n  }, {\n    \"name\" : \"WaitPreviousDatabaseAvailable\",\n    \"action\" : \"aws:waitForAwsResourceProperty\",\n    \"timeoutSeconds\" : 900,\n    \"maxAttempts\" : 3,\n    \"inputs\" : {\n      \"Service\" : \"rds\",\n      \"Api\" : \"DescribeDBInstances\",\n      \"DBInstanceIdentifier\" : \"{{RenameParameters.MasterSourceId}}\",\n      \"PropertySelector\" : \"$.DBInstances[0].DBInstanceStatus\",\n      \"DesiredValues\" : [ \"available\" ]\n    }\n  }, {\n    \"name\" : \"RenamePreviousDatabaseToOld\",\n    \"action\" : \"aws:executeAwsApi\",\n    \"maxAttempts\" : 3,\n    \"inputs\" : {\n      \"Service\" : \"rds\",\n      \"Api\" : \"ModifyDBInstance\",\n      \"DBInstanceIdentifier\" : \"{{RenameParameters.MasterSourceId}}\",\n      \"NewDBInstanceIdentifier\" : \"{{RenameParameters.MasterTargetId}}\",\n      \"ApplyImmediately\" : true\n    }\n  }, {\n    \"name\" : \"WaitForMasterToBeRenamedToOld\",\n    \"action\" : \"aws:executeScript\",\n    \"timeoutSeconds\" : 600,\n    \"maxAttempts\" : 3,\n    \"inputs\" : {\n      \"Runtime\" : \"python3.8\",\n      \"Handler\" : \"script_handler\",\n      \"Script\" : \"def script_handler(events, context):\\n  import boto3, time\\n  rds = boto3.client('rds')\\n  while True:\\n    try:\\n      if rds.describe_db_instances(DBInstanceIdentifier=events[\\\"DBInstanceIdentifier\\\"])[\\\"DBInstances\\\"][0][\\\"DBInstanceStatus\\\"] == \\\"available\\\":\\n        return \\\"Instance successfully renamed to %s\\\" % (events[\\\"DBInstanceIdentifier\\\"])\\n    except rds.exceptions.DBInstanceNotFoundFault:\\n      pass\\n    finally:\\n      time.sleep(30)\",\n      \"InputPayload\" : {\n        \"DBInstanceIdentifier\" : \"{{RenameParameters.MasterTargetId}}\"\n      }\n    }\n  }, {\n    \"name\" : \"RenameNewDatabaseToNoSuffix\",\n    \"action\" : \"aws:executeAwsApi\",\n    \"maxAttempts\" : 3,\n    \"inputs\" : {\n      \"Service\" : \"rds\",\n      \"Api\" : \"ModifyDBInstance\",\n      \"DBInstanceIdentifier\" : \"{{RenameParameters.PromotedSourceId}}\",\n      \"NewDBInstanceIdentifier\" : \"{{RenameParameters.PromotedTargetId}}\",\n      \"ApplyImmediately\" : true\n    }\n  }, {\n    \"name\" : \"WaitForNewToBeRenamedToMaster\",\n    \"action\" : \"aws:executeScript\",\n    \"timeoutSeconds\" : 600,\n    \"maxAttempts\" : 3,\n    \"inputs\" : {\n      \"Runtime\" : \"python3.8\",\n      \"Handler\" : \"script_handler\",\n      \"Script\" : \"def script_handler(events, context):\\n  import boto3, time\\n  rds = boto3.client('rds')\\n  while True:\\n    try:\\n      if rds.describe_db_instances(DBInstanceIdentifier=events[\\\"DBInstanceIdentifier\\\"])[\\\"DBInstances\\\"][0][\\\"DBInstanceStatus\\\"] == \\\"available\\\":\\n        return \\\"Instance successfully renamed to %s\\\" % (events[\\\"DBInstanceIdentifier\\\"])\\n    except rds.exceptions.DBInstanceNotFoundFault:\\n      pass\\n    finally:\\n      time.sleep(30)\",\n      \"InputPayload\" : {\n        \"DBInstanceIdentifier\" : \"{{RenameParameters.PromotedTargetId}}\"\n      }\n    }\n  }, {\n    \"name\" : \"OutputRecoveryTime\",\n    \"action\" : \"aws:executeScript\",\n    \"inputs\" : {\n      \"Runtime\" : \"python3.8\",\n      \"Handler\" : \"script_handler\",\n      \"Script\" : \"def script_handler(events, context):\\n  from datetime import datetime, timezone\\n  from dateutil import parser\\n  return (datetime.now(timezone.utc) - parser.parse(events['StartTime'])).seconds\",\n      \"InputPayload\" : {\n        \"StartTime\" : \"{{RecordStartTime.StartTime}}\"\n      }\n    },\n    \"outputs\" : [ {\n      \"Name\" : \"RecoveryTime\",\n      \"Selector\" : \"$.Payload\",\n      \"Type\" : \"Integer\"\n    } ]\n  }, {\n    \"name\" : \"Dryrun_EndBranch\",\n    \"action\" : \"aws:branch\",\n    \"inputs\" : {\n      \"Choices\" : [ {\n        \"NextStep\" : \"EmptyStepForWetrunEnd\",\n        \"Variable\" : \"{{Dryrun}}\",\n        \"BooleanEquals\" : false\n      }, {\n        \"NextStep\" : \"DeletePromotedInstance\",\n        \"Variable\" : \"{{Dryrun}}\",\n        \"BooleanEquals\" : true\n      } ]\n    }\n  }, {\n    \"name\" : \"EmptyStepForWetrunEnd\",\n    \"action\" : \"aws:sleep\",\n    \"isEnd\" : true,\n    \"inputs\" : {\n      \"Duration\" : \"PT1S\"\n    }\n  }, {\n    \"name\" : \"DeletePromotedInstance\",\n    \"action\" : \"aws:executeAwsApi\",\n    \"maxAttempts\" : 3,\n    \"inputs\" : {\n      \"Service\" : \"rds\",\n      \"Api\" : \"DeleteDBInstance\",\n      \"DBInstanceIdentifier\" : \"{{CreateReadReplica.ReplicaId}}-2\",\n      \"SkipFinalSnapshot\" : true,\n      \"DeleteAutomatedBackups\" : true\n    }\n  } ]\n}",
  "CreatedDate": "2023-02-19T17:14:36.176Z",
  "DisplayName": null,
  "DocumentFormat": {
    "Value": "JSON"
  },
  "DocumentType": {
    "Value": "Automation"
  },
  "DocumentVersion": "6",
  "Name": "AWSResilienceHub-PromoteRdsReadReplicaSOP_2020-04-01",
  "Requires": [],
  "ReviewStatus": null,
  "Status": {
    "Value": "Active"
  },
  "StatusInformation": null,
  "VersionName": null,
  "ResponseMetadata": {
    "RequestId": "b924196b-b275-450f-bf98-9567a0fa7154",
    "Metadata": {},
    "ChecksumAlgorithm": 0,
    "ChecksumValidationStatus": 0
  },
  "ContentLength": 16297,
  "HttpStatusCode": 200,
  "LoggedAt": "2023-04-09T07:10:41.9553446+00:00"
}
