{
  "AttachmentsContent": [],
  "Content": "{\n  \"schemaVersion\" : \"0.3\",\n  \"description\" : \"### Document name - AWSConfigRemediation-EnableCloudFrontViewerPolicyHTTPS\\n\\n## What does this document do?\\nThis document modifies ViewerProtocolPolicy on a Amazon CloudFront distribution using the [UpdateDistribution]\\n(https://docs.aws.amazon.com/cloudfront/latest/APIReference/API_UpdateDistribution.html) API.\\n\\n## Input Parameters\\n* AutomationAssumeRole: (Required) The ARN of the role that allows Automation to perform the actions on your behalf.\\n* CloudFrontDistributionId: (Required) The Amazon CloudFront distribution id.\\n* ViewerProtocolPolicy: (Required) The protocol that viewers can use to access the files in the origin. Valid values are \\\"https-only\\\" and \\\"redirect-to-https\\\".\\n\\n## Output Parameters\\n* UpdateAndVerifyViewerProtocolPolicyOfCloudFrontDistribution.Output: The standard HTTP response from the UpdateDistribution API call.\\n\",\n  \"assumeRole\" : \"{{ AutomationAssumeRole }}\",\n  \"parameters\" : {\n    \"AutomationAssumeRole\" : {\n      \"type\" : \"String\",\n      \"description\" : \"(Required) The ARN of the role that allows Automation to perform the actions on your behalf.\",\n      \"allowedPattern\" : \"^arn:(aws[a-zA-Z-]*)?:iam::\\\\d{12}:role/[\\\\w+=,.@/-]+$\"\n    },\n    \"CloudFrontDistributionId\" : {\n      \"type\" : \"String\",\n      \"description\" : \"(Required) The Amazon CloudFront distribution id.\",\n      \"allowedPattern\" : \"[A-Z0-9]*\"\n    },\n    \"ViewerProtocolPolicy\" : {\n      \"type\" : \"String\",\n      \"description\" : \"(Required) The protocol that viewers can use to access the files in the origin.\",\n      \"allowedValues\" : [ \"https-only\", \"redirect-to-https\" ]\n    }\n  },\n  \"outputs\" : [ \"UpdateAndVerifyViewerProtocolPolicyOfCloudFrontDistribution.Output\" ],\n  \"mainSteps\" : [ {\n    \"name\" : \"UpdateAndVerifyViewerProtocolPolicyOfCloudFrontDistribution\",\n    \"action\" : \"aws:executeScript\",\n    \"description\" : \"## UpdateAndVerifyViewerProtocolPolicyOfCloudFrontDistribution\\nUpdates and Verifies viewer protocol policy on the given Amazon CloudFront distribution.\\n## Outputs\\n* Output: The standard HTTP response from the UpdateDistribution API call.\\n\",\n    \"isEnd\" : false,\n    \"timeoutSeconds\" : 600,\n    \"inputs\" : {\n      \"Runtime\" : \"python3.7\",\n      \"Handler\" : \"handler\",\n      \"InputPayload\" : {\n        \"CloudFrontDistributionId\" : \"{{ CloudFrontDistributionId }}\",\n        \"ViewerProtocolPolicy\" : \"{{ ViewerProtocolPolicy }}\"\n      },\n      \"Script\" : \"import boto3\\n\\ndef update_cloudfront_viewer_protocol_policy(cloudfront_client, cloudfront_distribution_id, viewer_protocol_policy):\\n  distribution_details = cloudfront_client.get_distribution(Id = cloudfront_distribution_id)\\n  distribution_config = distribution_details['Distribution']['DistributionConfig']\\n  distribution_config['DefaultCacheBehavior']['ViewerProtocolPolicy'] = viewer_protocol_policy\\n  update_response = cloudfront_client.update_distribution(Id=cloudfront_distribution_id, DistributionConfig=distribution_config, IfMatch=distribution_details['ETag'])\\n  return update_response\\n\\ndef verify_cloudfront_viewer_protocol_policy(cloudfront_client, cloudfront_distribution_id, viewer_protocol_policy):\\n  distribution_details = cloudfront_client.get_distribution(Id = cloudfront_distribution_id)\\n  updated_viewer_protocol_policy = distribution_details['Distribution']['DistributionConfig']['DefaultCacheBehavior']['ViewerProtocolPolicy']\\n  if updated_viewer_protocol_policy == viewer_protocol_policy:\\n    return True\\n  return False\\n\\ndef handler(event, context):\\n  cloudfront_client = boto3.client(\\\"cloudfront\\\")\\n  cloudfront_distribution_id = event[\\\"CloudFrontDistributionId\\\"]\\n  viewer_protocol_policy = event[\\\"ViewerProtocolPolicy\\\"]\\n\\n  update_response = update_cloudfront_viewer_protocol_policy(cloudfront_client, cloudfront_distribution_id, viewer_protocol_policy)\\n\\n  if verify_cloudfront_viewer_protocol_policy(cloudfront_client, cloudfront_distribution_id, viewer_protocol_policy):\\n    return {\\n          \\\"output\\\" : {\\n            \\\"Message\\\": \\\"Verification of update viewer protocol policy on given Amazon CloudFront distribution {} is successful\\\".format(cloudfront_distribution_id),\\n            \\\"HTTPResponse\\\": update_response['ResponseMetadata']\\n          }\\n      }\\n  raise Exception(\\\"VERIFICATION FAILED. UPDATE VIEWER PROTOCOL POLICY ON GIVEN AMAZON CLOUDFRONT DISTRIBUTION {} IS FAILED.\\\".format(cloudfront_distribution_id))\"\n    },\n    \"outputs\" : [ {\n      \"Name\" : \"Output\",\n      \"Selector\" : \"$.Payload.output\",\n      \"Type\" : \"StringMap\"\n    } ]\n  } ]\n}",
  "CreatedDate": "2021-01-28T16:06:38.46Z",
  "DisplayName": null,
  "DocumentFormat": {
    "Value": "JSON"
  },
  "DocumentType": {
    "Value": "Automation"
  },
  "DocumentVersion": "1",
  "Name": "AWSConfigRemediation-EnableCloudFrontViewerPolicyHTTPS",
  "Requires": [],
  "ReviewStatus": null,
  "Status": {
    "Value": "Active"
  },
  "StatusInformation": null,
  "VersionName": null,
  "ResponseMetadata": {
    "RequestId": "02cf806e-a7a4-4db6-9350-4ea1cfba3330",
    "Metadata": {},
    "ChecksumAlgorithm": 0,
    "ChecksumValidationStatus": 0
  },
  "ContentLength": 5022,
  "HttpStatusCode": 200,
  "LoggedAt": "2022-10-20T07:26:27.7239524+00:00"
}
