{
  "AttachmentsContent": [],
  "Content": "{\n  \"schemaVersion\": \"1.0\",\n  \"description\": \"(SO0023) - Serverless Image Handler with aws-solutions-constructs: This template deploys and configures a serverless architecture that is optimized for dynamic image manipulation and delivery at low latency and cost. Leverages SharpJS for image processing. Template version v5.2.0\",\n  \"templateBody\": {\n    \"Description\": \"(SO0023) - Serverless Image Handler with aws-solutions-constructs: This template deploys and configures a serverless architecture that is optimized for dynamic image manipulation and delivery at low latency and cost. Leverages SharpJS for image processing. Template version v5.2.0\",\n    \"AWSTemplateFormatVersion\": \"2010-09-09\",\n    \"Metadata\": {\n      \"AWS::CloudFormation::Interface\": {\n        \"ParameterGroups\": [\n          {\n            \"Label\": {\n              \"default\": \"CORS Options\"\n            },\n            \"Parameters\": [\n              \"CorsEnabled\",\n              \"CorsOrigin\"\n            ]\n          },\n          {\n            \"Label\": {\n              \"default\": \"Image Sources\"\n            },\n            \"Parameters\": [\n              \"SourceBuckets\"\n            ]\n          },\n          {\n            \"Label\": {\n              \"default\": \"Demo UI\"\n            },\n            \"Parameters\": [\n              \"DeployDemoUI\"\n            ]\n          },\n          {\n            \"Label\": {\n              \"default\": \"Event Logging\"\n            },\n            \"Parameters\": [\n              \"LogRetentionPeriod\"\n            ]\n          },\n          {\n            \"Label\": {\n              \"default\": \"Image URL Signature (Note: Enabling signature is not compatible with previous image URLs, which could result in broken image links. Please refer to the implementation guide for details: https://docs.aws.amazon.com/solutions/latest/serverless-image-handler/considerations.html)\"\n            },\n            \"Parameters\": [\n              \"EnableSignature\",\n              \"SecretsManagerSecret\",\n              \"SecretsManagerKey\"\n            ]\n          },\n          {\n            \"Label\": {\n              \"default\": \"Default Fallback Image (Note: Enabling default fallback image returns the default fallback image instead of JSON object when error happens. Please refer to the implementation guide for details: https://docs.aws.amazon.com/solutions/latest/serverless-image-handler/considerations.html)\"\n            },\n            \"Parameters\": [\n              \"EnableDefaultFallbackImage\",\n              \"FallbackImageS3Bucket\",\n              \"FallbackImageS3Key\"\n            ]\n          },\n          {\n            \"Label\": {\n              \"default\": \"Auto WebP\"\n            },\n            \"Parameters\": [\n              \"AutoWebP\"\n            ]\n          }\n        ]\n      }\n    },\n    \"Parameters\": {\n      \"CorsEnabled\": {\n        \"Type\": \"String\",\n        \"Default\": \"No\",\n        \"AllowedValues\": [\n          \"Yes\",\n          \"No\"\n        ],\n        \"Description\": \"Would you like to enable Cross-Origin Resource Sharing (CORS) for the image handler API? Select 'Yes' if so.\"\n      },\n      \"CorsOrigin\": {\n        \"Type\": \"String\",\n        \"Default\": \"*\",\n        \"Description\": \"If you selected 'Yes' above, please specify an origin value here. A wildcard (*) value will support any origin. We recommend specifying an origin (i.e. https://example.domain) to restrict cross-site access to your API.\"\n      },\n      \"SourceBuckets\": {\n        \"Type\": \"String\",\n        \"Default\": \"defaultBucket, bucketNo2, bucketNo3, ...\",\n        \"AllowedPattern\": \".+\",\n        \"Description\": \"(Required) List the buckets (comma-separated) within your account that contain original image files. If you plan to use Thumbor or Custom image requests with this solution, the source bucket for those requests will be the first bucket listed in this field.\"\n      },\n      \"DeployDemoUI\": {\n        \"Type\": \"String\",\n        \"Default\": \"Yes\",\n        \"AllowedValues\": [\n          \"Yes\",\n          \"No\"\n        ],\n        \"Description\": \"Would you like to deploy a demo UI to explore the features and capabilities of this solution? This will create an additional Amazon S3 bucket and Amazon CloudFront distribution in your account.\"\n      },\n      \"LogRetentionPeriod\": {\n        \"Type\": \"Number\",\n        \"Default\": \"1\",\n        \"AllowedValues\": [\n          \"1\",\n          \"3\",\n          \"5\",\n          \"7\",\n          \"14\",\n          \"30\",\n          \"60\",\n          \"90\",\n          \"120\",\n          \"150\",\n          \"180\",\n          \"365\",\n          \"400\",\n          \"545\",\n          \"731\",\n          \"1827\",\n          \"3653\"\n        ],\n        \"Description\": \"This solution automatically logs events to Amazon CloudWatch. Select the amount of time for CloudWatch logs from this solution to be retained (in days).\"\n      },\n      \"AutoWebP\": {\n        \"Type\": \"String\",\n        \"Default\": \"No\",\n        \"AllowedValues\": [\n          \"Yes\",\n          \"No\"\n        ],\n        \"Description\": \"Would you like to enable automatic WebP based on accept headers? Select 'Yes' if so.\"\n      },\n      \"EnableSignature\": {\n        \"Type\": \"String\",\n        \"Default\": \"No\",\n        \"AllowedValues\": [\n          \"Yes\",\n          \"No\"\n        ],\n        \"Description\": \"Would you like to enable the signature? If so, select 'Yes' and provide SecretsManagerSecret and SecretsManagerKey values.\"\n      },\n      \"SecretsManagerSecret\": {\n        \"Type\": \"String\",\n        \"Default\": \"\",\n        \"Description\": \"The name of AWS Secrets Manager secret. You need to create your secret under this name.\"\n      },\n      \"SecretsManagerKey\": {\n        \"Type\": \"String\",\n        \"Default\": \"\",\n        \"Description\": \"The name of AWS Secrets Manager secret key. You need to create secret key with this key name. The secret value would be used to check signature.\"\n      },\n      \"EnableDefaultFallbackImage\": {\n        \"Type\": \"String\",\n        \"Default\": \"No\",\n        \"AllowedValues\": [\n          \"Yes\",\n          \"No\"\n        ],\n        \"Description\": \"Would you like to enable the default fallback image? If so, select 'Yes' and provide FallbackImageS3Bucket and FallbackImageS3Key values.\"\n      },\n      \"FallbackImageS3Bucket\": {\n        \"Type\": \"String\",\n        \"Default\": \"\",\n        \"Description\": \"The name of the Amazon S3 bucket which contains the default fallback image. e.g. my-fallback-image-bucket\"\n      },\n      \"FallbackImageS3Key\": {\n        \"Type\": \"String\",\n        \"Default\": \"\",\n        \"Description\": \"The name of the default fallback image object key including prefix. e.g. prefix/image.jpg\"\n      }\n    },\n    \"Mappings\": {\n      \"Send\": {\n        \"AnonymousUsage\": {\n          \"Data\": \"Yes\"\n        }\n      }\n    },\n    \"Conditions\": {\n      \"DeployDemoUICondition\": {\n        \"Fn::Equals\": [\n          {\n            \"Ref\": \"DeployDemoUI\"\n          },\n          \"Yes\"\n        ]\n      },\n      \"EnableCorsCondition\": {\n        \"Fn::Equals\": [\n          {\n            \"Ref\": \"CorsEnabled\"\n          },\n          \"Yes\"\n        ]\n      },\n      \"EnableSignatureCondition\": {\n        \"Fn::Equals\": [\n          {\n            \"Ref\": \"EnableSignature\"\n          },\n          \"Yes\"\n        ]\n      },\n      \"EnableDefaultFallbackImageCondition\": {\n        \"Fn::Equals\": [\n          {\n            \"Ref\": \"EnableDefaultFallbackImage\"\n          },\n          \"Yes\"\n        ]\n      },\n      \"IsOptInRegion\": {\n        \"Fn::Or\": [\n          {\n            \"Fn::Equals\": [\n              \"af-south-1\",\n              {\n                \"Ref\": \"AWS::Region\"\n              }\n            ]\n          },\n          {\n            \"Fn::Equals\": [\n              \"ap-east-1\",\n              {\n                \"Ref\": \"AWS::Region\"\n              }\n            ]\n          },\n          {\n            \"Fn::Equals\": [\n              \"eu-south-1\",\n              {\n                \"Ref\": \"AWS::Region\"\n              }\n            ]\n          },\n          {\n            \"Fn::Equals\": [\n              \"me-south-1\",\n              {\n                \"Ref\": \"AWS::Region\"\n              }\n            ]\n          }\n        ]\n      },\n      \"IsNotOptInRegion\": {\n        \"Fn::Not\": [\n          {\n            \"Condition\": \"IsOptInRegion\"\n          }\n        ]\n      },\n      \"CDKMetadataAvailable\": {\n        \"Fn::Or\": [\n          {\n            \"Fn::Or\": [\n              {\n                \"Fn::Equals\": [\n                  {\n                    \"Ref\": \"AWS::Region\"\n                  },\n                  \"ap-east-1\"\n                ]\n              },\n              {\n                \"Fn::Equals\": [\n                  {\n                    \"Ref\": \"AWS::Region\"\n                  },\n                  \"ap-northeast-1\"\n                ]\n              },\n              {\n                \"Fn::Equals\": [\n                  {\n                    \"Ref\": \"AWS::Region\"\n                  },\n                  \"ap-northeast-2\"\n                ]\n              },\n              {\n                \"Fn::Equals\": [\n                  {\n                    \"Ref\": \"AWS::Region\"\n                  },\n                  \"ap-south-1\"\n                ]\n              },\n              {\n                \"Fn::Equals\": [\n                  {\n                    \"Ref\": \"AWS::Region\"\n                  },\n                  \"ap-southeast-1\"\n                ]\n              },\n              {\n                \"Fn::Equals\": [\n                  {\n                    \"Ref\": \"AWS::Region\"\n                  },\n                  \"ap-southeast-2\"\n                ]\n              },\n              {\n                \"Fn::Equals\": [\n                  {\n                    \"Ref\": \"AWS::Region\"\n                  },\n                  \"ca-central-1\"\n                ]\n              },\n              {\n                \"Fn::Equals\": [\n                  {\n                    \"Ref\": \"AWS::Region\"\n                  },\n                  \"cn-north-1\"\n                ]\n              },\n              {\n                \"Fn::Equals\": [\n                  {\n                    \"Ref\": \"AWS::Region\"\n                  },\n                  \"cn-northwest-1\"\n                ]\n              },\n              {\n                \"Fn::Equals\": [\n                  {\n                    \"Ref\": \"AWS::Region\"\n                  },\n                  \"eu-central-1\"\n                ]\n              }\n            ]\n          },\n          {\n            \"Fn::Or\": [\n              {\n                \"Fn::Equals\": [\n                  {\n                    \"Ref\": \"AWS::Region\"\n                  },\n                  \"eu-north-1\"\n                ]\n              },\n              {\n                \"Fn::Equals\": [\n                  {\n                    \"Ref\": \"AWS::Region\"\n                  },\n                  \"eu-west-1\"\n                ]\n              },\n              {\n                \"Fn::Equals\": [\n                  {\n                    \"Ref\": \"AWS::Region\"\n                  },\n                  \"eu-west-2\"\n                ]\n              },\n              {\n                \"Fn::Equals\": [\n                  {\n                    \"Ref\": \"AWS::Region\"\n                  },\n                  \"eu-west-3\"\n                ]\n              },\n              {\n                \"Fn::Equals\": [\n                  {\n                    \"Ref\": \"AWS::Region\"\n                  },\n                  \"me-south-1\"\n                ]\n              },\n              {\n                \"Fn::Equals\": [\n                  {\n                    \"Ref\": \"AWS::Region\"\n                  },\n                  \"sa-east-1\"\n                ]\n              },\n              {\n                \"Fn::Equals\": [\n                  {\n                    \"Ref\": \"AWS::Region\"\n                  },\n                  \"us-east-1\"\n                ]\n              },\n              {\n                \"Fn::Equals\": [\n                  {\n                    \"Ref\": \"AWS::Region\"\n                  },\n                  \"us-east-2\"\n                ]\n              },\n              {\n                \"Fn::Equals\": [\n                  {\n                    \"Ref\": \"AWS::Region\"\n                  },\n                  \"us-west-1\"\n                ]\n              },\n              {\n                \"Fn::Equals\": [\n                  {\n                    \"Ref\": \"AWS::Region\"\n                  },\n                  \"us-west-2\"\n                ]\n              }\n            ]\n          }\n        ]\n      }\n    },\n    \"Resources\": {\n      \"ImageHandlerFunctionRole\": {\n        \"Type\": \"AWS::IAM::Role\",\n        \"Properties\": {\n          \"AssumeRolePolicyDocument\": {\n            \"Statement\": [\n              {\n                \"Action\": \"sts:AssumeRole\",\n                \"Effect\": \"Allow\",\n                \"Principal\": {\n                  \"Service\": \"lambda.amazonaws.com\"\n                }\n              }\n            ],\n            \"Version\": \"2012-10-17\"\n          },\n          \"Path\": \"/\",\n          \"RoleName\": {\n            \"Fn::Join\": [\n              \"\",\n              [\n                {\n                  \"Ref\": \"AWS::StackName\"\n                },\n                \"ImageHandlerFunctionRole-\",\n                {\n                  \"Ref\": \"AWS::Region\"\n                }\n              ]\n            ]\n          }\n        },\n        \"Metadata\": {\n          \"cfn_nag\": {\n            \"rules_to_suppress\": [\n              {\n                \"id\": \"W28\",\n                \"reason\": \"Resource name validated and found to pose no risk to updates that require replacement of this resource.\"\n              }\n            ]\n          }\n        }\n      },\n      \"ImageHandlerPolicy\": {\n        \"Type\": \"AWS::IAM::Policy\",\n        \"Properties\": {\n          \"PolicyDocument\": {\n            \"Statement\": [\n              {\n                \"Action\": [\n                  \"logs:CreateLogStream\",\n                  \"logs:CreateLogGroup\",\n                  \"logs:PutLogEvents\"\n                ],\n                \"Effect\": \"Allow\",\n                \"Resource\": {\n                  \"Fn::Join\": [\n                    \"\",\n                    [\n                      \"arn:\",\n                      {\n                        \"Ref\": \"AWS::Partition\"\n                      },\n                      \":logs:\",\n                      {\n                        \"Ref\": \"AWS::Region\"\n                      },\n                      \":\",\n                      {\n                        \"Ref\": \"AWS::AccountId\"\n                      },\n                      \":log-group:/aws/lambda/*\"\n                    ]\n                  ]\n                }\n              },\n              {\n                \"Action\": [\n                  \"s3:GetObject\",\n                  \"s3:PutObject\",\n                  \"s3:ListBucket\"\n                ],\n                \"Effect\": \"Allow\",\n                \"Resource\": {\n                  \"Fn::Join\": [\n                    \"\",\n                    [\n                      \"arn:\",\n                      {\n                        \"Ref\": \"AWS::Partition\"\n                      },\n                      \":s3:::*\"\n                    ]\n                  ]\n                }\n              },\n              {\n                \"Action\": [\n                  \"rekognition:DetectFaces\",\n                  \"rekognition:DetectModerationLabels\"\n                ],\n                \"Effect\": \"Allow\",\n                \"Resource\": \"*\"\n              }\n            ],\n            \"Version\": \"2012-10-17\"\n          },\n          \"PolicyName\": {\n            \"Fn::Join\": [\n              \"\",\n              [\n                {\n                  \"Ref\": \"AWS::StackName\"\n                },\n                \"ImageHandlerPolicy\"\n              ]\n            ]\n          },\n          \"Roles\": [\n            {\n              \"Ref\": \"ImageHandlerFunctionRole\"\n            }\n          ]\n        },\n        \"Metadata\": {\n          \"cfn_nag\": {\n            \"rules_to_suppress\": [\n              {\n                \"id\": \"W12\",\n                \"reason\": \"rekognition:DetectFaces requires '*' resources.\"\n              }\n            ]\n          }\n        }\n      },\n      \"ImageHandlerFunction\": {\n        \"Type\": \"AWS::Lambda::Function\",\n        \"Properties\": {\n          \"Code\": {\n            \"S3Bucket\": {\n              \"Fn::Join\": [\n                \"\",\n                [\n                  \"solutions-\",\n                  {\n                    \"Ref\": \"AWS::Region\"\n                  }\n                ]\n              ]\n            },\n            \"S3Key\": \"serverless-image-handler/v5.2.0/image-handler.zip\"\n          },\n          \"Handler\": \"index.handler\",\n          \"Role\": {\n            \"Fn::GetAtt\": [\n              \"ImageHandlerFunctionRole\",\n              \"Arn\"\n            ]\n          },\n          \"Runtime\": \"nodejs12.x\",\n          \"Description\": \"Serverless Image Handler - Function for performing image edits and manipulations.\",\n          \"Environment\": {\n            \"Variables\": {\n              \"AUTO_WEBP\": {\n                \"Ref\": \"AutoWebP\"\n              },\n              \"CORS_ENABLED\": {\n                \"Ref\": \"CorsEnabled\"\n              },\n              \"CORS_ORIGIN\": {\n                \"Ref\": \"CorsOrigin\"\n              },\n              \"SOURCE_BUCKETS\": {\n                \"Ref\": \"SourceBuckets\"\n              },\n              \"REWRITE_MATCH_PATTERN\": \"\",\n              \"REWRITE_SUBSTITUTION\": \"\",\n              \"ENABLE_SIGNATURE\": {\n                \"Ref\": \"EnableSignature\"\n              },\n              \"SECRETS_MANAGER\": {\n                \"Ref\": \"SecretsManagerSecret\"\n              },\n              \"SECRET_KEY\": {\n                \"Ref\": \"SecretsManagerKey\"\n              },\n              \"ENABLE_DEFAULT_FALLBACK_IMAGE\": {\n                \"Ref\": \"EnableDefaultFallbackImage\"\n              },\n              \"DEFAULT_FALLBACK_IMAGE_BUCKET\": {\n                \"Ref\": \"FallbackImageS3Bucket\"\n              },\n              \"DEFAULT_FALLBACK_IMAGE_KEY\": {\n                \"Ref\": \"FallbackImageS3Key\"\n              }\n            }\n          },\n          \"MemorySize\": 1024,\n          \"Timeout\": 30\n        },\n        \"DependsOn\": [\n          \"ImageHandlerFunctionRole\"\n        ],\n        \"Metadata\": {\n          \"cfn_nag\": {\n            \"rules_to_suppress\": [\n              {\n                \"id\": \"W58\",\n                \"reason\": \"False alarm: The Lambda function does have the permission to write CloudWatch Logs.\"\n              }\n            ]\n          }\n        }\n      },\n      \"ImageHandlerPermission\": {\n        \"Type\": \"AWS::Lambda::Permission\",\n        \"Properties\": {\n          \"Action\": \"lambda:InvokeFunction\",\n          \"FunctionName\": {\n            \"Fn::GetAtt\": [\n              \"ImageHandlerFunction\",\n              \"Arn\"\n            ]\n          },\n          \"Principal\": \"apigateway.amazonaws.com\",\n          \"SourceArn\": {\n            \"Fn::Join\": [\n              \"\",\n              [\n                \"arn:\",\n                {\n                  \"Ref\": \"AWS::Partition\"\n                },\n                \":execute-api:\",\n                {\n                  \"Ref\": \"AWS::Region\"\n                },\n                \":\",\n                {\n                  \"Ref\": \"AWS::AccountId\"\n                },\n                \":\",\n                {\n                  \"Ref\": \"ImageHandlerApi\"\n                },\n                \"/*/*/*\"\n              ]\n            ]\n          }\n        }\n      },\n      \"ImageHandlerLogGroup\": {\n        \"Type\": \"AWS::Logs::LogGroup\",\n        \"Properties\": {\n          \"LogGroupName\": {\n            \"Fn::Join\": [\n              \"\",\n              [\n                \"/aws/lambda/\",\n                {\n                  \"Ref\": \"ImageHandlerFunction\"\n                }\n              ]\n            ]\n          },\n          \"RetentionInDays\": {\n            \"Ref\": \"LogRetentionPeriod\"\n          }\n        },\n        \"UpdateReplacePolicy\": \"Retain\",\n        \"DeletionPolicy\": \"Retain\",\n        \"Metadata\": {\n          \"cfn_nag\": {\n            \"rules_to_suppress\": [\n              {\n                \"id\": \"W84\",\n                \"reason\": \"Used to store store function info\"\n              }\n            ]\n          }\n        }\n      },\n      \"ApiLogs\": {\n        \"Type\": \"AWS::Logs::LogGroup\",\n        \"UpdateReplacePolicy\": \"Retain\",\n        \"DeletionPolicy\": \"Retain\",\n        \"Metadata\": {\n          \"cfn_nag\": {\n            \"rules_to_suppress\": [\n              {\n                \"id\": \"W84\",\n                \"reason\": \"Used to store store api log info, not using kms\"\n              },\n              {\n                \"id\": \"W86\",\n                \"reason\": \"Log retention specified in CloudFromation parameters.\"\n              }\n            ]\n          }\n        }\n      },\n      \"ImageHandlerApi\": {\n        \"Type\": \"AWS::ApiGateway::RestApi\",\n        \"Properties\": {\n          \"Body\": {\n            \"swagger\": \"2.0\",\n            \"info\": {\n              \"title\": \"ServerlessImageHandler\"\n            },\n            \"basePath\": \"/image\",\n            \"schemes\": [\n              \"https\"\n            ],\n            \"paths\": {\n              \"/{proxy+}\": {\n                \"x-amazon-apigateway-any-method\": {\n                  \"produces\": [\n                    \"application/json\"\n                  ],\n                  \"parameters\": [\n                    {\n                      \"name\": \"proxy\",\n                      \"in\": \"path\",\n                      \"required\": true,\n                      \"type\": \"string\"\n                    },\n                    {\n                      \"name\": \"signature\",\n                      \"in\": \"query\",\n                      \"description\": \"Signature of the image\",\n                      \"required\": false,\n                      \"type\": \"string\"\n                    }\n                  ],\n                  \"responses\": {},\n                  \"x-amazon-apigateway-integration\": {\n                    \"responses\": {\n                      \"default\": {\n                        \"statusCode\": \"200\"\n                      }\n                    },\n                    \"uri\": {\n                      \"Fn::Join\": [\n                        \"\",\n                        [\n                          \"arn:aws:apigateway:\",\n                          {\n                            \"Ref\": \"AWS::Region\"\n                          },\n                          \":\",\n                          \"lambda:path/2015-03-31/functions/\",\n                          {\n                            \"Fn::GetAtt\": [\n                              \"ImageHandlerFunction\",\n                              \"Arn\"\n                            ]\n                          },\n                          \"/invocations\"\n                        ]\n                      ]\n                    },\n                    \"passthroughBehavior\": \"when_no_match\",\n                    \"httpMethod\": \"POST\",\n                    \"cacheNamespace\": \"xh7gp9\",\n                    \"cacheKeyParameters\": [\n                      \"method.request.path.proxy\"\n                    ],\n                    \"contentHandling\": \"CONVERT_TO_TEXT\",\n                    \"type\": \"aws_proxy\"\n                  }\n                }\n              }\n            },\n            \"x-amazon-apigateway-binary-media-types\": [\n              \"*/*\"\n            ]\n          },\n          \"EndpointConfiguration\": {\n            \"Types\": [\n              \"REGIONAL\"\n            ]\n          },\n          \"Name\": \"ServerlessImageHandler\"\n        }\n      },\n      \"ApiLoggingRole\": {\n        \"Type\": \"AWS::IAM::Role\",\n        \"Properties\": {\n          \"AssumeRolePolicyDocument\": {\n            \"Statement\": [\n              {\n                \"Action\": \"sts:AssumeRole\",\n                \"Effect\": \"Allow\",\n                \"Principal\": {\n                  \"Service\": \"apigateway.amazonaws.com\"\n                }\n              }\n            ],\n            \"Version\": \"2012-10-17\"\n          },\n          \"Policies\": [\n            {\n              \"PolicyDocument\": {\n                \"Statement\": [\n                  {\n                    \"Action\": [\n                      \"logs:CreateLogGroup\",\n                      \"logs:CreateLogStream\",\n                      \"logs:DescribeLogGroups\",\n                      \"logs:DescribeLogStreams\",\n                      \"logs:PutLogEvents\",\n                      \"logs:GetLogEvents\",\n                      \"logs:FilterLogEvents\"\n                    ],\n                    \"Effect\": \"Allow\",\n                    \"Resource\": {\n                      \"Fn::Join\": [\n                        \"\",\n                        [\n                          \"arn:\",\n                          {\n                            \"Ref\": \"AWS::Partition\"\n                          },\n                          \":logs:\",\n                          {\n                            \"Ref\": \"AWS::Region\"\n                          },\n                          \":\",\n                          {\n                            \"Ref\": \"AWS::AccountId\"\n                          },\n                          \":*\"\n                        ]\n                      ]\n                    }\n                  }\n                ],\n                \"Version\": \"2012-10-17\"\n              },\n              \"PolicyName\": \"LambdaRestApiCloudWatchRolePolicy\"\n            }\n          ]\n        }\n      },\n      \"ApiAccountConfig\": {\n        \"Type\": \"AWS::ApiGateway::Account\",\n        \"Properties\": {\n          \"CloudWatchRoleArn\": {\n            \"Fn::GetAtt\": [\n              \"ApiLoggingRole\",\n              \"Arn\"\n            ]\n          }\n        },\n        \"DependsOn\": [\n          \"ImageHandlerApi\"\n        ]\n      },\n      \"Logs\": {\n        \"Type\": \"AWS::S3::Bucket\",\n        \"Properties\": {\n          \"AccessControl\": \"LogDeliveryWrite\",\n          \"BucketEncryption\": {\n            \"ServerSideEncryptionConfiguration\": [\n              {\n                \"ServerSideEncryptionByDefault\": {\n                  \"SSEAlgorithm\": \"AES256\"\n                }\n              }\n            ]\n          },\n          \"PublicAccessBlockConfiguration\": {\n            \"BlockPublicAcls\": true,\n            \"BlockPublicPolicy\": true,\n            \"IgnorePublicAcls\": true,\n            \"RestrictPublicBuckets\": true\n          }\n        },\n        \"UpdateReplacePolicy\": \"Retain\",\n        \"DeletionPolicy\": \"Retain\",\n        \"Metadata\": {\n          \"cfn_nag\": {\n            \"rules_to_suppress\": [\n              {\n                \"id\": \"W35\",\n                \"reason\": \"Used to store access logs for other buckets\"\n              }\n            ]\n          }\n        },\n        \"Condition\": \"IsNotOptInRegion\"\n      },\n      \"LogsBucketPolicy\": {\n        \"Type\": \"AWS::S3::BucketPolicy\",\n        \"Properties\": {\n          \"Bucket\": {\n            \"Ref\": \"Logs\"\n          },\n          \"PolicyDocument\": {\n            \"Statement\": [\n              {\n                \"Action\": \"*\",\n                \"Condition\": {\n                  \"Bool\": {\n                    \"aws:SecureTransport\": \"false\"\n                  }\n                },\n                \"Effect\": \"Deny\",\n                \"Principal\": \"*\",\n                \"Resource\": {\n                  \"Fn::Join\": [\n                    \"\",\n                    [\n                      {\n                        \"Fn::GetAtt\": [\n                          \"Logs\",\n                          \"Arn\"\n                        ]\n                      },\n                      \"/*\"\n                    ]\n                  ]\n                },\n                \"Sid\": \"HttpsOnly\"\n              }\n            ],\n            \"Version\": \"2012-10-17\"\n          }\n        },\n        \"Condition\": \"IsNotOptInRegion\"\n      },\n      \"ImageHandlerDistribution\": {\n        \"Type\": \"AWS::CloudFront::Distribution\",\n        \"Properties\": {\n          \"DistributionConfig\": {\n            \"Comment\": \"Image handler distribution\",\n            \"CustomErrorResponses\": [\n              {\n                \"ErrorCachingMinTTL\": 10,\n                \"ErrorCode\": 500\n              },\n              {\n                \"ErrorCachingMinTTL\": 10,\n                \"ErrorCode\": 501\n              },\n              {\n                \"ErrorCachingMinTTL\": 10,\n                \"ErrorCode\": 502\n              },\n              {\n                \"ErrorCachingMinTTL\": 10,\n                \"ErrorCode\": 503\n              },\n              {\n                \"ErrorCachingMinTTL\": 10,\n                \"ErrorCode\": 504\n              }\n            ],\n            \"DefaultCacheBehavior\": {\n              \"AllowedMethods\": [\n                \"GET\",\n                \"HEAD\"\n              ],\n              \"CachePolicyId\": {\n                \"Ref\": \"ImageHandlerCachePolicy\"\n              },\n              \"OriginRequestPolicyId\": {\n                \"Ref\": \"ImageHandlerOriginRequestPolicy\"\n              },\n              \"TargetOriginId\": {\n                \"Ref\": \"ImageHandlerApi\"\n              },\n              \"ViewerProtocolPolicy\": \"https-only\"\n            },\n            \"Enabled\": true,\n            \"HttpVersion\": \"http2\",\n            \"Logging\": {\n              \"Bucket\": {\n                \"Fn::If\": [\n                  \"IsOptInRegion\",\n                  {\n                    \"Fn::Join\": [\n                      \"\",\n                      [\n                        {\n                          \"Fn::GetAtt\": [\n                            \"CustomCFLoggingBucket\",\n                            \"bucketName\"\n                          ]\n                        },\n                        \".s3.us-east-1.\",\n                        {\n                          \"Ref\": \"AWS::URLSuffix\"\n                        }\n                      ]\n                    ]\n                  },\n                  {\n                    \"Fn::GetAtt\": [\n                      \"Logs\",\n                      \"RegionalDomainName\"\n                    ]\n                  }\n                ]\n              },\n              \"IncludeCookies\": false,\n              \"Prefix\": \"image-handler-cf-logs/\"\n            },\n            \"Origins\": [\n              {\n                \"CustomOriginConfig\": {\n                  \"HTTPSPort\": 443,\n                  \"OriginProtocolPolicy\": \"https-only\",\n                  \"OriginSSLProtocols\": [\n                    \"TLSv1.1\",\n                    \"TLSv1.2\"\n                  ]\n                },\n                \"DomainName\": {\n                  \"Fn::Join\": [\n                    \"\",\n                    [\n                      {\n                        \"Ref\": \"ImageHandlerApi\"\n                      },\n                      \".execute-api.\",\n                      {\n                        \"Ref\": \"AWS::Region\"\n                      },\n                      \".amazonaws.com\"\n                    ]\n                  ]\n                },\n                \"Id\": {\n                  \"Ref\": \"ImageHandlerApi\"\n                },\n                \"OriginPath\": \"/image\"\n              }\n            ],\n            \"PriceClass\": \"PriceClass_All\"\n          }\n        },\n        \"Metadata\": {\n          \"cfn_nag\": {\n            \"rules_to_suppress\": [\n              {\n                \"id\": \"W70\",\n                \"reason\": \"Since the distribution uses the CloudFront domain name, CloudFront automatically sets the security policy to TLSv1 regardless of the value of MinimumProtocolVersion\"\n              }\n            ]\n          }\n        }\n      },\n      \"ImageHandlerApiDeployment\": {\n        \"Type\": \"AWS::ApiGateway::Deployment\",\n        \"Properties\": {\n          \"RestApiId\": {\n            \"Ref\": \"ImageHandlerApi\"\n          },\n          \"StageDescription\": {\n            \"AccessLogSetting\": {\n              \"DestinationArn\": {\n                \"Fn::GetAtt\": [\n                  \"ApiLogs\",\n                  \"Arn\"\n                ]\n              },\n              \"Format\": \"$context.identity.sourceIp $context.identity.caller $context.identity.user [$context.requestTime] \\\"$context.httpMethod $context.resourcePath $context.protocol\\\" $context.status $context.responseLength $context.requestId\"\n            }\n          },\n          \"StageName\": \"image\"\n        },\n        \"DependsOn\": [\n          \"ApiAccountConfig\"\n        ],\n        \"Metadata\": {\n          \"cfn_nag\": {\n            \"rules_to_suppress\": [\n              {\n                \"id\": \"W68\",\n                \"reason\": \"The solution does not require the usage plan.\"\n              }\n            ]\n          }\n        }\n      },\n      \"ImageHandlerCachePolicy\": {\n        \"Type\": \"AWS::CloudFront::CachePolicy\",\n        \"Properties\": {\n          \"CachePolicyConfig\": {\n            \"DefaultTTL\": 86400,\n            \"MaxTTL\": 31536000,\n            \"MinTTL\": 1,\n            \"Name\": {\n              \"Fn::Join\": [\n                \"\",\n                [\n                  {\n                    \"Ref\": \"AWS::StackName\"\n                  },\n                  \"-\",\n                  {\n                    \"Ref\": \"AWS::Region\"\n                  },\n                  \"-ImageHandlerCachePolicy\"\n                ]\n              ]\n            },\n            \"ParametersInCacheKeyAndForwardedToOrigin\": {\n              \"CookiesConfig\": {\n                \"CookieBehavior\": \"none\"\n              },\n              \"EnableAcceptEncodingGzip\": true,\n              \"HeadersConfig\": {\n                \"HeaderBehavior\": \"whitelist\",\n                \"Headers\": [\n                  \"origin\",\n                  \"accept\"\n                ]\n              },\n              \"QueryStringsConfig\": {\n                \"QueryStringBehavior\": \"whitelist\",\n                \"QueryStrings\": [\n                  \"signature\"\n                ]\n              }\n            }\n          }\n        }\n      },\n      \"ImageHandlerOriginRequestPolicy\": {\n        \"Type\": \"AWS::CloudFront::OriginRequestPolicy\",\n        \"Properties\": {\n          \"OriginRequestPolicyConfig\": {\n            \"CookiesConfig\": {\n              \"CookieBehavior\": \"none\"\n            },\n            \"HeadersConfig\": {\n              \"HeaderBehavior\": \"whitelist\",\n              \"Headers\": [\n                \"origin\",\n                \"accept\"\n              ]\n            },\n            \"Name\": {\n              \"Fn::Join\": [\n                \"\",\n                [\n                  {\n                    \"Ref\": \"AWS::StackName\"\n                  },\n                  \"-\",\n                  {\n                    \"Ref\": \"AWS::Region\"\n                  },\n                  \"-ImageHandlerOriginRequestPolicy\"\n                ]\n              ]\n            },\n            \"QueryStringsConfig\": {\n              \"QueryStringBehavior\": \"whitelist\",\n              \"QueryStrings\": [\n                \"signature\"\n              ]\n            }\n          }\n        }\n      },\n      \"DemoBucket\": {\n        \"Type\": \"AWS::S3::Bucket\",\n        \"Properties\": {\n          \"AccessControl\": \"Private\",\n          \"BucketEncryption\": {\n            \"ServerSideEncryptionConfiguration\": [\n              {\n                \"ServerSideEncryptionByDefault\": {\n                  \"SSEAlgorithm\": \"AES256\"\n                }\n              }\n            ]\n          },\n          \"PublicAccessBlockConfiguration\": {\n            \"BlockPublicAcls\": true,\n            \"BlockPublicPolicy\": true,\n            \"IgnorePublicAcls\": true,\n            \"RestrictPublicBuckets\": true\n          },\n          \"WebsiteConfiguration\": {\n            \"ErrorDocument\": \"index.html\",\n            \"IndexDocument\": \"index.html\"\n          }\n        },\n        \"UpdateReplacePolicy\": \"Retain\",\n        \"DeletionPolicy\": \"Retain\",\n        \"Metadata\": {\n          \"cfn_nag\": {\n            \"rules_to_suppress\": [\n              {\n                \"id\": \"W35\",\n                \"reason\": \"This S3 bucket does not require access logging. API calls and image operations are logged to CloudWatch with custom reporting.\"\n              }\n            ]\n          }\n        },\n        \"Condition\": \"DeployDemoUICondition\"\n      },\n      \"DemoBucketPolicy\": {\n        \"Type\": \"AWS::S3::BucketPolicy\",\n        \"Properties\": {\n          \"Bucket\": {\n            \"Ref\": \"DemoBucket\"\n          },\n          \"PolicyDocument\": {\n            \"Statement\": [\n              {\n                \"Action\": [\n                  \"s3:GetObject\"\n                ],\n                \"Effect\": \"Allow\",\n                \"Resource\": {\n                  \"Fn::Join\": [\n                    \"\",\n                    [\n                      {\n                        \"Fn::GetAtt\": [\n                          \"DemoBucket\",\n                          \"Arn\"\n                        ]\n                      },\n                      \"/*\"\n                    ]\n                  ]\n                },\n                \"Principal\": {\n                  \"CanonicalUser\": {\n                    \"Fn::GetAtt\": [\n                      \"DemoOriginAccessIdentity\",\n                      \"S3CanonicalUserId\"\n                    ]\n                  }\n                }\n              }\n            ]\n          }\n        },\n        \"Condition\": \"DeployDemoUICondition\"\n      },\n      \"DemoOriginAccessIdentity\": {\n        \"Type\": \"AWS::CloudFront::CloudFrontOriginAccessIdentity\",\n        \"Properties\": {\n          \"CloudFrontOriginAccessIdentityConfig\": {\n            \"Comment\": {\n              \"Fn::Join\": [\n                \"\",\n                [\n                  \"access-identity-\",\n                  {\n                    \"Ref\": \"DemoBucket\"\n                  }\n                ]\n              ]\n            }\n          }\n        },\n        \"Condition\": \"DeployDemoUICondition\"\n      },\n      \"DemoDistribution\": {\n        \"Type\": \"AWS::CloudFront::Distribution\",\n        \"Properties\": {\n          \"DistributionConfig\": {\n            \"Comment\": \"Website distribution for solution\",\n            \"DefaultCacheBehavior\": {\n              \"AllowedMethods\": [\n                \"GET\",\n                \"HEAD\"\n              ],\n              \"CachedMethods\": [\n                \"GET\",\n                \"HEAD\"\n              ],\n              \"ForwardedValues\": {\n                \"QueryString\": false\n              },\n              \"TargetOriginId\": \"S3-solution-website\",\n              \"ViewerProtocolPolicy\": \"redirect-to-https\"\n            },\n            \"Enabled\": true,\n            \"HttpVersion\": \"http2\",\n            \"IPV6Enabled\": true,\n            \"Logging\": {\n              \"Bucket\": {\n                \"Fn::If\": [\n                  \"IsOptInRegion\",\n                  {\n                    \"Fn::Join\": [\n                      \"\",\n                      [\n                        {\n                          \"Fn::GetAtt\": [\n                            \"CustomCFLoggingBucket\",\n                            \"bucketName\"\n                          ]\n                        },\n                        \".s3.us-east-1.\",\n                        {\n                          \"Ref\": \"AWS::URLSuffix\"\n                        }\n                      ]\n                    ]\n                  },\n                  {\n                    \"Fn::GetAtt\": [\n                      \"Logs\",\n                      \"RegionalDomainName\"\n                    ]\n                  }\n                ]\n              },\n              \"IncludeCookies\": false,\n              \"Prefix\": \"demo-cf-logs/\"\n            },\n            \"Origins\": [\n              {\n                \"DomainName\": {\n                  \"Fn::GetAtt\": [\n                    \"DemoBucket\",\n                    \"RegionalDomainName\"\n                  ]\n                },\n                \"Id\": \"S3-solution-website\",\n                \"S3OriginConfig\": {\n                  \"OriginAccessIdentity\": {\n                    \"Fn::Join\": [\n                      \"\",\n                      [\n                        \"origin-access-identity/cloudfront/\",\n                        {\n                          \"Ref\": \"DemoOriginAccessIdentity\"\n                        }\n                      ]\n                    ]\n                  }\n                }\n              }\n            ],\n            \"ViewerCertificate\": {\n              \"CloudFrontDefaultCertificate\": true\n            }\n          }\n        },\n        \"Metadata\": {\n          \"cfn_nag\": {\n            \"rules_to_suppress\": [\n              {\n                \"id\": \"W70\",\n                \"reason\": \"Since the distribution uses the CloudFront domain name, CloudFront automatically sets the security policy to TLSv1 regardless of the value of MinimumProtocolVersion\"\n              }\n            ]\n          }\n        },\n        \"Condition\": \"DeployDemoUICondition\"\n      },\n      \"CustomResourceRole\": {\n        \"Type\": \"AWS::IAM::Role\",\n        \"Properties\": {\n          \"AssumeRolePolicyDocument\": {\n            \"Statement\": [\n              {\n                \"Action\": \"sts:AssumeRole\",\n                \"Effect\": \"Allow\",\n                \"Principal\": {\n                  \"Service\": \"lambda.amazonaws.com\"\n                }\n              }\n            ],\n            \"Version\": \"2012-10-17\"\n          },\n          \"Path\": \"/\",\n          \"RoleName\": {\n            \"Fn::Join\": [\n              \"\",\n              [\n                {\n                  \"Ref\": \"AWS::StackName\"\n                },\n                \"CustomResourceRole-\",\n                {\n                  \"Ref\": \"AWS::Region\"\n                }\n              ]\n            ]\n          }\n        },\n        \"Metadata\": {\n          \"cfn_nag\": {\n            \"rules_to_suppress\": [\n              {\n                \"id\": \"W28\",\n                \"reason\": \"Resource name validated and found to pose no risk to updates that require replacement of this resource.\"\n              }\n            ]\n          }\n        }\n      },\n      \"CustomResourcePolicy\": {\n        \"Type\": \"AWS::IAM::Policy\",\n        \"Properties\": {\n          \"PolicyDocument\": {\n            \"Statement\": [\n              {\n                \"Action\": [\n                  \"logs:CreateLogStream\",\n                  \"logs:CreateLogGroup\",\n                  \"logs:PutLogEvents\"\n                ],\n                \"Effect\": \"Allow\",\n                \"Resource\": {\n                  \"Fn::Join\": [\n                    \"\",\n                    [\n                      \"arn:\",\n                      {\n                        \"Ref\": \"AWS::Partition\"\n                      },\n                      \":logs:\",\n                      {\n                        \"Ref\": \"AWS::Region\"\n                      },\n                      \":\",\n                      {\n                        \"Ref\": \"AWS::AccountId\"\n                      },\n                      \":log-group:/aws/lambda/*\"\n                    ]\n                  ]\n                }\n              },\n              {\n                \"Action\": [\n                  \"s3:putBucketAcl\",\n                  \"s3:putEncryptionConfiguration\",\n                  \"s3:putBucketPolicy\",\n                  \"s3:CreateBucket\",\n                  \"s3:GetObject\",\n                  \"s3:PutObject\",\n                  \"s3:ListBucket\"\n                ],\n                \"Effect\": \"Allow\",\n                \"Resource\": {\n                  \"Fn::Join\": [\n                    \"\",\n                    [\n                      \"arn:\",\n                      {\n                        \"Ref\": \"AWS::Partition\"\n                      },\n                      \":s3:::*\"\n                    ]\n                  ]\n                }\n              }\n            ],\n            \"Version\": \"2012-10-17\"\n          },\n          \"PolicyName\": {\n            \"Fn::Join\": [\n              \"\",\n              [\n                {\n                  \"Ref\": \"AWS::StackName\"\n                },\n                \"CustomResourcePolicy\"\n              ]\n            ]\n          },\n          \"Roles\": [\n            {\n              \"Ref\": \"CustomResourceRole\"\n            }\n          ]\n        }\n      },\n      \"CustomResourceFunction\": {\n        \"Type\": \"AWS::Lambda::Function\",\n        \"Properties\": {\n          \"Code\": {\n            \"S3Bucket\": {\n              \"Fn::Join\": [\n                \"\",\n                [\n                  \"solutions-\",\n                  {\n                    \"Ref\": \"AWS::Region\"\n                  }\n                ]\n              ]\n            },\n            \"S3Key\": \"serverless-image-handler/v5.2.0/custom-resource.zip\"\n          },\n          \"Handler\": \"index.handler\",\n          \"Role\": {\n            \"Fn::GetAtt\": [\n              \"CustomResourceRole\",\n              \"Arn\"\n            ]\n          },\n          \"Runtime\": \"nodejs12.x\",\n          \"Description\": \"Serverless Image Handler - Custom resource\",\n          \"Environment\": {\n            \"Variables\": {\n              \"RETRY_SECONDS\": \"5\"\n            }\n          },\n          \"MemorySize\": 128,\n          \"Timeout\": 60\n        },\n        \"DependsOn\": [\n          \"CustomResourceRole\"\n        ],\n        \"Metadata\": {\n          \"cfn_nag\": {\n            \"rules_to_suppress\": [\n              {\n                \"id\": \"W58\",\n                \"reason\": \"False alarm: The Lambda function does have the permission to write CloudWatch Logs.\"\n              }\n            ]\n          }\n        }\n      },\n      \"CustomResourceLogGroup\": {\n        \"Type\": \"AWS::Logs::LogGroup\",\n        \"Properties\": {\n          \"LogGroupName\": {\n            \"Fn::Join\": [\n              \"\",\n              [\n                \"/aws/lambda/\",\n                {\n                  \"Ref\": \"CustomResourceFunction\"\n                }\n              ]\n            ]\n          },\n          \"RetentionInDays\": {\n            \"Ref\": \"LogRetentionPeriod\"\n          }\n        },\n        \"UpdateReplacePolicy\": \"Retain\",\n        \"DeletionPolicy\": \"Retain\",\n        \"Metadata\": {\n          \"cfn_nag\": {\n            \"rules_to_suppress\": [\n              {\n                \"id\": \"W84\",\n                \"reason\": \"Used to store store function info, no kms used\"\n              }\n            ]\n          }\n        }\n      },\n      \"CustomResourceCopyS3\": {\n        \"Type\": \"Custom::CustomResource\",\n        \"Properties\": {\n          \"ServiceToken\": {\n            \"Fn::GetAtt\": [\n              \"CustomResourceFunction\",\n              \"Arn\"\n            ]\n          },\n          \"Region\": {\n            \"Ref\": \"AWS::Region\"\n          },\n          \"manifestKey\": \"serverless-image-handler/v5.2.0/demo-ui-manifest.json\",\n          \"sourceS3Bucket\": {\n            \"Fn::Join\": [\n              \"\",\n              [\n                \"solutions-\",\n                {\n                  \"Ref\": \"AWS::Region\"\n                }\n              ]\n            ]\n          },\n          \"sourceS3key\": \"serverless-image-handler/v5.2.0/demo-ui\",\n          \"destS3Bucket\": {\n            \"Ref\": \"DemoBucket\"\n          },\n          \"version\": \"v5.2.0\",\n          \"customAction\": \"copyS3assets\"\n        },\n        \"DependsOn\": [\n          \"CustomResourcePolicy\",\n          \"CustomResourceRole\"\n        ],\n        \"Condition\": \"DeployDemoUICondition\"\n      },\n      \"CustomResourceConfig\": {\n        \"Type\": \"Custom::CustomResource\",\n        \"Properties\": {\n          \"ServiceToken\": {\n            \"Fn::GetAtt\": [\n              \"CustomResourceFunction\",\n              \"Arn\"\n            ]\n          },\n          \"Region\": {\n            \"Ref\": \"AWS::Region\"\n          },\n          \"configItem\": {\n            \"apiEndpoint\": {\n              \"Fn::Join\": [\n                \"\",\n                [\n                  \"https://\",\n                  {\n                    \"Fn::GetAtt\": [\n                      \"ImageHandlerDistribution\",\n                      \"DomainName\"\n                    ]\n                  }\n                ]\n              ]\n            }\n          },\n          \"destS3Bucket\": {\n            \"Ref\": \"DemoBucket\"\n          },\n          \"destS3key\": \"demo-ui-config.js\",\n          \"customAction\": \"putConfigFile\"\n        },\n        \"DependsOn\": [\n          \"CustomResourcePolicy\",\n          \"CustomResourceRole\"\n        ],\n        \"Condition\": \"DeployDemoUICondition\"\n      },\n      \"CustomResourceUuid\": {\n        \"Type\": \"Custom::CustomResource\",\n        \"Properties\": {\n          \"ServiceToken\": {\n            \"Fn::GetAtt\": [\n              \"CustomResourceFunction\",\n              \"Arn\"\n            ]\n          },\n          \"Region\": {\n            \"Ref\": \"AWS::Region\"\n          },\n          \"customAction\": \"createUuid\"\n        },\n        \"DependsOn\": [\n          \"CustomResourcePolicy\",\n          \"CustomResourceRole\"\n        ]\n      },\n      \"CustomResourceAnonymousMetric\": {\n        \"Type\": \"Custom::CustomResource\",\n        \"Properties\": {\n          \"ServiceToken\": {\n            \"Fn::GetAtt\": [\n              \"CustomResourceFunction\",\n              \"Arn\"\n            ]\n          },\n          \"Region\": {\n            \"Ref\": \"AWS::Region\"\n          },\n          \"solutionId\": \"SO0023\",\n          \"UUID\": {\n            \"Fn::GetAtt\": [\n              \"CustomResourceUuid\",\n              \"UUID\"\n            ]\n          },\n          \"version\": \"v5.2.0\",\n          \"anonymousData\": {\n            \"Fn::FindInMap\": [\n              \"Send\",\n              \"AnonymousUsage\",\n              \"Data\"\n            ]\n          },\n          \"enableSignature\": {\n            \"Ref\": \"EnableSignature\"\n          },\n          \"enableDefaultFallbackImage\": {\n            \"Ref\": \"EnableDefaultFallbackImage\"\n          },\n          \"customAction\": \"sendMetric\"\n        },\n        \"DependsOn\": [\n          \"CustomResourcePolicy\",\n          \"CustomResourceRole\"\n        ]\n      },\n      \"CustomResourceCheckSourceBuckets\": {\n        \"Type\": \"Custom::CustomResource\",\n        \"Properties\": {\n          \"ServiceToken\": {\n            \"Fn::GetAtt\": [\n              \"CustomResourceFunction\",\n              \"Arn\"\n            ]\n          },\n          \"Region\": {\n            \"Ref\": \"AWS::Region\"\n          },\n          \"sourceBuckets\": {\n            \"Ref\": \"SourceBuckets\"\n          },\n          \"customAction\": \"checkSourceBuckets\"\n        },\n        \"DependsOn\": [\n          \"CustomResourcePolicy\",\n          \"CustomResourceRole\"\n        ]\n      },\n      \"SecretsManagerPolicy\": {\n        \"Type\": \"AWS::IAM::Policy\",\n        \"Properties\": {\n          \"PolicyDocument\": {\n            \"Statement\": [\n              {\n                \"Action\": \"secretsmanager:GetSecretValue\",\n                \"Effect\": \"Allow\",\n                \"Resource\": {\n                  \"Fn::Join\": [\n                    \"\",\n                    [\n                      \"arn:\",\n                      {\n                        \"Ref\": \"AWS::Partition\"\n                      },\n                      \":secretsmanager:\",\n                      {\n                        \"Ref\": \"AWS::Region\"\n                      },\n                      \":\",\n                      {\n                        \"Ref\": \"AWS::AccountId\"\n                      },\n                      \":secret:\",\n                      {\n                        \"Ref\": \"SecretsManagerSecret\"\n                      },\n                      \"*\"\n                    ]\n                  ]\n                }\n              }\n            ],\n            \"Version\": \"2012-10-17\"\n          },\n          \"PolicyName\": \"SecretsManagerPolicy\",\n          \"Roles\": [\n            {\n              \"Ref\": \"CustomResourceRole\"\n            },\n            {\n              \"Ref\": \"ImageHandlerFunctionRole\"\n            }\n          ]\n        },\n        \"Condition\": \"EnableSignatureCondition\"\n      },\n      \"CustomResourceCheckSecretsManager\": {\n        \"Type\": \"Custom::CustomResource\",\n        \"Properties\": {\n          \"ServiceToken\": {\n            \"Fn::GetAtt\": [\n              \"CustomResourceFunction\",\n              \"Arn\"\n            ]\n          },\n          \"customAction\": \"checkSecretsManager\",\n          \"secretsManagerName\": {\n            \"Ref\": \"SecretsManagerSecret\"\n          },\n          \"secretsManagerKey\": {\n            \"Ref\": \"SecretsManagerKey\"\n          }\n        },\n        \"DependsOn\": [\n          \"CustomResourcePolicy\",\n          \"CustomResourceRole\",\n          \"SecretsManagerPolicy\"\n        ],\n        \"Condition\": \"EnableSignatureCondition\"\n      },\n      \"CustomResourceCheckFallbackImage\": {\n        \"Type\": \"Custom::CustomResource\",\n        \"Properties\": {\n          \"ServiceToken\": {\n            \"Fn::GetAtt\": [\n              \"CustomResourceFunction\",\n              \"Arn\"\n            ]\n          },\n          \"customAction\": \"checkFallbackImage\",\n          \"fallbackImageS3Bucket\": {\n            \"Ref\": \"FallbackImageS3Bucket\"\n          },\n          \"fallbackImageS3Key\": {\n            \"Ref\": \"FallbackImageS3Key\"\n          }\n        },\n        \"DependsOn\": [\n          \"CustomResourcePolicy\",\n          \"CustomResourceRole\"\n        ],\n        \"Condition\": \"EnableDefaultFallbackImageCondition\"\n      },\n      \"CustomCFLoggingBucket\": {\n        \"Type\": \"Custom::CustomResource\",\n        \"Properties\": {\n          \"ServiceToken\": {\n            \"Fn::GetAtt\": [\n              \"CustomResourceFunction\",\n              \"Arn\"\n            ]\n          },\n          \"customAction\": \"createCFLoggingBucket\",\n          \"stackName\": {\n            \"Ref\": \"AWS::StackName\"\n          },\n          \"bucketSuffix\": {\n            \"Fn::Join\": [\n              \"\",\n              [\n                {\n                  \"Ref\": \"AWS::StackName\"\n                },\n                {\n                  \"Ref\": \"AWS::Region\"\n                },\n                {\n                  \"Ref\": \"AWS::AccountId\"\n                }\n              ]\n            ]\n          },\n          \"policy\": {\n            \"Action\": \"*\",\n            \"Condition\": {\n              \"Bool\": {\n                \"aws:SecureTransport\": \"false\"\n              }\n            },\n            \"Effect\": \"Deny\",\n            \"Principal\": \"*\",\n            \"Resource\": \"\",\n            \"Sid\": \"HttpsOnly\"\n          }\n        },\n        \"DependsOn\": [\n          \"CustomResourcePolicy\",\n          \"CustomResourceRole\"\n        ],\n        \"Condition\": \"IsOptInRegion\"\n      },\n      \"CDKMetadata\": {\n        \"Type\": \"AWS::CDK::Metadata\",\n        \"Properties\": {\n          \"Modules\": \"aws-cdk=1.64.1,@aws-cdk/assets=1.64.1,@aws-cdk/aws-apigateway=1.64.1,@aws-cdk/aws-applicationautoscaling=1.64.1,@aws-cdk/aws-autoscaling-common=1.64.1,@aws-cdk/aws-certificatemanager=1.64.1,@aws-cdk/aws-cloudfront=1.64.1,@aws-cdk/aws-cloudwatch=1.64.1,@aws-cdk/aws-codeguruprofiler=1.64.1,@aws-cdk/aws-cognito=1.64.1,@aws-cdk/aws-dynamodb=1.64.1,@aws-cdk/aws-ec2=1.64.1,@aws-cdk/aws-elasticsearch=1.64.1,@aws-cdk/aws-events=1.64.1,@aws-cdk/aws-iam=1.64.1,@aws-cdk/aws-kinesis=1.64.1,@aws-cdk/aws-kinesisanalytics=1.64.1,@aws-cdk/aws-kms=1.64.1,@aws-cdk/aws-lambda=1.64.1,@aws-cdk/aws-logs=1.64.1,@aws-cdk/aws-s3=1.64.1,@aws-cdk/aws-s3-assets=1.64.1,@aws-cdk/aws-sns=1.64.1,@aws-cdk/aws-sqs=1.64.1,@aws-cdk/aws-ssm=1.64.1,@aws-cdk/aws-stepfunctions=1.64.1,@aws-cdk/cloud-assembly-schema=1.64.1,@aws-cdk/core=1.64.1,@aws-cdk/custom-resources=1.64.1,@aws-cdk/cx-api=1.64.1,@aws-cdk/region-info=1.64.1,@aws-solutions-constructs/aws-cloudfront-apigateway=1.64.1,@aws-solutions-constructs/aws-cloudfront-apigateway-lambda=1.64.1,@aws-solutions-constructs/aws-cloudfront-s3=1.64.1,@aws-solutions-constructs/core=1.64.1,jsii-runtime=node.js/v12.16.1\"\n        },\n        \"Condition\": \"CDKMetadataAvailable\"\n      }\n    },\n    \"Outputs\": {\n      \"ApiEndpoint\": {\n        \"Description\": \"Link to API endpoint for sending image requests to.\",\n        \"Value\": {\n          \"Fn::Sub\": \"https://${ImageHandlerDistribution.DomainName}\"\n        }\n      },\n      \"DemoUrl\": {\n        \"Description\": \"Link to the demo user interface for the solution.\",\n        \"Value\": {\n          \"Fn::Sub\": \"https://${DemoDistribution.DomainName}/index.html\"\n        },\n        \"Condition\": \"DeployDemoUICondition\"\n      },\n      \"SourceBuckets\": {\n        \"Description\": \"Amazon S3 bucket location containing original image files.\",\n        \"Value\": {\n          \"Ref\": \"SourceBuckets\"\n        }\n      },\n      \"CorsEnabled\": {\n        \"Description\": \"Indicates whether Cross-Origin Resource Sharing (CORS) has been enabled for the image handler API.\",\n        \"Value\": {\n          \"Ref\": \"CorsEnabled\"\n        }\n      },\n      \"CorsOrigin\": {\n        \"Description\": \"Origin value returned in the Access-Control-Allow-Origin header of image handler API responses.\",\n        \"Value\": {\n          \"Ref\": \"CorsOrigin\"\n        },\n        \"Condition\": \"EnableCorsCondition\"\n      },\n      \"LogRetentionPeriod\": {\n        \"Description\": \"Number of days for event logs from Lambda to be retained in CloudWatch.\",\n        \"Value\": {\n          \"Ref\": \"LogRetentionPeriod\"\n        }\n      }\n    }\n  }\n}",
  "CreatedDate": "2021-06-30T23:09:27.672Z",
  "DisplayName": null,
  "DocumentFormat": {
    "Value": "JSON"
  },
  "DocumentType": {
    "Value": "CloudFormation"
  },
  "DocumentVersion": "1",
  "Name": "AWSSolutions-ServerlessImageHandler",
  "Requires": [],
  "ReviewStatus": null,
  "Status": {
    "Value": "Active"
  },
  "StatusInformation": null,
  "VersionName": null,
  "ResponseMetadata": {
    "RequestId": "d52818a2-dd40-421e-9f64-87e167e2e5e9",
    "Metadata": {}
  },
  "ContentLength": 61071,
  "HttpStatusCode": 200,
  "LoggedAt": "2022-01-13T07:12:56.0330997+00:00"
}
