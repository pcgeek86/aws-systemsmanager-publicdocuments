{
  "AttachmentsContent": [],
  "Content": "{\n  \"schemaVersion\" : \"1.0\",\n  \"description\" : \"This template creates a Multi-AZ, multisubnet VPC infrastructure with managed NAT gateways in the public subnet for each Availability Zone. You can also create additional private subnets with dedicated custom network access control lists (ACLs). If you deploy the Quick Start in an AWS Region that doesn't support NAT gateways, NAT instances are deployed instead. **WARNING** This template creates AWS resources. You will be billed for the AWS resources used if you create a stack from this template. (qs-1qnnspaap)\",\n  \"templateBody\" : {\n    \"AWSTemplateFormatVersion\" : \"2010-09-09\",\n    \"Description\" : \"This template creates a Multi-AZ, multisubnet VPC infrastructure with managed NAT gateways in the public subnet for each Availability Zone. You can also create additional private subnets with dedicated custom network access control lists (ACLs). If you deploy the Quick Start in an AWS Region that doesn't support NAT gateways, NAT instances are deployed instead. **WARNING** This template creates AWS resources. You will be billed for the AWS resources used if you create a stack from this template. (qs-1qnnspaap)\",\n    \"Metadata\" : {\n      \"LICENSE\" : \"Apache License, Version 2.0\",\n      \"QuickStartDocumentation\" : {\n        \"EntrypointName\" : \"Launch a new VPC\"\n      },\n      \"AWS::CloudFormation::Interface\" : {\n        \"ParameterGroups\" : [ {\n          \"Label\" : {\n            \"default\" : \"Availability Zone configuration\"\n          },\n          \"Parameters\" : [ \"AvailabilityZones\", \"NumberOfAZs\" ]\n        }, {\n          \"Label\" : {\n            \"default\" : \"Network configuration\"\n          },\n          \"Parameters\" : [ \"VPCCIDR\", \"CreatePublicSubnets\", \"PublicSubnet1CIDR\", \"PublicSubnet2CIDR\", \"PublicSubnet3CIDR\", \"PublicSubnet4CIDR\", \"PublicSubnetTag1\", \"PublicSubnetTag2\", \"PublicSubnetTag3\", \"CreatePrivateSubnets\", \"CreateNATGateways\", \"PrivateSubnet1ACIDR\", \"PrivateSubnet2ACIDR\", \"PrivateSubnet3ACIDR\", \"PrivateSubnet4ACIDR\", \"PrivateSubnetATag1\", \"PrivateSubnetATag2\", \"PrivateSubnetATag3\", \"CreateAdditionalPrivateSubnets\", \"PrivateSubnet1BCIDR\", \"PrivateSubnet2BCIDR\", \"PrivateSubnet3BCIDR\", \"PrivateSubnet4BCIDR\", \"PrivateSubnetBTag1\", \"PrivateSubnetBTag2\", \"PrivateSubnetBTag3\", \"VPCTenancy\" ]\n        }, {\n          \"Label\" : {\n            \"default\" : \"VPC Flow Logs configuration\"\n          },\n          \"Parameters\" : [ \"CreateVPCFlowLogsToCloudWatch\", \"VPCFlowLogsLogFormat\", \"VPCFlowLogsLogGroupRetention\", \"VPCFlowLogsMaxAggregationInterval\", \"VPCFlowLogsTrafficType\", \"VPCFlowLogsCloudWatchKMSKey\" ]\n        } ],\n        \"ParameterLabels\" : {\n          \"AvailabilityZones\" : {\n            \"default\" : \"Availability Zones\"\n          },\n          \"CreateAdditionalPrivateSubnets\" : {\n            \"default\" : \"Create additional private subnets\"\n          },\n          \"CreateNATGateways\" : {\n            \"default\" : \"Create NAT gateways\"\n          },\n          \"CreatePrivateSubnets\" : {\n            \"default\" : \"Create private subnets\"\n          },\n          \"CreatePublicSubnets\" : {\n            \"default\" : \"Create public subnets\"\n          },\n          \"CreateVPCFlowLogsToCloudWatch\" : {\n            \"default\" : \"Create VPC flow logs (CloudWatch)\"\n          },\n          \"NumberOfAZs\" : {\n            \"default\" : \"Number of Availability Zones\"\n          },\n          \"PrivateSubnet1ACIDR\" : {\n            \"default\" : \"Private subnet 1A CIDR\"\n          },\n          \"PrivateSubnet1BCIDR\" : {\n            \"default\" : \"Private subnet 1B with dedicated network ACL CIDR\"\n          },\n          \"PrivateSubnet2ACIDR\" : {\n            \"default\" : \"Private subnet 2A CIDR\"\n          },\n          \"PrivateSubnet2BCIDR\" : {\n            \"default\" : \"Private subnet 2B with dedicated network ACL CIDR\"\n          },\n          \"PrivateSubnet3ACIDR\" : {\n            \"default\" : \"Private subnet 3A CIDR\"\n          },\n          \"PrivateSubnet3BCIDR\" : {\n            \"default\" : \"Private subnet 3B with dedicated network ACL CIDR\"\n          },\n          \"PrivateSubnet4ACIDR\" : {\n            \"default\" : \"Private subnet 4A CIDR\"\n          },\n          \"PrivateSubnet4BCIDR\" : {\n            \"default\" : \"Private subnet 4B with dedicated network ACL CIDR\"\n          },\n          \"PrivateSubnetATag1\" : {\n            \"default\" : \"Tag pair 1 for private A subnets\"\n          },\n          \"PrivateSubnetATag2\" : {\n            \"default\" : \"Tag pair 2 for private A subnets\"\n          },\n          \"PrivateSubnetATag3\" : {\n            \"default\" : \"Tag pair 3 for private A subnets\"\n          },\n          \"PrivateSubnetBTag1\" : {\n            \"default\" : \"Tag pair 1 for private B subnets\"\n          },\n          \"PrivateSubnetBTag2\" : {\n            \"default\" : \"Tag pair 2 for private B subnets\"\n          },\n          \"PrivateSubnetBTag3\" : {\n            \"default\" : \"Tag pair 3 for private B subnets\"\n          },\n          \"PublicSubnet1CIDR\" : {\n            \"default\" : \"Public subnet 1 CIDR\"\n          },\n          \"PublicSubnet2CIDR\" : {\n            \"default\" : \"Public subnet 2 CIDR\"\n          },\n          \"PublicSubnet3CIDR\" : {\n            \"default\" : \"Public subnet 3 CIDR\"\n          },\n          \"PublicSubnet4CIDR\" : {\n            \"default\" : \"Public subnet 4 CIDR\"\n          },\n          \"PublicSubnetTag1\" : {\n            \"default\" : \"Tag pair 1 for public subnets\"\n          },\n          \"PublicSubnetTag2\" : {\n            \"default\" : \"Tag pair 2 for public subnets\"\n          },\n          \"PublicSubnetTag3\" : {\n            \"default\" : \"Tag pair 3 for public subnets\"\n          },\n          \"VPCCIDR\" : {\n            \"default\" : \"VPC CIDR\"\n          },\n          \"VPCFlowLogsCloudWatchKMSKey\" : {\n            \"default\" : \"CloudWatch Logs KMS key for VPC flow logs\"\n          },\n          \"VPCFlowLogsLogFormat\" : {\n            \"default\" : \"VPC flow logs - log format\"\n          },\n          \"VPCFlowLogsLogGroupRetention\" : {\n            \"default\" : \"VPC flow logs - log group retention\"\n          },\n          \"VPCFlowLogsMaxAggregationInterval\" : {\n            \"default\" : \"VPC flow logs - max aggregation interval\"\n          },\n          \"VPCFlowLogsTrafficType\" : {\n            \"default\" : \"VPC flow logs - traffic type\"\n          },\n          \"VPCTenancy\" : {\n            \"default\" : \"VPC tenancy\"\n          }\n        }\n      }\n    },\n    \"Parameters\" : {\n      \"AvailabilityZones\" : {\n        \"Type\" : \"List<AWS::EC2::AvailabilityZone::Name>\",\n        \"Description\" : \"Availability Zones to use for the subnets in the VPC. The specified logical order is preserved.\"\n      },\n      \"CreateAdditionalPrivateSubnets\" : {\n        \"Type\" : \"String\",\n        \"Description\" : \"Choose true to create additional private subnets with dedicated network ACLs in each Availability Zone. If false, the CIDR parameters for those subnets will be ignored. If true, the CreatePrivateSubnets parameter must also be true to have any effect.\",\n        \"AllowedValues\" : [ \"true\", \"false\" ],\n        \"Default\" : \"false\"\n      },\n      \"CreateNATGateways\" : {\n        \"Type\" : \"String\",\n        \"Description\" : \"Choose false when creating only private subnets. If true, both CreatePublicSubnets and CreatePrivateSubnets must also be true.\",\n        \"AllowedValues\" : [ \"true\", \"false\" ],\n        \"Default\" : \"true\"\n      },\n      \"CreatePublicSubnets\" : {\n        \"Type\" : \"String\",\n        \"Description\" : \"Choose false to create only private subnets. If false, CreatePrivateSubnets must be true, and the CIDR parameters for all public subnets will be ignored.\",\n        \"AllowedValues\" : [ \"true\", \"false\" ],\n        \"Default\" : \"true\"\n      },\n      \"CreatePrivateSubnets\" : {\n        \"Type\" : \"String\",\n        \"Description\" : \"Choose false to create only public subnets. If false, the CIDR parameters for all private subnets will be ignored.\",\n        \"AllowedValues\" : [ \"true\", \"false\" ],\n        \"Default\" : \"true\"\n      },\n      \"CreateVPCFlowLogsToCloudWatch\" : {\n        \"Type\" : \"String\",\n        \"Description\" : \"Choose true to create VPC flow logs for the VPC and publish them to CloudWatch. If false, VPC flow logs will not be created.\",\n        \"AllowedValues\" : [ \"true\", \"false\" ],\n        \"Default\" : \"false\"\n      },\n      \"NumberOfAZs\" : {\n        \"Type\" : \"String\",\n        \"Description\" : \"Number of Availability Zones to use in the VPC. This must match your selections in the AvailabilityZones parameter.\",\n        \"AllowedValues\" : [ \"2\", \"3\", \"4\" ],\n        \"Default\" : \"2\"\n      },\n      \"PrivateSubnet1ACIDR\" : {\n        \"Type\" : \"String\",\n        \"Description\" : \"CIDR block for private subnet 1A located in Availability Zone 1.\",\n        \"AllowedPattern\" : \"^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\\\/(1[6-9]|2[0-8]))$\",\n        \"ConstraintDescription\" : \"CIDR block parameter must be in the form x.x.x.x/16-28.\",\n        \"Default\" : \"10.0.0.0/19\"\n      },\n      \"PrivateSubnet1BCIDR\" : {\n        \"Type\" : \"String\",\n        \"Description\" : \"CIDR block for private subnet 1B with dedicated network ACL located in Availability Zone 1.\",\n        \"AllowedPattern\" : \"^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\\\/(1[6-9]|2[0-8]))$\",\n        \"ConstraintDescription\" : \"CIDR block parameter must be in the form x.x.x.x/16-28.\",\n        \"Default\" : \"10.0.192.0/21\"\n      },\n      \"PrivateSubnet2ACIDR\" : {\n        \"Type\" : \"String\",\n        \"Description\" : \"CIDR block for private subnet 2A located in Availability Zone 2.\",\n        \"AllowedPattern\" : \"^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\\\/(1[6-9]|2[0-8]))$\",\n        \"ConstraintDescription\" : \"CIDR block parameter must be in the form x.x.x.x/16-28.\",\n        \"Default\" : \"10.0.32.0/19\"\n      },\n      \"PrivateSubnet2BCIDR\" : {\n        \"Type\" : \"String\",\n        \"Description\" : \"CIDR block for private subnet 2B with dedicated network ACL located in Availability Zone 2.\",\n        \"AllowedPattern\" : \"^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\\\/(1[6-9]|2[0-8]))$\",\n        \"ConstraintDescription\" : \"CIDR block parameter must be in the form x.x.x.x/16-28.\",\n        \"Default\" : \"10.0.200.0/21\"\n      },\n      \"PrivateSubnet3ACIDR\" : {\n        \"Type\" : \"String\",\n        \"Description\" : \"CIDR block for private subnet 3A located in Availability Zone 3.\",\n        \"AllowedPattern\" : \"^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\\\/(1[6-9]|2[0-8]))$\",\n        \"ConstraintDescription\" : \"CIDR block parameter must be in the form x.x.x.x/16-28.\",\n        \"Default\" : \"10.0.64.0/19\"\n      },\n      \"PrivateSubnet3BCIDR\" : {\n        \"Type\" : \"String\",\n        \"Description\" : \"CIDR block for private subnet 3B with dedicated network ACL located in Availability Zone 3.\",\n        \"AllowedPattern\" : \"^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\\\/(1[6-9]|2[0-8]))$\",\n        \"ConstraintDescription\" : \"CIDR block parameter must be in the form x.x.x.x/16-28.\",\n        \"Default\" : \"10.0.208.0/21\"\n      },\n      \"PrivateSubnet4ACIDR\" : {\n        \"Type\" : \"String\",\n        \"Description\" : \"CIDR block for private subnet 4A located in Availability Zone 4.\",\n        \"AllowedPattern\" : \"^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\\\/(1[6-9]|2[0-8]))$\",\n        \"ConstraintDescription\" : \"CIDR block parameter must be in the form x.x.x.x/16-28.\",\n        \"Default\" : \"10.0.96.0/19\"\n      },\n      \"PrivateSubnet4BCIDR\" : {\n        \"Type\" : \"String\",\n        \"Description\" : \"CIDR block for private subnet 4B with dedicated network ACL located in Availability Zone 4.\",\n        \"AllowedPattern\" : \"^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\\\/(1[6-9]|2[0-8]))$\",\n        \"ConstraintDescription\" : \"CIDR block parameter must be in the form x.x.x.x/16-28.\",\n        \"Default\" : \"10.0.216.0/21\"\n      },\n      \"PrivateSubnetATag1\" : {\n        \"Type\" : \"String\",\n        \"Description\" : \"(Optional) Tag to add to private subnets A, in format 'key=value'.\",\n        \"AllowedPattern\" : \"^([a-zA-Z0-9+\\\\-._:/@]+=[a-zA-Z0-9+\\\\-.,_:/@ *\\\\\\\\\\\"'\\\\[\\\\]\\\\{\\\\}]*)?$\",\n        \"ConstraintDescription\" : \"Tags must be in format 'key=value'. Keys can contain only [a-zA-Z0-9+\\\\-._:/@]. Values can contain [a-zA-Z0-9+\\\\-._:/@ *\\\\\\\\\\\"'\\\\[\\\\]\\\\{\\\\}].\",\n        \"Default\" : \"Network=Private\"\n      },\n      \"PrivateSubnetATag2\" : {\n        \"Type\" : \"String\",\n        \"Description\" : \"(Optional) Tag to add to private subnets A, in format 'key=value'.\",\n        \"AllowedPattern\" : \"^([a-zA-Z0-9+\\\\-._:/@]+=[a-zA-Z0-9+\\\\-.,_:/@ *\\\\\\\\\\\"'\\\\[\\\\]\\\\{\\\\}]*)?$\",\n        \"ConstraintDescription\" : \"Tags must be in format 'key=value'. Keys can contain only [a-zA-Z0-9+\\\\-._:/@]. Values can contain [a-zA-Z0-9+\\\\-._:/@ *\\\\\\\\\\\"'\\\\[\\\\]\\\\{\\\\}].\",\n        \"Default\" : \"\"\n      },\n      \"PrivateSubnetATag3\" : {\n        \"Type\" : \"String\",\n        \"Description\" : \"(Optional) Tag to add to private subnets A, in format 'key=value'.\",\n        \"AllowedPattern\" : \"^([a-zA-Z0-9+\\\\-._:/@]+=[a-zA-Z0-9+\\\\-.,_:/@ *\\\\\\\\\\\"'\\\\[\\\\]\\\\{\\\\}]*)?$\",\n        \"ConstraintDescription\" : \"Tags must be in format 'key=value'. Keys can contain only [a-zA-Z0-9+\\\\-._:/@]. Values can contain [a-zA-Z0-9+\\\\-._:/@ *\\\\\\\\\\\"'\\\\[\\\\]\\\\{\\\\}].\",\n        \"Default\" : \"\"\n      },\n      \"PrivateSubnetBTag1\" : {\n        \"Type\" : \"String\",\n        \"Description\" : \"(Optional) Tag to add to private subnets B, in format 'key=value'.\",\n        \"AllowedPattern\" : \"^([a-zA-Z0-9+\\\\-._:/@]+=[a-zA-Z0-9+\\\\-.,_:/@ *\\\\\\\\\\\"'\\\\[\\\\]\\\\{\\\\}]*)?$\",\n        \"ConstraintDescription\" : \"Tags must be in format 'key=value'. Keys can contain only [a-zA-Z0-9+\\\\-._:/@]. Values can contain [a-zA-Z0-9+\\\\-._:/@ *\\\\\\\\\\\"'\\\\[\\\\]\\\\{\\\\}].\",\n        \"Default\" : \"Network=Private\"\n      },\n      \"PrivateSubnetBTag2\" : {\n        \"Type\" : \"String\",\n        \"Description\" : \"(Optional) Tag to add to private subnets B, in format 'key=value'.\",\n        \"AllowedPattern\" : \"^([a-zA-Z0-9+\\\\-._:/@]+=[a-zA-Z0-9+\\\\-.,_:/@ *\\\\\\\\\\\"'\\\\[\\\\]\\\\{\\\\}]*)?$\",\n        \"ConstraintDescription\" : \"Tags must be in format 'key=value'. Keys can contain only [a-zA-Z0-9+\\\\-._:/@]. Values can contain [a-zA-Z0-9+\\\\-._:/@ *\\\\\\\\\\\"'\\\\[\\\\]\\\\{\\\\}].\",\n        \"Default\" : \"\"\n      },\n      \"PrivateSubnetBTag3\" : {\n        \"Type\" : \"String\",\n        \"Description\" : \"(Optional) Tag to add to private subnets B, in format 'key=value'.\",\n        \"AllowedPattern\" : \"^([a-zA-Z0-9+\\\\-._:/@]+=[a-zA-Z0-9+\\\\-.,_:/@ *\\\\\\\\\\\"'\\\\[\\\\]\\\\{\\\\}]*)?$\",\n        \"ConstraintDescription\" : \"Tags must be in format 'key=value'. Keys can contain only [a-zA-Z0-9+\\\\-._:/@]. Values can contain [a-zA-Z0-9+\\\\-._:/@ *\\\\\\\\\\\"'\\\\[\\\\]\\\\{\\\\}].\",\n        \"Default\" : \"\"\n      },\n      \"PublicSubnet1CIDR\" : {\n        \"Type\" : \"String\",\n        \"Description\" : \"CIDR block for the public DMZ subnet 1 located in Availability Zone 1.\",\n        \"AllowedPattern\" : \"^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\\\/(1[6-9]|2[0-8]))$\",\n        \"ConstraintDescription\" : \"CIDR block parameter must be in the form x.x.x.x/16-28.\",\n        \"Default\" : \"10.0.128.0/20\"\n      },\n      \"PublicSubnet2CIDR\" : {\n        \"Type\" : \"String\",\n        \"Description\" : \"CIDR block for the public DMZ subnet 2 located in Availability Zone 2.\",\n        \"AllowedPattern\" : \"^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\\\/(1[6-9]|2[0-8]))$\",\n        \"ConstraintDescription\" : \"CIDR block parameter must be in the form x.x.x.x/16-28.\",\n        \"Default\" : \"10.0.144.0/20\"\n      },\n      \"PublicSubnet3CIDR\" : {\n        \"Type\" : \"String\",\n        \"Description\" : \"CIDR block for the public DMZ subnet 3 located in Availability Zone 3.\",\n        \"AllowedPattern\" : \"^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\\\/(1[6-9]|2[0-8]))$\",\n        \"ConstraintDescription\" : \"CIDR block parameter must be in the form x.x.x.x/16-28.\",\n        \"Default\" : \"10.0.160.0/20\"\n      },\n      \"PublicSubnet4CIDR\" : {\n        \"Type\" : \"String\",\n        \"Description\" : \"CIDR block for the public DMZ subnet 4 located in Availability Zone 4.\",\n        \"AllowedPattern\" : \"^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\\\/(1[6-9]|2[0-8]))$\",\n        \"ConstraintDescription\" : \"CIDR block parameter must be in the form x.x.x.x/16-28.\",\n        \"Default\" : \"10.0.176.0/20\"\n      },\n      \"PublicSubnetTag1\" : {\n        \"Type\" : \"String\",\n        \"Description\" : \"(Optional) Tag to add to public subnets, in format 'key=value'.\",\n        \"AllowedPattern\" : \"^([a-zA-Z0-9+\\\\-._:/@]+=[a-zA-Z0-9+\\\\-.,_:/@ *\\\\\\\\\\\"'\\\\[\\\\]\\\\{\\\\}]*)?$\",\n        \"ConstraintDescription\" : \"Tags must be in format 'key=value'. Keys can contain only [a-zA-Z0-9+\\\\-._:/@]. Values can contain [a-zA-Z0-9+\\\\-._:/@ *\\\\\\\\\\\"'\\\\[\\\\]\\\\{\\\\}].\",\n        \"Default\" : \"Network=Public\"\n      },\n      \"PublicSubnetTag2\" : {\n        \"Type\" : \"String\",\n        \"Description\" : \"(Optional) Tag to add to public subnets, in format 'key=value'.\",\n        \"AllowedPattern\" : \"^([a-zA-Z0-9+\\\\-._:/@]+=[a-zA-Z0-9+\\\\-.,_:/@ *\\\\\\\\\\\"'\\\\[\\\\]\\\\{\\\\}]*)?$\",\n        \"ConstraintDescription\" : \"Tags must be in format 'key=value'. Keys can contain only [a-zA-Z0-9+\\\\-._:/@]. Values can contain [a-zA-Z0-9+\\\\-._:/@ *\\\\\\\\\\\"'\\\\[\\\\]\\\\{\\\\}].\",\n        \"Default\" : \"\"\n      },\n      \"PublicSubnetTag3\" : {\n        \"Type\" : \"String\",\n        \"Description\" : \"(Optional) Tag to add to public subnets, in format 'key=value'.\",\n        \"AllowedPattern\" : \"^([a-zA-Z0-9+\\\\-._:/@]+=[a-zA-Z0-9+\\\\-.,_:/@ *\\\\\\\\\\\"'\\\\[\\\\]\\\\{\\\\}]*)?$\",\n        \"ConstraintDescription\" : \"Tags must be in format 'key=value'. Keys can contain only [a-zA-Z0-9+\\\\-._:/@]. Values can contain [a-zA-Z0-9+\\\\-._:/@ *\\\\\\\\\\\"'\\\\[\\\\]\\\\{\\\\}].\",\n        \"Default\" : \"\"\n      },\n      \"VPCCIDR\" : {\n        \"Type\" : \"String\",\n        \"Description\" : \"CIDR block for the VPC.\",\n        \"AllowedPattern\" : \"^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\\\/(1[6-9]|2[0-8]))$\",\n        \"ConstraintDescription\" : \"CIDR block parameter must be in the form x.x.x.x/16-28.\",\n        \"Default\" : \"10.0.0.0/16\"\n      },\n      \"VPCFlowLogsCloudWatchKMSKey\" : {\n        \"Type\" : \"String\",\n        \"Description\" : \"(Optional) KMS key ARN to use for encrypting the VPC flow logs data. If empty, encryption is enabled with CloudWatch Logs managing the server-side encryption keys.\",\n        \"AllowedPattern\" : \"^$|^arn:aws(-cn)?:kms:[a-z0-9-]+:\\\\d{12}:key\\\\/[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$\",\n        \"ConstraintDescription\" : \"Invalid KMS ARN or attempting to use in GovCloud. The AWS::Logs::LogGroup CloudFormation resource does not yet support the KmsKeyId property in GovCloud. Key ARN example: 'arn:aws:kms:us-east-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab'.\",\n        \"Default\" : \"\"\n      },\n      \"VPCFlowLogsLogFormat\" : {\n        \"Type\" : \"String\",\n        \"Description\" : \"The fields to include in the flow log record, in the order in which they should appear. Specify the fields using the ${field-id} format, separated by spaces. The default format is used as the default value.\",\n        \"AllowedPattern\" : \"^(\\\\$\\\\{[a-z-]+\\\\})$|^((\\\\$\\\\{[a-z-]+\\\\} )*\\\\$\\\\{[a-z-]+\\\\})$\",\n        \"Default\" : \"${version} ${account-id} ${interface-id} ${srcaddr} ${dstaddr} ${srcport} ${dstport} ${protocol} ${packets} ${bytes} ${start} ${end} ${action} ${log-status}\"\n      },\n      \"VPCFlowLogsLogGroupRetention\" : {\n        \"Type\" : \"String\",\n        \"Description\" : \"Number of days to retain the VPC flow logs in CloudWatch.\",\n        \"AllowedValues\" : [ 1, 3, 5, 7, 14, 30, 60, 90, 120, 150, 180, 365, 400, 545, 731, 1827, 3653 ],\n        \"Default\" : 14\n      },\n      \"VPCFlowLogsMaxAggregationInterval\" : {\n        \"Type\" : \"String\",\n        \"Description\" : \"The maximum interval of time during which a flow of packets is captured and aggregated into a flow log record. You can specify 60 seconds (1 minute) or 600 seconds (10 minutes).\",\n        \"AllowedValues\" : [ 60, 600 ],\n        \"Default\" : 600\n      },\n      \"VPCFlowLogsTrafficType\" : {\n        \"Type\" : \"String\",\n        \"Description\" : \"The type of traffic to log. You can log traffic that the resource accepts or rejects, or all traffic.\",\n        \"AllowedValues\" : [ \"ACCEPT\", \"ALL\", \"REJECT\" ],\n        \"Default\" : \"REJECT\"\n      },\n      \"VPCTenancy\" : {\n        \"Type\" : \"String\",\n        \"Description\" : \"The allowed tenancy of instances launched into the VPC.\",\n        \"AllowedValues\" : [ \"default\", \"dedicated\" ],\n        \"Default\" : \"default\"\n      }\n    },\n    \"Rules\" : {\n      \"NAT\" : {\n        \"RuleCondition\" : {\n          \"Fn::Equals\" : [ {\n            \"Ref\" : \"CreateNATGateways\"\n          }, \"true\" ]\n        },\n        \"Assertions\" : [ {\n          \"Assert\" : {\n            \"Fn::And\" : [ {\n              \"Fn::Equals\" : [ {\n                \"Ref\" : \"CreatePrivateSubnets\"\n              }, \"true\" ]\n            }, {\n              \"Fn::Equals\" : [ {\n                \"Ref\" : \"CreatePublicSubnets\"\n              }, \"true\" ]\n            } ]\n          },\n          \"AssertDescription\" : \"To enable NAT gateways, both CreatePrivateSubnets and CreatePublicSubnets must be set to 'true'.\"\n        } ]\n      },\n      \"Subnets\" : {\n        \"Assertions\" : [ {\n          \"Assert\" : {\n            \"Fn::Or\" : [ {\n              \"Fn::Equals\" : [ {\n                \"Ref\" : \"CreatePrivateSubnets\"\n              }, \"true\" ]\n            }, {\n              \"Fn::Equals\" : [ {\n                \"Ref\" : \"CreatePublicSubnets\"\n              }, \"true\" ]\n            } ]\n          },\n          \"AssertDescription\" : \"At least one of CreatePublicSubnets or CreatePrivateSubnets must be set to 'true'.\"\n        } ]\n      }\n    },\n    \"Conditions\" : {\n      \"3AZCondition\" : {\n        \"Fn::Or\" : [ {\n          \"Fn::Equals\" : [ {\n            \"Ref\" : \"NumberOfAZs\"\n          }, \"3\" ]\n        }, {\n          \"Condition\" : \"4AZCondition\"\n        } ]\n      },\n      \"4AZCondition\" : {\n        \"Fn::Equals\" : [ {\n          \"Ref\" : \"NumberOfAZs\"\n        }, \"4\" ]\n      },\n      \"AdditionalPrivateSubnetsCondition\" : {\n        \"Fn::And\" : [ {\n          \"Fn::Equals\" : [ {\n            \"Ref\" : \"CreatePrivateSubnets\"\n          }, \"true\" ]\n        }, {\n          \"Fn::Equals\" : [ {\n            \"Ref\" : \"CreateAdditionalPrivateSubnets\"\n          }, \"true\" ]\n        } ]\n      },\n      \"AdditionalPrivateSubnets&3AZCondition\" : {\n        \"Fn::And\" : [ {\n          \"Condition\" : \"AdditionalPrivateSubnetsCondition\"\n        }, {\n          \"Condition\" : \"3AZCondition\"\n        } ]\n      },\n      \"AdditionalPrivateSubnets&4AZCondition\" : {\n        \"Fn::And\" : [ {\n          \"Condition\" : \"AdditionalPrivateSubnetsCondition\"\n        }, {\n          \"Condition\" : \"4AZCondition\"\n        } ]\n      },\n      \"AdditionalPrivateSubnets&PublicSubnets&NatGatewaysCondition\" : {\n        \"Fn::And\" : [ {\n          \"Condition\" : \"AdditionalPrivateSubnetsCondition\"\n        }, {\n          \"Condition\" : \"PublicSubnetsCondition\"\n        }, {\n          \"Condition\" : \"NATGatewaysCondition\"\n        } ]\n      },\n      \"AdditionalPrivateSubnets&PublicSubnets&NatGateways&3AZCondition\" : {\n        \"Fn::And\" : [ {\n          \"Condition\" : \"AdditionalPrivateSubnets&3AZCondition\"\n        }, {\n          \"Condition\" : \"PublicSubnetsCondition\"\n        }, {\n          \"Condition\" : \"NATGatewaysCondition\"\n        } ]\n      },\n      \"AdditionalPrivateSubnets&PublicSubnets&NatGateways&4AZCondition\" : {\n        \"Fn::And\" : [ {\n          \"Condition\" : \"AdditionalPrivateSubnets&4AZCondition\"\n        }, {\n          \"Condition\" : \"PublicSubnetsCondition\"\n        }, {\n          \"Condition\" : \"NATGatewaysCondition\"\n        } ]\n      },\n      \"NATGatewaysCondition\" : {\n        \"Fn::Equals\" : [ {\n          \"Ref\" : \"CreateNATGateways\"\n        }, \"true\" ]\n      },\n      \"NATGateways&PublicSubnets&PrivateSubnetsCondition\" : {\n        \"Fn::And\" : [ {\n          \"Condition\" : \"NATGatewaysCondition\"\n        }, {\n          \"Condition\" : \"PublicSubnetsCondition\"\n        }, {\n          \"Condition\" : \"PrivateSubnetsCondition\"\n        } ]\n      },\n      \"NATGateways&PublicSubnets&PrivateSubnets&3AZCondition\" : {\n        \"Fn::And\" : [ {\n          \"Condition\" : \"NATGatewaysCondition\"\n        }, {\n          \"Condition\" : \"PublicSubnetsCondition\"\n        }, {\n          \"Condition\" : \"PrivateSubnetsCondition\"\n        }, {\n          \"Condition\" : \"3AZCondition\"\n        } ]\n      },\n      \"NATGateways&PublicSubnets&PrivateSubnets&4AZCondition\" : {\n        \"Fn::And\" : [ {\n          \"Condition\" : \"NATGatewaysCondition\"\n        }, {\n          \"Condition\" : \"PublicSubnetsCondition\"\n        }, {\n          \"Condition\" : \"PrivateSubnetsCondition\"\n        }, {\n          \"Condition\" : \"4AZCondition\"\n        } ]\n      },\n      \"NVirginiaRegionCondition\" : {\n        \"Fn::Equals\" : [ {\n          \"Ref\" : \"AWS::Region\"\n        }, \"us-east-1\" ]\n      },\n      \"PrivateSubnetsCondition\" : {\n        \"Fn::Equals\" : [ {\n          \"Ref\" : \"CreatePrivateSubnets\"\n        }, \"true\" ]\n      },\n      \"PrivateSubnets&3AZCondition\" : {\n        \"Fn::And\" : [ {\n          \"Condition\" : \"PrivateSubnetsCondition\"\n        }, {\n          \"Condition\" : \"3AZCondition\"\n        } ]\n      },\n      \"PrivateSubnets&4AZCondition\" : {\n        \"Fn::And\" : [ {\n          \"Condition\" : \"PrivateSubnetsCondition\"\n        }, {\n          \"Condition\" : \"4AZCondition\"\n        } ]\n      },\n      \"PublicSubnetsCondition\" : {\n        \"Fn::Equals\" : [ {\n          \"Ref\" : \"CreatePublicSubnets\"\n        }, \"true\" ]\n      },\n      \"PublicSubnets&3AZCondition\" : {\n        \"Fn::And\" : [ {\n          \"Condition\" : \"PublicSubnetsCondition\"\n        }, {\n          \"Condition\" : \"3AZCondition\"\n        } ]\n      },\n      \"PublicSubnets&4AZCondition\" : {\n        \"Fn::And\" : [ {\n          \"Condition\" : \"PublicSubnetsCondition\"\n        }, {\n          \"Condition\" : \"4AZCondition\"\n        } ]\n      },\n      \"PrivateSubnetATag1Condition\" : {\n        \"Fn::Not\" : [ {\n          \"Fn::Equals\" : [ {\n            \"Ref\" : \"PrivateSubnetATag1\"\n          }, \"\" ]\n        } ]\n      },\n      \"PrivateSubnetATag2Condition\" : {\n        \"Fn::Not\" : [ {\n          \"Fn::Equals\" : [ {\n            \"Ref\" : \"PrivateSubnetATag2\"\n          }, \"\" ]\n        } ]\n      },\n      \"PrivateSubnetATag3Condition\" : {\n        \"Fn::Not\" : [ {\n          \"Fn::Equals\" : [ {\n            \"Ref\" : \"PrivateSubnetATag3\"\n          }, \"\" ]\n        } ]\n      },\n      \"PrivateSubnetBTag1Condition\" : {\n        \"Fn::Not\" : [ {\n          \"Fn::Equals\" : [ {\n            \"Ref\" : \"PrivateSubnetBTag1\"\n          }, \"\" ]\n        } ]\n      },\n      \"PrivateSubnetBTag2Condition\" : {\n        \"Fn::Not\" : [ {\n          \"Fn::Equals\" : [ {\n            \"Ref\" : \"PrivateSubnetBTag2\"\n          }, \"\" ]\n        } ]\n      },\n      \"PrivateSubnetBTag3Condition\" : {\n        \"Fn::Not\" : [ {\n          \"Fn::Equals\" : [ {\n            \"Ref\" : \"PrivateSubnetBTag3\"\n          }, \"\" ]\n        } ]\n      },\n      \"PublicSubnetTag1Condition\" : {\n        \"Fn::Not\" : [ {\n          \"Fn::Equals\" : [ {\n            \"Ref\" : \"PublicSubnetTag1\"\n          }, \"\" ]\n        } ]\n      },\n      \"PublicSubnetTag2Condition\" : {\n        \"Fn::Not\" : [ {\n          \"Fn::Equals\" : [ {\n            \"Ref\" : \"PublicSubnetTag2\"\n          }, \"\" ]\n        } ]\n      },\n      \"PublicSubnetTag3Condition\" : {\n        \"Fn::Not\" : [ {\n          \"Fn::Equals\" : [ {\n            \"Ref\" : \"PublicSubnetTag3\"\n          }, \"\" ]\n        } ]\n      },\n      \"VPCFlowLogsCloudWatchKMSKeyCondition\" : {\n        \"Fn::Not\" : [ {\n          \"Fn::Equals\" : [ {\n            \"Ref\" : \"VPCFlowLogsCloudWatchKMSKey\"\n          }, \"\" ]\n        } ]\n      },\n      \"VPCFlowLogsToCloudWatchCondition\" : {\n        \"Fn::Equals\" : [ {\n          \"Ref\" : \"CreateVPCFlowLogsToCloudWatch\"\n        }, \"true\" ]\n      }\n    },\n    \"Resources\" : {\n      \"DHCPOptions\" : {\n        \"Type\" : \"AWS::EC2::DHCPOptions\",\n        \"Properties\" : {\n          \"DomainName\" : {\n            \"Fn::If\" : [ \"NVirginiaRegionCondition\", \"ec2.internal\", {\n              \"Fn::Sub\" : \"${AWS::Region}.compute.internal\"\n            } ]\n          },\n          \"DomainNameServers\" : [ \"AmazonProvidedDNS\" ],\n          \"Tags\" : [ {\n            \"Key\" : \"Name\",\n            \"Value\" : {\n              \"Fn::Sub\" : \"${AWS::StackName} stack DHCPOptions\"\n            }\n          }, {\n            \"Key\" : \"StackName\",\n            \"Value\" : {\n              \"Ref\" : \"AWS::StackName\"\n            }\n          } ]\n        }\n      },\n      \"VPC\" : {\n        \"Type\" : \"AWS::EC2::VPC\",\n        \"Properties\" : {\n          \"CidrBlock\" : {\n            \"Ref\" : \"VPCCIDR\"\n          },\n          \"InstanceTenancy\" : {\n            \"Ref\" : \"VPCTenancy\"\n          },\n          \"EnableDnsSupport\" : true,\n          \"EnableDnsHostnames\" : true,\n          \"Tags\" : [ {\n            \"Key\" : \"Name\",\n            \"Value\" : {\n              \"Ref\" : \"AWS::StackName\"\n            }\n          } ]\n        }\n      },\n      \"VPCDHCPOptionsAssociation\" : {\n        \"Type\" : \"AWS::EC2::VPCDHCPOptionsAssociation\",\n        \"Properties\" : {\n          \"VpcId\" : {\n            \"Ref\" : \"VPC\"\n          },\n          \"DhcpOptionsId\" : {\n            \"Ref\" : \"DHCPOptions\"\n          }\n        }\n      },\n      \"InternetGateway\" : {\n        \"Condition\" : \"PublicSubnetsCondition\",\n        \"Type\" : \"AWS::EC2::InternetGateway\",\n        \"Properties\" : {\n          \"Tags\" : [ {\n            \"Key\" : \"Name\",\n            \"Value\" : {\n              \"Ref\" : \"AWS::StackName\"\n            }\n          } ]\n        }\n      },\n      \"VPCGatewayAttachment\" : {\n        \"Condition\" : \"PublicSubnetsCondition\",\n        \"Type\" : \"AWS::EC2::VPCGatewayAttachment\",\n        \"Properties\" : {\n          \"VpcId\" : {\n            \"Ref\" : \"VPC\"\n          },\n          \"InternetGatewayId\" : {\n            \"Ref\" : \"InternetGateway\"\n          }\n        }\n      },\n      \"PrivateSubnet1A\" : {\n        \"Condition\" : \"PrivateSubnetsCondition\",\n        \"Type\" : \"AWS::EC2::Subnet\",\n        \"Properties\" : {\n          \"VpcId\" : {\n            \"Ref\" : \"VPC\"\n          },\n          \"CidrBlock\" : {\n            \"Ref\" : \"PrivateSubnet1ACIDR\"\n          },\n          \"AvailabilityZone\" : {\n            \"Fn::Select\" : [ 0, {\n              \"Ref\" : \"AvailabilityZones\"\n            } ]\n          },\n          \"Tags\" : [ {\n            \"Key\" : \"Name\",\n            \"Value\" : \"Private subnet 1A\"\n          }, {\n            \"Fn::If\" : [ \"PrivateSubnetATag1Condition\", {\n              \"Key\" : {\n                \"Fn::Select\" : [ 0, {\n                  \"Fn::Split\" : [ \"=\", {\n                    \"Ref\" : \"PrivateSubnetATag1\"\n                  } ]\n                } ]\n              },\n              \"Value\" : {\n                \"Fn::Select\" : [ 1, {\n                  \"Fn::Split\" : [ \"=\", {\n                    \"Ref\" : \"PrivateSubnetATag1\"\n                  } ]\n                } ]\n              }\n            }, {\n              \"Ref\" : \"AWS::NoValue\"\n            } ]\n          }, {\n            \"Fn::If\" : [ \"PrivateSubnetATag2Condition\", {\n              \"Key\" : {\n                \"Fn::Select\" : [ 0, {\n                  \"Fn::Split\" : [ \"=\", {\n                    \"Ref\" : \"PrivateSubnetATag2\"\n                  } ]\n                } ]\n              },\n              \"Value\" : {\n                \"Fn::Select\" : [ 1, {\n                  \"Fn::Split\" : [ \"=\", {\n                    \"Ref\" : \"PrivateSubnetATag2\"\n                  } ]\n                } ]\n              }\n            }, {\n              \"Ref\" : \"AWS::NoValue\"\n            } ]\n          }, {\n            \"Fn::If\" : [ \"PrivateSubnetATag3Condition\", {\n              \"Key\" : {\n                \"Fn::Select\" : [ 0, {\n                  \"Fn::Split\" : [ \"=\", {\n                    \"Ref\" : \"PrivateSubnetATag3\"\n                  } ]\n                } ]\n              },\n              \"Value\" : {\n                \"Fn::Select\" : [ 1, {\n                  \"Fn::Split\" : [ \"=\", {\n                    \"Ref\" : \"PrivateSubnetATag3\"\n                  } ]\n                } ]\n              }\n            }, {\n              \"Ref\" : \"AWS::NoValue\"\n            } ]\n          } ]\n        }\n      },\n      \"PrivateSubnet1B\" : {\n        \"Condition\" : \"AdditionalPrivateSubnetsCondition\",\n        \"Type\" : \"AWS::EC2::Subnet\",\n        \"Properties\" : {\n          \"VpcId\" : {\n            \"Ref\" : \"VPC\"\n          },\n          \"CidrBlock\" : {\n            \"Ref\" : \"PrivateSubnet1BCIDR\"\n          },\n          \"AvailabilityZone\" : {\n            \"Fn::Select\" : [ 0, {\n              \"Ref\" : \"AvailabilityZones\"\n            } ]\n          },\n          \"Tags\" : [ {\n            \"Key\" : \"Name\",\n            \"Value\" : \"Private subnet 1B\"\n          }, {\n            \"Fn::If\" : [ \"PrivateSubnetBTag1Condition\", {\n              \"Key\" : {\n                \"Fn::Select\" : [ 0, {\n                  \"Fn::Split\" : [ \"=\", {\n                    \"Ref\" : \"PrivateSubnetBTag1\"\n                  } ]\n                } ]\n              },\n              \"Value\" : {\n                \"Fn::Select\" : [ 1, {\n                  \"Fn::Split\" : [ \"=\", {\n                    \"Ref\" : \"PrivateSubnetBTag1\"\n                  } ]\n                } ]\n              }\n            }, {\n              \"Ref\" : \"AWS::NoValue\"\n            } ]\n          }, {\n            \"Fn::If\" : [ \"PrivateSubnetBTag2Condition\", {\n              \"Key\" : {\n                \"Fn::Select\" : [ 0, {\n                  \"Fn::Split\" : [ \"=\", {\n                    \"Ref\" : \"PrivateSubnetBTag2\"\n                  } ]\n                } ]\n              },\n              \"Value\" : {\n                \"Fn::Select\" : [ 1, {\n                  \"Fn::Split\" : [ \"=\", {\n                    \"Ref\" : \"PrivateSubnetBTag2\"\n                  } ]\n                } ]\n              }\n            }, {\n              \"Ref\" : \"AWS::NoValue\"\n            } ]\n          }, {\n            \"Fn::If\" : [ \"PrivateSubnetBTag3Condition\", {\n              \"Key\" : {\n                \"Fn::Select\" : [ 0, {\n                  \"Fn::Split\" : [ \"=\", {\n                    \"Ref\" : \"PrivateSubnetBTag3\"\n                  } ]\n                } ]\n              },\n              \"Value\" : {\n                \"Fn::Select\" : [ 1, {\n                  \"Fn::Split\" : [ \"=\", {\n                    \"Ref\" : \"PrivateSubnetBTag3\"\n                  } ]\n                } ]\n              }\n            }, {\n              \"Ref\" : \"AWS::NoValue\"\n            } ]\n          } ]\n        }\n      },\n      \"PrivateSubnet2A\" : {\n        \"Condition\" : \"PrivateSubnetsCondition\",\n        \"Type\" : \"AWS::EC2::Subnet\",\n        \"Properties\" : {\n          \"VpcId\" : {\n            \"Ref\" : \"VPC\"\n          },\n          \"CidrBlock\" : {\n            \"Ref\" : \"PrivateSubnet2ACIDR\"\n          },\n          \"AvailabilityZone\" : {\n            \"Fn::Select\" : [ 1, {\n              \"Ref\" : \"AvailabilityZones\"\n            } ]\n          },\n          \"Tags\" : [ {\n            \"Key\" : \"Name\",\n            \"Value\" : \"Private subnet 2A\"\n          }, {\n            \"Fn::If\" : [ \"PrivateSubnetATag1Condition\", {\n              \"Key\" : {\n                \"Fn::Select\" : [ 0, {\n                  \"Fn::Split\" : [ \"=\", {\n                    \"Ref\" : \"PrivateSubnetATag1\"\n                  } ]\n                } ]\n              },\n              \"Value\" : {\n                \"Fn::Select\" : [ 1, {\n                  \"Fn::Split\" : [ \"=\", {\n                    \"Ref\" : \"PrivateSubnetATag1\"\n                  } ]\n                } ]\n              }\n            }, {\n              \"Ref\" : \"AWS::NoValue\"\n            } ]\n          }, {\n            \"Fn::If\" : [ \"PrivateSubnetATag2Condition\", {\n              \"Key\" : {\n                \"Fn::Select\" : [ 0, {\n                  \"Fn::Split\" : [ \"=\", {\n                    \"Ref\" : \"PrivateSubnetATag2\"\n                  } ]\n                } ]\n              },\n              \"Value\" : {\n                \"Fn::Select\" : [ 1, {\n                  \"Fn::Split\" : [ \"=\", {\n                    \"Ref\" : \"PrivateSubnetATag2\"\n                  } ]\n                } ]\n              }\n            }, {\n              \"Ref\" : \"AWS::NoValue\"\n            } ]\n          }, {\n            \"Fn::If\" : [ \"PrivateSubnetATag3Condition\", {\n              \"Key\" : {\n                \"Fn::Select\" : [ 0, {\n                  \"Fn::Split\" : [ \"=\", {\n                    \"Ref\" : \"PrivateSubnetATag3\"\n                  } ]\n                } ]\n              },\n              \"Value\" : {\n                \"Fn::Select\" : [ 1, {\n                  \"Fn::Split\" : [ \"=\", {\n                    \"Ref\" : \"PrivateSubnetATag3\"\n                  } ]\n                } ]\n              }\n            }, {\n              \"Ref\" : \"AWS::NoValue\"\n            } ]\n          } ]\n        }\n      },\n      \"PrivateSubnet2B\" : {\n        \"Condition\" : \"AdditionalPrivateSubnetsCondition\",\n        \"Type\" : \"AWS::EC2::Subnet\",\n        \"Properties\" : {\n          \"VpcId\" : {\n            \"Ref\" : \"VPC\"\n          },\n          \"CidrBlock\" : {\n            \"Ref\" : \"PrivateSubnet2BCIDR\"\n          },\n          \"AvailabilityZone\" : {\n            \"Fn::Select\" : [ 1, {\n              \"Ref\" : \"AvailabilityZones\"\n            } ]\n          },\n          \"Tags\" : [ {\n            \"Key\" : \"Name\",\n            \"Value\" : \"Private subnet 2B\"\n          }, {\n            \"Fn::If\" : [ \"PrivateSubnetBTag1Condition\", {\n              \"Key\" : {\n                \"Fn::Select\" : [ 0, {\n                  \"Fn::Split\" : [ \"=\", {\n                    \"Ref\" : \"PrivateSubnetBTag1\"\n                  } ]\n                } ]\n              },\n              \"Value\" : {\n                \"Fn::Select\" : [ 1, {\n                  \"Fn::Split\" : [ \"=\", {\n                    \"Ref\" : \"PrivateSubnetBTag1\"\n                  } ]\n                } ]\n              }\n            }, {\n              \"Ref\" : \"AWS::NoValue\"\n            } ]\n          }, {\n            \"Fn::If\" : [ \"PrivateSubnetBTag2Condition\", {\n              \"Key\" : {\n                \"Fn::Select\" : [ 0, {\n                  \"Fn::Split\" : [ \"=\", {\n                    \"Ref\" : \"PrivateSubnetBTag2\"\n                  } ]\n                } ]\n              },\n              \"Value\" : {\n                \"Fn::Select\" : [ 1, {\n                  \"Fn::Split\" : [ \"=\", {\n                    \"Ref\" : \"PrivateSubnetBTag2\"\n                  } ]\n                } ]\n              }\n            }, {\n              \"Ref\" : \"AWS::NoValue\"\n            } ]\n          }, {\n            \"Fn::If\" : [ \"PrivateSubnetBTag3Condition\", {\n              \"Key\" : {\n                \"Fn::Select\" : [ 0, {\n                  \"Fn::Split\" : [ \"=\", {\n                    \"Ref\" : \"PrivateSubnetBTag3\"\n                  } ]\n                } ]\n              },\n              \"Value\" : {\n                \"Fn::Select\" : [ 1, {\n                  \"Fn::Split\" : [ \"=\", {\n                    \"Ref\" : \"PrivateSubnetBTag3\"\n                  } ]\n                } ]\n              }\n            }, {\n              \"Ref\" : \"AWS::NoValue\"\n            } ]\n          } ]\n        }\n      },\n      \"PrivateSubnet3A\" : {\n        \"Condition\" : \"PrivateSubnets&3AZCondition\",\n        \"Type\" : \"AWS::EC2::Subnet\",\n        \"Properties\" : {\n          \"VpcId\" : {\n            \"Ref\" : \"VPC\"\n          },\n          \"CidrBlock\" : {\n            \"Ref\" : \"PrivateSubnet3ACIDR\"\n          },\n          \"AvailabilityZone\" : {\n            \"Fn::Select\" : [ 2, {\n              \"Ref\" : \"AvailabilityZones\"\n            } ]\n          },\n          \"Tags\" : [ {\n            \"Key\" : \"Name\",\n            \"Value\" : \"Private subnet 3A\"\n          }, {\n            \"Fn::If\" : [ \"PrivateSubnetATag1Condition\", {\n              \"Key\" : {\n                \"Fn::Select\" : [ 0, {\n                  \"Fn::Split\" : [ \"=\", {\n                    \"Ref\" : \"PrivateSubnetATag1\"\n                  } ]\n                } ]\n              },\n              \"Value\" : {\n                \"Fn::Select\" : [ 1, {\n                  \"Fn::Split\" : [ \"=\", {\n                    \"Ref\" : \"PrivateSubnetATag1\"\n                  } ]\n                } ]\n              }\n            }, {\n              \"Ref\" : \"AWS::NoValue\"\n            } ]\n          }, {\n            \"Fn::If\" : [ \"PrivateSubnetATag2Condition\", {\n              \"Key\" : {\n                \"Fn::Select\" : [ 0, {\n                  \"Fn::Split\" : [ \"=\", {\n                    \"Ref\" : \"PrivateSubnetATag2\"\n                  } ]\n                } ]\n              },\n              \"Value\" : {\n                \"Fn::Select\" : [ 1, {\n                  \"Fn::Split\" : [ \"=\", {\n                    \"Ref\" : \"PrivateSubnetATag2\"\n                  } ]\n                } ]\n              }\n            }, {\n              \"Ref\" : \"AWS::NoValue\"\n            } ]\n          }, {\n            \"Fn::If\" : [ \"PrivateSubnetATag3Condition\", {\n              \"Key\" : {\n                \"Fn::Select\" : [ 0, {\n                  \"Fn::Split\" : [ \"=\", {\n                    \"Ref\" : \"PrivateSubnetATag3\"\n                  } ]\n                } ]\n              },\n              \"Value\" : {\n                \"Fn::Select\" : [ 1, {\n                  \"Fn::Split\" : [ \"=\", {\n                    \"Ref\" : \"PrivateSubnetATag3\"\n                  } ]\n                } ]\n              }\n            }, {\n              \"Ref\" : \"AWS::NoValue\"\n            } ]\n          } ]\n        }\n      },\n      \"PrivateSubnet3B\" : {\n        \"Condition\" : \"AdditionalPrivateSubnets&3AZCondition\",\n        \"Type\" : \"AWS::EC2::Subnet\",\n        \"Properties\" : {\n          \"VpcId\" : {\n            \"Ref\" : \"VPC\"\n          },\n          \"CidrBlock\" : {\n            \"Ref\" : \"PrivateSubnet3BCIDR\"\n          },\n          \"AvailabilityZone\" : {\n            \"Fn::Select\" : [ 2, {\n              \"Ref\" : \"AvailabilityZones\"\n            } ]\n          },\n          \"Tags\" : [ {\n            \"Key\" : \"Name\",\n            \"Value\" : \"Private subnet 3B\"\n          }, {\n            \"Fn::If\" : [ \"PrivateSubnetBTag1Condition\", {\n              \"Key\" : {\n                \"Fn::Select\" : [ 0, {\n                  \"Fn::Split\" : [ \"=\", {\n                    \"Ref\" : \"PrivateSubnetBTag1\"\n                  } ]\n                } ]\n              },\n              \"Value\" : {\n                \"Fn::Select\" : [ 1, {\n                  \"Fn::Split\" : [ \"=\", {\n                    \"Ref\" : \"PrivateSubnetBTag1\"\n                  } ]\n                } ]\n              }\n            }, {\n              \"Ref\" : \"AWS::NoValue\"\n            } ]\n          }, {\n            \"Fn::If\" : [ \"PrivateSubnetBTag2Condition\", {\n              \"Key\" : {\n                \"Fn::Select\" : [ 0, {\n                  \"Fn::Split\" : [ \"=\", {\n                    \"Ref\" : \"PrivateSubnetBTag2\"\n                  } ]\n                } ]\n              },\n              \"Value\" : {\n                \"Fn::Select\" : [ 1, {\n                  \"Fn::Split\" : [ \"=\", {\n                    \"Ref\" : \"PrivateSubnetBTag2\"\n                  } ]\n                } ]\n              }\n            }, {\n              \"Ref\" : \"AWS::NoValue\"\n            } ]\n          }, {\n            \"Fn::If\" : [ \"PrivateSubnetBTag3Condition\", {\n              \"Key\" : {\n                \"Fn::Select\" : [ 0, {\n                  \"Fn::Split\" : [ \"=\", {\n                    \"Ref\" : \"PrivateSubnetBTag3\"\n                  } ]\n                } ]\n              },\n              \"Value\" : {\n                \"Fn::Select\" : [ 1, {\n                  \"Fn::Split\" : [ \"=\", {\n                    \"Ref\" : \"PrivateSubnetBTag3\"\n                  } ]\n                } ]\n              }\n            }, {\n              \"Ref\" : \"AWS::NoValue\"\n            } ]\n          } ]\n        }\n      },\n      \"PrivateSubnet4A\" : {\n        \"Condition\" : \"PrivateSubnets&4AZCondition\",\n        \"Type\" : \"AWS::EC2::Subnet\",\n        \"Properties\" : {\n          \"VpcId\" : {\n            \"Ref\" : \"VPC\"\n          },\n          \"CidrBlock\" : {\n            \"Ref\" : \"PrivateSubnet4ACIDR\"\n          },\n          \"AvailabilityZone\" : {\n            \"Fn::Select\" : [ 3, {\n              \"Ref\" : \"AvailabilityZones\"\n            } ]\n          },\n          \"Tags\" : [ {\n            \"Key\" : \"Name\",\n            \"Value\" : \"Private subnet 4A\"\n          }, {\n            \"Fn::If\" : [ \"PrivateSubnetATag1Condition\", {\n              \"Key\" : {\n                \"Fn::Select\" : [ 0, {\n                  \"Fn::Split\" : [ \"=\", {\n                    \"Ref\" : \"PrivateSubnetATag1\"\n                  } ]\n                } ]\n              },\n              \"Value\" : {\n                \"Fn::Select\" : [ 1, {\n                  \"Fn::Split\" : [ \"=\", {\n                    \"Ref\" : \"PrivateSubnetATag1\"\n                  } ]\n                } ]\n              }\n            }, {\n              \"Ref\" : \"AWS::NoValue\"\n            } ]\n          }, {\n            \"Fn::If\" : [ \"PrivateSubnetATag2Condition\", {\n              \"Key\" : {\n                \"Fn::Select\" : [ 0, {\n                  \"Fn::Split\" : [ \"=\", {\n                    \"Ref\" : \"PrivateSubnetATag2\"\n                  } ]\n                } ]\n              },\n              \"Value\" : {\n                \"Fn::Select\" : [ 1, {\n                  \"Fn::Split\" : [ \"=\", {\n                    \"Ref\" : \"PrivateSubnetATag2\"\n                  } ]\n                } ]\n              }\n            }, {\n              \"Ref\" : \"AWS::NoValue\"\n            } ]\n          }, {\n            \"Fn::If\" : [ \"PrivateSubnetATag3Condition\", {\n              \"Key\" : {\n                \"Fn::Select\" : [ 0, {\n                  \"Fn::Split\" : [ \"=\", {\n                    \"Ref\" : \"PrivateSubnetATag3\"\n                  } ]\n                } ]\n              },\n              \"Value\" : {\n                \"Fn::Select\" : [ 1, {\n                  \"Fn::Split\" : [ \"=\", {\n                    \"Ref\" : \"PrivateSubnetATag3\"\n                  } ]\n                } ]\n              }\n            }, {\n              \"Ref\" : \"AWS::NoValue\"\n            } ]\n          } ]\n        }\n      },\n      \"PrivateSubnet4B\" : {\n        \"Condition\" : \"AdditionalPrivateSubnets&4AZCondition\",\n        \"Type\" : \"AWS::EC2::Subnet\",\n        \"Properties\" : {\n          \"VpcId\" : {\n            \"Ref\" : \"VPC\"\n          },\n          \"CidrBlock\" : {\n            \"Ref\" : \"PrivateSubnet4BCIDR\"\n          },\n          \"AvailabilityZone\" : {\n            \"Fn::Select\" : [ 3, {\n              \"Ref\" : \"AvailabilityZones\"\n            } ]\n          },\n          \"Tags\" : [ {\n            \"Key\" : \"Name\",\n            \"Value\" : \"Private subnet 4B\"\n          }, {\n            \"Fn::If\" : [ \"PrivateSubnetBTag1Condition\", {\n              \"Key\" : {\n                \"Fn::Select\" : [ 0, {\n                  \"Fn::Split\" : [ \"=\", {\n                    \"Ref\" : \"PrivateSubnetBTag1\"\n                  } ]\n                } ]\n              },\n              \"Value\" : {\n                \"Fn::Select\" : [ 1, {\n                  \"Fn::Split\" : [ \"=\", {\n                    \"Ref\" : \"PrivateSubnetBTag1\"\n                  } ]\n                } ]\n              }\n            }, {\n              \"Ref\" : \"AWS::NoValue\"\n            } ]\n          }, {\n            \"Fn::If\" : [ \"PrivateSubnetBTag2Condition\", {\n              \"Key\" : {\n                \"Fn::Select\" : [ 0, {\n                  \"Fn::Split\" : [ \"=\", {\n                    \"Ref\" : \"PrivateSubnetBTag2\"\n                  } ]\n                } ]\n              },\n              \"Value\" : {\n                \"Fn::Select\" : [ 1, {\n                  \"Fn::Split\" : [ \"=\", {\n                    \"Ref\" : \"PrivateSubnetBTag2\"\n                  } ]\n                } ]\n              }\n            }, {\n              \"Ref\" : \"AWS::NoValue\"\n            } ]\n          }, {\n            \"Fn::If\" : [ \"PrivateSubnetBTag3Condition\", {\n              \"Key\" : {\n                \"Fn::Select\" : [ 0, {\n                  \"Fn::Split\" : [ \"=\", {\n                    \"Ref\" : \"PrivateSubnetBTag3\"\n                  } ]\n                } ]\n              },\n              \"Value\" : {\n                \"Fn::Select\" : [ 1, {\n                  \"Fn::Split\" : [ \"=\", {\n                    \"Ref\" : \"PrivateSubnetBTag3\"\n                  } ]\n                } ]\n              }\n            }, {\n              \"Ref\" : \"AWS::NoValue\"\n            } ]\n          } ]\n        }\n      },\n      \"PublicSubnet1\" : {\n        \"Condition\" : \"PublicSubnetsCondition\",\n        \"Type\" : \"AWS::EC2::Subnet\",\n        \"Metadata\" : {\n          \"cfn_nag\" : {\n            \"rules_to_suppress\" : [ {\n              \"id\" : \"W33\",\n              \"reason\" : \"(W33) EC2 Subnet should not have MapPublicIpOnLaunch set to true.\"\n            } ]\n          }\n        },\n        \"Properties\" : {\n          \"VpcId\" : {\n            \"Ref\" : \"VPC\"\n          },\n          \"CidrBlock\" : {\n            \"Ref\" : \"PublicSubnet1CIDR\"\n          },\n          \"AvailabilityZone\" : {\n            \"Fn::Select\" : [ 0, {\n              \"Ref\" : \"AvailabilityZones\"\n            } ]\n          },\n          \"Tags\" : [ {\n            \"Key\" : \"Name\",\n            \"Value\" : \"Public subnet 1\"\n          }, {\n            \"Fn::If\" : [ \"PublicSubnetTag1Condition\", {\n              \"Key\" : {\n                \"Fn::Select\" : [ 0, {\n                  \"Fn::Split\" : [ \"=\", {\n                    \"Ref\" : \"PublicSubnetTag1\"\n                  } ]\n                } ]\n              },\n              \"Value\" : {\n                \"Fn::Select\" : [ 1, {\n                  \"Fn::Split\" : [ \"=\", {\n                    \"Ref\" : \"PublicSubnetTag1\"\n                  } ]\n                } ]\n              }\n            }, {\n              \"Ref\" : \"AWS::NoValue\"\n            } ]\n          }, {\n            \"Fn::If\" : [ \"PublicSubnetTag2Condition\", {\n              \"Key\" : {\n                \"Fn::Select\" : [ 0, {\n                  \"Fn::Split\" : [ \"=\", {\n                    \"Ref\" : \"PublicSubnetTag2\"\n                  } ]\n                } ]\n              },\n              \"Value\" : {\n                \"Fn::Select\" : [ 1, {\n                  \"Fn::Split\" : [ \"=\", {\n                    \"Ref\" : \"PublicSubnetTag2\"\n                  } ]\n                } ]\n              }\n            }, {\n              \"Ref\" : \"AWS::NoValue\"\n            } ]\n          }, {\n            \"Fn::If\" : [ \"PublicSubnetTag3Condition\", {\n              \"Key\" : {\n                \"Fn::Select\" : [ 0, {\n                  \"Fn::Split\" : [ \"=\", {\n                    \"Ref\" : \"PublicSubnetTag3\"\n                  } ]\n                } ]\n              },\n              \"Value\" : {\n                \"Fn::Select\" : [ 1, {\n                  \"Fn::Split\" : [ \"=\", {\n                    \"Ref\" : \"PublicSubnetTag3\"\n                  } ]\n                } ]\n              }\n            }, {\n              \"Ref\" : \"AWS::NoValue\"\n            } ]\n          } ],\n          \"MapPublicIpOnLaunch\" : true\n        }\n      },\n      \"PublicSubnet2\" : {\n        \"Condition\" : \"PublicSubnetsCondition\",\n        \"Type\" : \"AWS::EC2::Subnet\",\n        \"Metadata\" : {\n          \"cfn_nag\" : {\n            \"rules_to_suppress\" : [ {\n              \"id\" : \"W33\",\n              \"reason\" : \"(W33) EC2 Subnet should not have MapPublicIpOnLaunch set to true.\"\n            } ]\n          }\n        },\n        \"Properties\" : {\n          \"VpcId\" : {\n            \"Ref\" : \"VPC\"\n          },\n          \"CidrBlock\" : {\n            \"Ref\" : \"PublicSubnet2CIDR\"\n          },\n          \"AvailabilityZone\" : {\n            \"Fn::Select\" : [ 1, {\n              \"Ref\" : \"AvailabilityZones\"\n            } ]\n          },\n          \"Tags\" : [ {\n            \"Key\" : \"Name\",\n            \"Value\" : \"Public subnet 2\"\n          }, {\n            \"Fn::If\" : [ \"PublicSubnetTag1Condition\", {\n              \"Key\" : {\n                \"Fn::Select\" : [ 0, {\n                  \"Fn::Split\" : [ \"=\", {\n                    \"Ref\" : \"PublicSubnetTag1\"\n                  } ]\n                } ]\n              },\n              \"Value\" : {\n                \"Fn::Select\" : [ 1, {\n                  \"Fn::Split\" : [ \"=\", {\n                    \"Ref\" : \"PublicSubnetTag1\"\n                  } ]\n                } ]\n              }\n            }, {\n              \"Ref\" : \"AWS::NoValue\"\n            } ]\n          }, {\n            \"Fn::If\" : [ \"PublicSubnetTag2Condition\", {\n              \"Key\" : {\n                \"Fn::Select\" : [ 0, {\n                  \"Fn::Split\" : [ \"=\", {\n                    \"Ref\" : \"PublicSubnetTag2\"\n                  } ]\n                } ]\n              },\n              \"Value\" : {\n                \"Fn::Select\" : [ 1, {\n                  \"Fn::Split\" : [ \"=\", {\n                    \"Ref\" : \"PublicSubnetTag2\"\n                  } ]\n                } ]\n              }\n            }, {\n              \"Ref\" : \"AWS::NoValue\"\n            } ]\n          }, {\n            \"Fn::If\" : [ \"PublicSubnetTag3Condition\", {\n              \"Key\" : {\n                \"Fn::Select\" : [ 0, {\n                  \"Fn::Split\" : [ \"=\", {\n                    \"Ref\" : \"PublicSubnetTag3\"\n                  } ]\n                } ]\n              },\n              \"Value\" : {\n                \"Fn::Select\" : [ 1, {\n                  \"Fn::Split\" : [ \"=\", {\n                    \"Ref\" : \"PublicSubnetTag3\"\n                  } ]\n                } ]\n              }\n            }, {\n              \"Ref\" : \"AWS::NoValue\"\n            } ]\n          } ],\n          \"MapPublicIpOnLaunch\" : true\n        }\n      },\n      \"PublicSubnet3\" : {\n        \"Condition\" : \"PublicSubnets&3AZCondition\",\n        \"Type\" : \"AWS::EC2::Subnet\",\n        \"Metadata\" : {\n          \"cfn_nag\" : {\n            \"rules_to_suppress\" : [ {\n              \"id\" : \"W33\",\n              \"reason\" : \"(W33) EC2 Subnet should not have MapPublicIpOnLaunch set to true.\"\n            } ]\n          }\n        },\n        \"Properties\" : {\n          \"VpcId\" : {\n            \"Ref\" : \"VPC\"\n          },\n          \"CidrBlock\" : {\n            \"Ref\" : \"PublicSubnet3CIDR\"\n          },\n          \"AvailabilityZone\" : {\n            \"Fn::Select\" : [ 2, {\n              \"Ref\" : \"AvailabilityZones\"\n            } ]\n          },\n          \"Tags\" : [ {\n            \"Key\" : \"Name\",\n            \"Value\" : \"Public subnet 3\"\n          }, {\n            \"Fn::If\" : [ \"PublicSubnetTag1Condition\", {\n              \"Key\" : {\n                \"Fn::Select\" : [ 0, {\n                  \"Fn::Split\" : [ \"=\", {\n                    \"Ref\" : \"PublicSubnetTag1\"\n                  } ]\n                } ]\n              },\n              \"Value\" : {\n                \"Fn::Select\" : [ 1, {\n                  \"Fn::Split\" : [ \"=\", {\n                    \"Ref\" : \"PublicSubnetTag1\"\n                  } ]\n                } ]\n              }\n            }, {\n              \"Ref\" : \"AWS::NoValue\"\n            } ]\n          }, {\n            \"Fn::If\" : [ \"PublicSubnetTag2Condition\", {\n              \"Key\" : {\n                \"Fn::Select\" : [ 0, {\n                  \"Fn::Split\" : [ \"=\", {\n                    \"Ref\" : \"PublicSubnetTag2\"\n                  } ]\n                } ]\n              },\n              \"Value\" : {\n                \"Fn::Select\" : [ 1, {\n                  \"Fn::Split\" : [ \"=\", {\n                    \"Ref\" : \"PublicSubnetTag2\"\n                  } ]\n                } ]\n              }\n            }, {\n              \"Ref\" : \"AWS::NoValue\"\n            } ]\n          }, {\n            \"Fn::If\" : [ \"PublicSubnetTag3Condition\", {\n              \"Key\" : {\n                \"Fn::Select\" : [ 0, {\n                  \"Fn::Split\" : [ \"=\", {\n                    \"Ref\" : \"PublicSubnetTag3\"\n                  } ]\n                } ]\n              },\n              \"Value\" : {\n                \"Fn::Select\" : [ 1, {\n                  \"Fn::Split\" : [ \"=\", {\n                    \"Ref\" : \"PublicSubnetTag3\"\n                  } ]\n                } ]\n              }\n            }, {\n              \"Ref\" : \"AWS::NoValue\"\n            } ]\n          } ],\n          \"MapPublicIpOnLaunch\" : true\n        }\n      },\n      \"PublicSubnet4\" : {\n        \"Condition\" : \"PublicSubnets&4AZCondition\",\n        \"Type\" : \"AWS::EC2::Subnet\",\n        \"Metadata\" : {\n          \"cfn_nag\" : {\n            \"rules_to_suppress\" : [ {\n              \"id\" : \"W33\",\n              \"reason\" : \"(W33) EC2 Subnet should not have MapPublicIpOnLaunch set to true.\"\n            } ]\n          }\n        },\n        \"Properties\" : {\n          \"VpcId\" : {\n            \"Ref\" : \"VPC\"\n          },\n          \"CidrBlock\" : {\n            \"Ref\" : \"PublicSubnet4CIDR\"\n          },\n          \"AvailabilityZone\" : {\n            \"Fn::Select\" : [ 3, {\n              \"Ref\" : \"AvailabilityZones\"\n            } ]\n          },\n          \"Tags\" : [ {\n            \"Key\" : \"Name\",\n            \"Value\" : \"Public subnet 4\"\n          }, {\n            \"Fn::If\" : [ \"PublicSubnetTag1Condition\", {\n              \"Key\" : {\n                \"Fn::Select\" : [ 0, {\n                  \"Fn::Split\" : [ \"=\", {\n                    \"Ref\" : \"PublicSubnetTag1\"\n                  } ]\n                } ]\n              },\n              \"Value\" : {\n                \"Fn::Select\" : [ 1, {\n                  \"Fn::Split\" : [ \"=\", {\n                    \"Ref\" : \"PublicSubnetTag1\"\n                  } ]\n                } ]\n              }\n            }, {\n              \"Ref\" : \"AWS::NoValue\"\n            } ]\n          }, {\n            \"Fn::If\" : [ \"PublicSubnetTag2Condition\", {\n              \"Key\" : {\n                \"Fn::Select\" : [ 0, {\n                  \"Fn::Split\" : [ \"=\", {\n                    \"Ref\" : \"PublicSubnetTag2\"\n                  } ]\n                } ]\n              },\n              \"Value\" : {\n                \"Fn::Select\" : [ 1, {\n                  \"Fn::Split\" : [ \"=\", {\n                    \"Ref\" : \"PublicSubnetTag2\"\n                  } ]\n                } ]\n              }\n            }, {\n              \"Ref\" : \"AWS::NoValue\"\n            } ]\n          }, {\n            \"Fn::If\" : [ \"PublicSubnetTag3Condition\", {\n              \"Key\" : {\n                \"Fn::Select\" : [ 0, {\n                  \"Fn::Split\" : [ \"=\", {\n                    \"Ref\" : \"PublicSubnetTag3\"\n                  } ]\n                } ]\n              },\n              \"Value\" : {\n                \"Fn::Select\" : [ 1, {\n                  \"Fn::Split\" : [ \"=\", {\n                    \"Ref\" : \"PublicSubnetTag3\"\n                  } ]\n                } ]\n              }\n            }, {\n              \"Ref\" : \"AWS::NoValue\"\n            } ]\n          } ],\n          \"MapPublicIpOnLaunch\" : true\n        }\n      },\n      \"PrivateSubnet1ARouteTable\" : {\n        \"Condition\" : \"PrivateSubnetsCondition\",\n        \"Type\" : \"AWS::EC2::RouteTable\",\n        \"Properties\" : {\n          \"VpcId\" : {\n            \"Ref\" : \"VPC\"\n          },\n          \"Tags\" : [ {\n            \"Key\" : \"Name\",\n            \"Value\" : \"Private subnet 1A\"\n          }, {\n            \"Key\" : \"Network\",\n            \"Value\" : \"Private\"\n          } ]\n        }\n      },\n      \"PrivateSubnet1ARoute\" : {\n        \"Condition\" : \"NATGateways&PublicSubnets&PrivateSubnetsCondition\",\n        \"Type\" : \"AWS::EC2::Route\",\n        \"Properties\" : {\n          \"RouteTableId\" : {\n            \"Ref\" : \"PrivateSubnet1ARouteTable\"\n          },\n          \"DestinationCidrBlock\" : \"0.0.0.0/0\",\n          \"NatGatewayId\" : {\n            \"Ref\" : \"NATGateway1\"\n          }\n        }\n      },\n      \"PrivateSubnet1ARouteTableAssociation\" : {\n        \"Condition\" : \"PrivateSubnetsCondition\",\n        \"Type\" : \"AWS::EC2::SubnetRouteTableAssociation\",\n        \"Properties\" : {\n          \"SubnetId\" : {\n            \"Ref\" : \"PrivateSubnet1A\"\n          },\n          \"RouteTableId\" : {\n            \"Ref\" : \"PrivateSubnet1ARouteTable\"\n          }\n        }\n      },\n      \"PrivateSubnet2ARouteTable\" : {\n        \"Condition\" : \"PrivateSubnetsCondition\",\n        \"Type\" : \"AWS::EC2::RouteTable\",\n        \"Properties\" : {\n          \"VpcId\" : {\n            \"Ref\" : \"VPC\"\n          },\n          \"Tags\" : [ {\n            \"Key\" : \"Name\",\n            \"Value\" : \"Private subnet 2A\"\n          }, {\n            \"Key\" : \"Network\",\n            \"Value\" : \"Private\"\n          } ]\n        }\n      },\n      \"PrivateSubnet2ARoute\" : {\n        \"Condition\" : \"NATGateways&PublicSubnets&PrivateSubnetsCondition\",\n        \"Type\" : \"AWS::EC2::Route\",\n        \"Properties\" : {\n          \"RouteTableId\" : {\n            \"Ref\" : \"PrivateSubnet2ARouteTable\"\n          },\n          \"DestinationCidrBlock\" : \"0.0.0.0/0\",\n          \"NatGatewayId\" : {\n            \"Ref\" : \"NATGateway2\"\n          }\n        }\n      },\n      \"PrivateSubnet2ARouteTableAssociation\" : {\n        \"Condition\" : \"PrivateSubnetsCondition\",\n        \"Type\" : \"AWS::EC2::SubnetRouteTableAssociation\",\n        \"Properties\" : {\n          \"SubnetId\" : {\n            \"Ref\" : \"PrivateSubnet2A\"\n          },\n          \"RouteTableId\" : {\n            \"Ref\" : \"PrivateSubnet2ARouteTable\"\n          }\n        }\n      },\n      \"PrivateSubnet3ARouteTable\" : {\n        \"Condition\" : \"PrivateSubnets&3AZCondition\",\n        \"Type\" : \"AWS::EC2::RouteTable\",\n        \"Properties\" : {\n          \"VpcId\" : {\n            \"Ref\" : \"VPC\"\n          },\n          \"Tags\" : [ {\n            \"Key\" : \"Name\",\n            \"Value\" : \"Private subnet 3A\"\n          }, {\n            \"Key\" : \"Network\",\n            \"Value\" : \"Private\"\n          } ]\n        }\n      },\n      \"PrivateSubnet3ARoute\" : {\n        \"Condition\" : \"NATGateways&PublicSubnets&PrivateSubnets&3AZCondition\",\n        \"Type\" : \"AWS::EC2::Route\",\n        \"Properties\" : {\n          \"RouteTableId\" : {\n            \"Ref\" : \"PrivateSubnet3ARouteTable\"\n          },\n          \"DestinationCidrBlock\" : \"0.0.0.0/0\",\n          \"NatGatewayId\" : {\n            \"Ref\" : \"NATGateway3\"\n          }\n        }\n      },\n      \"PrivateSubnet3ARouteTableAssociation\" : {\n        \"Condition\" : \"PrivateSubnets&3AZCondition\",\n        \"Type\" : \"AWS::EC2::SubnetRouteTableAssociation\",\n        \"Properties\" : {\n          \"SubnetId\" : {\n            \"Ref\" : \"PrivateSubnet3A\"\n          },\n          \"RouteTableId\" : {\n            \"Ref\" : \"PrivateSubnet3ARouteTable\"\n          }\n        }\n      },\n      \"PrivateSubnet4ARouteTable\" : {\n        \"Condition\" : \"PrivateSubnets&4AZCondition\",\n        \"Type\" : \"AWS::EC2::RouteTable\",\n        \"Properties\" : {\n          \"VpcId\" : {\n            \"Ref\" : \"VPC\"\n          },\n          \"Tags\" : [ {\n            \"Key\" : \"Name\",\n            \"Value\" : \"Private subnet 4A\"\n          }, {\n            \"Key\" : \"Network\",\n            \"Value\" : \"Private\"\n          } ]\n        }\n      },\n      \"PrivateSubnet4ARoute\" : {\n        \"Condition\" : \"NATGateways&PublicSubnets&PrivateSubnets&4AZCondition\",\n        \"Type\" : \"AWS::EC2::Route\",\n        \"Properties\" : {\n          \"RouteTableId\" : {\n            \"Ref\" : \"PrivateSubnet4ARouteTable\"\n          },\n          \"DestinationCidrBlock\" : \"0.0.0.0/0\",\n          \"NatGatewayId\" : {\n            \"Ref\" : \"NATGateway4\"\n          }\n        }\n      },\n      \"PrivateSubnet4ARouteTableAssociation\" : {\n        \"Condition\" : \"PrivateSubnets&4AZCondition\",\n        \"Type\" : \"AWS::EC2::SubnetRouteTableAssociation\",\n        \"Properties\" : {\n          \"SubnetId\" : {\n            \"Ref\" : \"PrivateSubnet4A\"\n          },\n          \"RouteTableId\" : {\n            \"Ref\" : \"PrivateSubnet4ARouteTable\"\n          }\n        }\n      },\n      \"PrivateSubnet1BRouteTable\" : {\n        \"Condition\" : \"AdditionalPrivateSubnetsCondition\",\n        \"Type\" : \"AWS::EC2::RouteTable\",\n        \"Properties\" : {\n          \"VpcId\" : {\n            \"Ref\" : \"VPC\"\n          },\n          \"Tags\" : [ {\n            \"Key\" : \"Name\",\n            \"Value\" : \"Private subnet 1B\"\n          }, {\n            \"Key\" : \"Network\",\n            \"Value\" : \"Private\"\n          } ]\n        }\n      },\n      \"PrivateSubnet1BRoute\" : {\n        \"Condition\" : \"AdditionalPrivateSubnets&PublicSubnets&NatGatewaysCondition\",\n        \"Type\" : \"AWS::EC2::Route\",\n        \"Properties\" : {\n          \"RouteTableId\" : {\n            \"Ref\" : \"PrivateSubnet1BRouteTable\"\n          },\n          \"DestinationCidrBlock\" : \"0.0.0.0/0\",\n          \"NatGatewayId\" : {\n            \"Ref\" : \"NATGateway1\"\n          }\n        }\n      },\n      \"PrivateSubnet1BRouteTableAssociation\" : {\n        \"Condition\" : \"AdditionalPrivateSubnetsCondition\",\n        \"Type\" : \"AWS::EC2::SubnetRouteTableAssociation\",\n        \"Properties\" : {\n          \"SubnetId\" : {\n            \"Ref\" : \"PrivateSubnet1B\"\n          },\n          \"RouteTableId\" : {\n            \"Ref\" : \"PrivateSubnet1BRouteTable\"\n          }\n        }\n      },\n      \"PrivateSubnet1BNetworkAcl\" : {\n        \"Condition\" : \"AdditionalPrivateSubnetsCondition\",\n        \"Type\" : \"AWS::EC2::NetworkAcl\",\n        \"Properties\" : {\n          \"VpcId\" : {\n            \"Ref\" : \"VPC\"\n          },\n          \"Tags\" : [ {\n            \"Key\" : \"Name\",\n            \"Value\" : \"NACL Protected subnet 1\"\n          }, {\n            \"Key\" : \"Network\",\n            \"Value\" : \"NACL Protected\"\n          } ]\n        }\n      },\n      \"PrivateSubnet1BNetworkAclEntryInbound\" : {\n        \"Condition\" : \"AdditionalPrivateSubnetsCondition\",\n        \"Type\" : \"AWS::EC2::NetworkAclEntry\",\n        \"Metadata\" : {\n          \"cfn_nag\" : {\n            \"rules_to_suppress\" : [ {\n              \"id\" : \"W66\",\n              \"reason\" : \"(W66) To avoid opening all ports for allow rules, EC2 NetworkACL entry protocol should be either 6 for TCP, 17 for UDP, 1 for ICMP, or 58 for ICMPv6 (which must include an IPv6 CIDR block, ICMP type, and code).\"\n            } ]\n          }\n        },\n        \"Properties\" : {\n          \"CidrBlock\" : \"0.0.0.0/0\",\n          \"Egress\" : false,\n          \"NetworkAclId\" : {\n            \"Ref\" : \"PrivateSubnet1BNetworkAcl\"\n          },\n          \"Protocol\" : -1,\n          \"RuleAction\" : \"allow\",\n          \"RuleNumber\" : 100\n        }\n      },\n      \"PrivateSubnet1BNetworkAclEntryOutbound\" : {\n        \"Condition\" : \"AdditionalPrivateSubnetsCondition\",\n        \"Type\" : \"AWS::EC2::NetworkAclEntry\",\n        \"Metadata\" : {\n          \"cfn_nag\" : {\n            \"rules_to_suppress\" : [ {\n              \"id\" : \"W66\",\n              \"reason\" : \"(W66) To avoid opening all ports for allow rules, EC2 NetworkACL entry protocol should be either 6 for TCP, 17 for UDP, 1 for ICMP, or 58 for ICMPv6 (which must include an IPv6 CIDR block, ICMP type, and code).\"\n            } ]\n          }\n        },\n        \"Properties\" : {\n          \"CidrBlock\" : \"0.0.0.0/0\",\n          \"Egress\" : true,\n          \"NetworkAclId\" : {\n            \"Ref\" : \"PrivateSubnet1BNetworkAcl\"\n          },\n          \"Protocol\" : -1,\n          \"RuleAction\" : \"allow\",\n          \"RuleNumber\" : 100\n        }\n      },\n      \"PrivateSubnet1BNetworkAclAssociation\" : {\n        \"Condition\" : \"AdditionalPrivateSubnetsCondition\",\n        \"Type\" : \"AWS::EC2::SubnetNetworkAclAssociation\",\n        \"Properties\" : {\n          \"SubnetId\" : {\n            \"Ref\" : \"PrivateSubnet1B\"\n          },\n          \"NetworkAclId\" : {\n            \"Ref\" : \"PrivateSubnet1BNetworkAcl\"\n          }\n        }\n      },\n      \"PrivateSubnet2BRouteTable\" : {\n        \"Condition\" : \"AdditionalPrivateSubnetsCondition\",\n        \"Type\" : \"AWS::EC2::RouteTable\",\n        \"Properties\" : {\n          \"VpcId\" : {\n            \"Ref\" : \"VPC\"\n          },\n          \"Tags\" : [ {\n            \"Key\" : \"Name\",\n            \"Value\" : \"Private subnet 2B\"\n          }, {\n            \"Key\" : \"Network\",\n            \"Value\" : \"Private\"\n          } ]\n        }\n      },\n      \"PrivateSubnet2BRoute\" : {\n        \"Condition\" : \"AdditionalPrivateSubnets&PublicSubnets&NatGatewaysCondition\",\n        \"Type\" : \"AWS::EC2::Route\",\n        \"Properties\" : {\n          \"RouteTableId\" : {\n            \"Ref\" : \"PrivateSubnet2BRouteTable\"\n          },\n          \"DestinationCidrBlock\" : \"0.0.0.0/0\",\n          \"NatGatewayId\" : {\n            \"Ref\" : \"NATGateway2\"\n          }\n        }\n      },\n      \"PrivateSubnet2BRouteTableAssociation\" : {\n        \"Condition\" : \"AdditionalPrivateSubnetsCondition\",\n        \"Type\" : \"AWS::EC2::SubnetRouteTableAssociation\",\n        \"Properties\" : {\n          \"SubnetId\" : {\n            \"Ref\" : \"PrivateSubnet2B\"\n          },\n          \"RouteTableId\" : {\n            \"Ref\" : \"PrivateSubnet2BRouteTable\"\n          }\n        }\n      },\n      \"PrivateSubnet2BNetworkAcl\" : {\n        \"Condition\" : \"AdditionalPrivateSubnetsCondition\",\n        \"Type\" : \"AWS::EC2::NetworkAcl\",\n        \"Properties\" : {\n          \"VpcId\" : {\n            \"Ref\" : \"VPC\"\n          },\n          \"Tags\" : [ {\n            \"Key\" : \"Name\",\n            \"Value\" : \"NACL Protected subnet 2\"\n          }, {\n            \"Key\" : \"Network\",\n            \"Value\" : \"NACL Protected\"\n          } ]\n        }\n      },\n      \"PrivateSubnet2BNetworkAclEntryInbound\" : {\n        \"Condition\" : \"AdditionalPrivateSubnetsCondition\",\n        \"Type\" : \"AWS::EC2::NetworkAclEntry\",\n        \"Metadata\" : {\n          \"cfn_nag\" : {\n            \"rules_to_suppress\" : [ {\n              \"id\" : \"W66\",\n              \"reason\" : \"(W66) To avoid opening all ports for allow rules, EC2 NetworkACL entry protocol should be either 6 for TCP, 17 for UDP, 1 for ICMP, or 58 for ICMPv6 (which must include an IPv6 CIDR block, ICMP type, and code).\"\n            } ]\n          }\n        },\n        \"Properties\" : {\n          \"CidrBlock\" : \"0.0.0.0/0\",\n          \"Egress\" : false,\n          \"NetworkAclId\" : {\n            \"Ref\" : \"PrivateSubnet2BNetworkAcl\"\n          },\n          \"Protocol\" : -1,\n          \"RuleAction\" : \"allow\",\n          \"RuleNumber\" : 100\n        }\n      },\n      \"PrivateSubnet2BNetworkAclEntryOutbound\" : {\n        \"Condition\" : \"AdditionalPrivateSubnetsCondition\",\n        \"Type\" : \"AWS::EC2::NetworkAclEntry\",\n        \"Metadata\" : {\n          \"cfn_nag\" : {\n            \"rules_to_suppress\" : [ {\n              \"id\" : \"W66\",\n              \"reason\" : \"(W66) To avoid opening all ports for allow rules, EC2 NetworkACL entry protocol should be either 6 for TCP, 17 for UDP, 1 for ICMP, or 58 for ICMPv6 (which must include an IPv6 CIDR block, ICMP type, and code).\"\n            } ]\n          }\n        },\n        \"Properties\" : {\n          \"CidrBlock\" : \"0.0.0.0/0\",\n          \"Egress\" : true,\n          \"NetworkAclId\" : {\n            \"Ref\" : \"PrivateSubnet2BNetworkAcl\"\n          },\n          \"Protocol\" : -1,\n          \"RuleAction\" : \"allow\",\n          \"RuleNumber\" : 100\n        }\n      },\n      \"PrivateSubnet2BNetworkAclAssociation\" : {\n        \"Condition\" : \"AdditionalPrivateSubnetsCondition\",\n        \"Type\" : \"AWS::EC2::SubnetNetworkAclAssociation\",\n        \"Properties\" : {\n          \"SubnetId\" : {\n            \"Ref\" : \"PrivateSubnet2B\"\n          },\n          \"NetworkAclId\" : {\n            \"Ref\" : \"PrivateSubnet2BNetworkAcl\"\n          }\n        }\n      },\n      \"PrivateSubnet3BRouteTable\" : {\n        \"Condition\" : \"AdditionalPrivateSubnets&3AZCondition\",\n        \"Type\" : \"AWS::EC2::RouteTable\",\n        \"Properties\" : {\n          \"VpcId\" : {\n            \"Ref\" : \"VPC\"\n          },\n          \"Tags\" : [ {\n            \"Key\" : \"Name\",\n            \"Value\" : \"Private subnet 3B\"\n          }, {\n            \"Key\" : \"Network\",\n            \"Value\" : \"Private\"\n          } ]\n        }\n      },\n      \"PrivateSubnet3BRoute\" : {\n        \"Condition\" : \"AdditionalPrivateSubnets&PublicSubnets&NatGateways&3AZCondition\",\n        \"Type\" : \"AWS::EC2::Route\",\n        \"Properties\" : {\n          \"RouteTableId\" : {\n            \"Ref\" : \"PrivateSubnet3BRouteTable\"\n          },\n          \"DestinationCidrBlock\" : \"0.0.0.0/0\",\n          \"NatGatewayId\" : {\n            \"Ref\" : \"NATGateway3\"\n          }\n        }\n      },\n      \"PrivateSubnet3BRouteTableAssociation\" : {\n        \"Condition\" : \"AdditionalPrivateSubnets&3AZCondition\",\n        \"Type\" : \"AWS::EC2::SubnetRouteTableAssociation\",\n        \"Properties\" : {\n          \"SubnetId\" : {\n            \"Ref\" : \"PrivateSubnet3B\"\n          },\n          \"RouteTableId\" : {\n            \"Ref\" : \"PrivateSubnet3BRouteTable\"\n          }\n        }\n      },\n      \"PrivateSubnet3BNetworkAcl\" : {\n        \"Condition\" : \"AdditionalPrivateSubnets&3AZCondition\",\n        \"Type\" : \"AWS::EC2::NetworkAcl\",\n        \"Properties\" : {\n          \"VpcId\" : {\n            \"Ref\" : \"VPC\"\n          },\n          \"Tags\" : [ {\n            \"Key\" : \"Name\",\n            \"Value\" : \"NACL Protected subnet 3\"\n          }, {\n            \"Key\" : \"Network\",\n            \"Value\" : \"NACL Protected\"\n          } ]\n        }\n      },\n      \"PrivateSubnet3BNetworkAclEntryInbound\" : {\n        \"Condition\" : \"AdditionalPrivateSubnets&3AZCondition\",\n        \"Type\" : \"AWS::EC2::NetworkAclEntry\",\n        \"Metadata\" : {\n          \"cfn_nag\" : {\n            \"rules_to_suppress\" : [ {\n              \"id\" : \"W66\",\n              \"reason\" : \"(W66) To avoid opening all ports for allow rules, EC2 NetworkACL entry protocol should be either 6 for TCP, 17 for UDP, 1 for ICMP, or 58 for ICMPv6 (which must include an IPv6 CIDR block, ICMP type, and code).\"\n            } ]\n          }\n        },\n        \"Properties\" : {\n          \"CidrBlock\" : \"0.0.0.0/0\",\n          \"Egress\" : false,\n          \"NetworkAclId\" : {\n            \"Ref\" : \"PrivateSubnet3BNetworkAcl\"\n          },\n          \"Protocol\" : -1,\n          \"RuleAction\" : \"allow\",\n          \"RuleNumber\" : 100\n        }\n      },\n      \"PrivateSubnet3BNetworkAclEntryOutbound\" : {\n        \"Condition\" : \"AdditionalPrivateSubnets&3AZCondition\",\n        \"Type\" : \"AWS::EC2::NetworkAclEntry\",\n        \"Metadata\" : {\n          \"cfn_nag\" : {\n            \"rules_to_suppress\" : [ {\n              \"id\" : \"W66\",\n              \"reason\" : \"(W66) To avoid opening all ports for allow rules, EC2 NetworkACL entry protocol should be either 6 for TCP, 17 for UDP, 1 for ICMP, or 58 for ICMPv6 (which must include an IPv6 CIDR block, ICMP type, and code).\"\n            } ]\n          }\n        },\n        \"Properties\" : {\n          \"CidrBlock\" : \"0.0.0.0/0\",\n          \"Egress\" : true,\n          \"NetworkAclId\" : {\n            \"Ref\" : \"PrivateSubnet3BNetworkAcl\"\n          },\n          \"Protocol\" : -1,\n          \"RuleAction\" : \"allow\",\n          \"RuleNumber\" : 100\n        }\n      },\n      \"PrivateSubnet3BNetworkAclAssociation\" : {\n        \"Condition\" : \"AdditionalPrivateSubnets&3AZCondition\",\n        \"Type\" : \"AWS::EC2::SubnetNetworkAclAssociation\",\n        \"Properties\" : {\n          \"SubnetId\" : {\n            \"Ref\" : \"PrivateSubnet3B\"\n          },\n          \"NetworkAclId\" : {\n            \"Ref\" : \"PrivateSubnet3BNetworkAcl\"\n          }\n        }\n      },\n      \"PrivateSubnet4BRouteTable\" : {\n        \"Condition\" : \"AdditionalPrivateSubnets&4AZCondition\",\n        \"Type\" : \"AWS::EC2::RouteTable\",\n        \"Properties\" : {\n          \"VpcId\" : {\n            \"Ref\" : \"VPC\"\n          },\n          \"Tags\" : [ {\n            \"Key\" : \"Name\",\n            \"Value\" : \"Private subnet 4B\"\n          }, {\n            \"Key\" : \"Network\",\n            \"Value\" : \"Private\"\n          } ]\n        }\n      },\n      \"PrivateSubnet4BRoute\" : {\n        \"Condition\" : \"AdditionalPrivateSubnets&PublicSubnets&NatGateways&4AZCondition\",\n        \"Type\" : \"AWS::EC2::Route\",\n        \"Properties\" : {\n          \"RouteTableId\" : {\n            \"Ref\" : \"PrivateSubnet4BRouteTable\"\n          },\n          \"DestinationCidrBlock\" : \"0.0.0.0/0\",\n          \"NatGatewayId\" : {\n            \"Ref\" : \"NATGateway4\"\n          }\n        }\n      },\n      \"PrivateSubnet4BRouteTableAssociation\" : {\n        \"Condition\" : \"AdditionalPrivateSubnets&4AZCondition\",\n        \"Type\" : \"AWS::EC2::SubnetRouteTableAssociation\",\n        \"Properties\" : {\n          \"SubnetId\" : {\n            \"Ref\" : \"PrivateSubnet4B\"\n          },\n          \"RouteTableId\" : {\n            \"Ref\" : \"PrivateSubnet4BRouteTable\"\n          }\n        }\n      },\n      \"PrivateSubnet4BNetworkAcl\" : {\n        \"Condition\" : \"AdditionalPrivateSubnets&4AZCondition\",\n        \"Type\" : \"AWS::EC2::NetworkAcl\",\n        \"Properties\" : {\n          \"VpcId\" : {\n            \"Ref\" : \"VPC\"\n          },\n          \"Tags\" : [ {\n            \"Key\" : \"Name\",\n            \"Value\" : \"NACL Protected subnet 4\"\n          }, {\n            \"Key\" : \"Network\",\n            \"Value\" : \"NACL Protected\"\n          } ]\n        }\n      },\n      \"PrivateSubnet4BNetworkAclEntryInbound\" : {\n        \"Condition\" : \"AdditionalPrivateSubnets&4AZCondition\",\n        \"Type\" : \"AWS::EC2::NetworkAclEntry\",\n        \"Metadata\" : {\n          \"cfn_nag\" : {\n            \"rules_to_suppress\" : [ {\n              \"id\" : \"W66\",\n              \"reason\" : \"(W66) To avoid opening all ports for allow rules, EC2 NetworkACL entry protocol should be either 6 for TCP, 17 for UDP, 1 for ICMP, or 58 for ICMPv6 (which must include an IPv6 CIDR block, ICMP type, and code).\"\n            } ]\n          }\n        },\n        \"Properties\" : {\n          \"CidrBlock\" : \"0.0.0.0/0\",\n          \"Egress\" : false,\n          \"NetworkAclId\" : {\n            \"Ref\" : \"PrivateSubnet4BNetworkAcl\"\n          },\n          \"Protocol\" : -1,\n          \"RuleAction\" : \"allow\",\n          \"RuleNumber\" : 100\n        }\n      },\n      \"PrivateSubnet4BNetworkAclEntryOutbound\" : {\n        \"Condition\" : \"AdditionalPrivateSubnets&4AZCondition\",\n        \"Type\" : \"AWS::EC2::NetworkAclEntry\",\n        \"Metadata\" : {\n          \"cfn_nag\" : {\n            \"rules_to_suppress\" : [ {\n              \"id\" : \"W66\",\n              \"reason\" : \"(W66) To avoid opening all ports for allow rules, EC2 NetworkACL entry protocol should be either 6 for TCP, 17 for UDP, 1 for ICMP, or 58 for ICMPv6 (which must include an IPv6 CIDR block, ICMP type, and code).\"\n            } ]\n          }\n        },\n        \"Properties\" : {\n          \"CidrBlock\" : \"0.0.0.0/0\",\n          \"Egress\" : true,\n          \"NetworkAclId\" : {\n            \"Ref\" : \"PrivateSubnet4BNetworkAcl\"\n          },\n          \"Protocol\" : -1,\n          \"RuleAction\" : \"allow\",\n          \"RuleNumber\" : 100\n        }\n      },\n      \"PrivateSubnet4BNetworkAclAssociation\" : {\n        \"Condition\" : \"AdditionalPrivateSubnets&4AZCondition\",\n        \"Type\" : \"AWS::EC2::SubnetNetworkAclAssociation\",\n        \"Properties\" : {\n          \"SubnetId\" : {\n            \"Ref\" : \"PrivateSubnet4B\"\n          },\n          \"NetworkAclId\" : {\n            \"Ref\" : \"PrivateSubnet4BNetworkAcl\"\n          }\n        }\n      },\n      \"PublicSubnetRouteTable\" : {\n        \"Condition\" : \"PublicSubnetsCondition\",\n        \"Type\" : \"AWS::EC2::RouteTable\",\n        \"Properties\" : {\n          \"VpcId\" : {\n            \"Ref\" : \"VPC\"\n          },\n          \"Tags\" : [ {\n            \"Key\" : \"Name\",\n            \"Value\" : \"Public Subnets\"\n          }, {\n            \"Key\" : \"Network\",\n            \"Value\" : \"Public\"\n          } ]\n        }\n      },\n      \"PublicSubnetRoute\" : {\n        \"Condition\" : \"PublicSubnetsCondition\",\n        \"DependsOn\" : \"VPCGatewayAttachment\",\n        \"Type\" : \"AWS::EC2::Route\",\n        \"Properties\" : {\n          \"RouteTableId\" : {\n            \"Ref\" : \"PublicSubnetRouteTable\"\n          },\n          \"DestinationCidrBlock\" : \"0.0.0.0/0\",\n          \"GatewayId\" : {\n            \"Ref\" : \"InternetGateway\"\n          }\n        }\n      },\n      \"PublicSubnet1RouteTableAssociation\" : {\n        \"Condition\" : \"PublicSubnetsCondition\",\n        \"Type\" : \"AWS::EC2::SubnetRouteTableAssociation\",\n        \"Properties\" : {\n          \"SubnetId\" : {\n            \"Ref\" : \"PublicSubnet1\"\n          },\n          \"RouteTableId\" : {\n            \"Ref\" : \"PublicSubnetRouteTable\"\n          }\n        }\n      },\n      \"PublicSubnet2RouteTableAssociation\" : {\n        \"Condition\" : \"PublicSubnetsCondition\",\n        \"Type\" : \"AWS::EC2::SubnetRouteTableAssociation\",\n        \"Properties\" : {\n          \"SubnetId\" : {\n            \"Ref\" : \"PublicSubnet2\"\n          },\n          \"RouteTableId\" : {\n            \"Ref\" : \"PublicSubnetRouteTable\"\n          }\n        }\n      },\n      \"PublicSubnet3RouteTableAssociation\" : {\n        \"Condition\" : \"PublicSubnets&3AZCondition\",\n        \"Type\" : \"AWS::EC2::SubnetRouteTableAssociation\",\n        \"Properties\" : {\n          \"SubnetId\" : {\n            \"Ref\" : \"PublicSubnet3\"\n          },\n          \"RouteTableId\" : {\n            \"Ref\" : \"PublicSubnetRouteTable\"\n          }\n        }\n      },\n      \"PublicSubnet4RouteTableAssociation\" : {\n        \"Condition\" : \"PublicSubnets&4AZCondition\",\n        \"Type\" : \"AWS::EC2::SubnetRouteTableAssociation\",\n        \"Properties\" : {\n          \"SubnetId\" : {\n            \"Ref\" : \"PublicSubnet4\"\n          },\n          \"RouteTableId\" : {\n            \"Ref\" : \"PublicSubnetRouteTable\"\n          }\n        }\n      },\n      \"NAT1EIP\" : {\n        \"Condition\" : \"NATGateways&PublicSubnets&PrivateSubnetsCondition\",\n        \"DependsOn\" : \"VPCGatewayAttachment\",\n        \"Type\" : \"AWS::EC2::EIP\",\n        \"Properties\" : {\n          \"Domain\" : \"vpc\",\n          \"Tags\" : [ {\n            \"Key\" : \"Name\",\n            \"Value\" : \"NAT1EIP\"\n          } ]\n        }\n      },\n      \"NAT2EIP\" : {\n        \"Condition\" : \"NATGateways&PublicSubnets&PrivateSubnetsCondition\",\n        \"DependsOn\" : \"VPCGatewayAttachment\",\n        \"Type\" : \"AWS::EC2::EIP\",\n        \"Properties\" : {\n          \"Domain\" : \"vpc\",\n          \"Tags\" : [ {\n            \"Key\" : \"Name\",\n            \"Value\" : \"NAT2EIP\"\n          } ]\n        }\n      },\n      \"NAT3EIP\" : {\n        \"Condition\" : \"NATGateways&PublicSubnets&PrivateSubnets&3AZCondition\",\n        \"Type\" : \"AWS::EC2::EIP\",\n        \"Properties\" : {\n          \"Domain\" : \"vpc\",\n          \"Tags\" : [ {\n            \"Key\" : \"Name\",\n            \"Value\" : \"NAT3EIP\"\n          } ]\n        }\n      },\n      \"NAT4EIP\" : {\n        \"Condition\" : \"NATGateways&PublicSubnets&PrivateSubnets&4AZCondition\",\n        \"DependsOn\" : \"VPCGatewayAttachment\",\n        \"Type\" : \"AWS::EC2::EIP\",\n        \"Properties\" : {\n          \"Domain\" : \"vpc\",\n          \"Tags\" : [ {\n            \"Key\" : \"Name\",\n            \"Value\" : \"NAT4EIP\"\n          } ]\n        }\n      },\n      \"NATGateway1\" : {\n        \"Condition\" : \"NATGateways&PublicSubnets&PrivateSubnetsCondition\",\n        \"DependsOn\" : \"VPCGatewayAttachment\",\n        \"Type\" : \"AWS::EC2::NatGateway\",\n        \"Properties\" : {\n          \"AllocationId\" : {\n            \"Fn::GetAtt\" : [ \"NAT1EIP\", \"AllocationId\" ]\n          },\n          \"SubnetId\" : {\n            \"Ref\" : \"PublicSubnet1\"\n          },\n          \"Tags\" : [ {\n            \"Key\" : \"Name\",\n            \"Value\" : \"NATGateway1\"\n          } ]\n        }\n      },\n      \"NATGateway2\" : {\n        \"Condition\" : \"NATGateways&PublicSubnets&PrivateSubnetsCondition\",\n        \"DependsOn\" : \"VPCGatewayAttachment\",\n        \"Type\" : \"AWS::EC2::NatGateway\",\n        \"Properties\" : {\n          \"AllocationId\" : {\n            \"Fn::GetAtt\" : [ \"NAT2EIP\", \"AllocationId\" ]\n          },\n          \"SubnetId\" : {\n            \"Ref\" : \"PublicSubnet2\"\n          },\n          \"Tags\" : [ {\n            \"Key\" : \"Name\",\n            \"Value\" : \"NATGateway2\"\n          } ]\n        }\n      },\n      \"NATGateway3\" : {\n        \"Condition\" : \"NATGateways&PublicSubnets&PrivateSubnets&3AZCondition\",\n        \"DependsOn\" : \"VPCGatewayAttachment\",\n        \"Type\" : \"AWS::EC2::NatGateway\",\n        \"Properties\" : {\n          \"AllocationId\" : {\n            \"Fn::GetAtt\" : [ \"NAT3EIP\", \"AllocationId\" ]\n          },\n          \"SubnetId\" : {\n            \"Ref\" : \"PublicSubnet3\"\n          },\n          \"Tags\" : [ {\n            \"Key\" : \"Name\",\n            \"Value\" : \"NATGateway3\"\n          } ]\n        }\n      },\n      \"NATGateway4\" : {\n        \"Condition\" : \"NATGateways&PublicSubnets&PrivateSubnets&4AZCondition\",\n        \"DependsOn\" : \"VPCGatewayAttachment\",\n        \"Type\" : \"AWS::EC2::NatGateway\",\n        \"Properties\" : {\n          \"AllocationId\" : {\n            \"Fn::GetAtt\" : [ \"NAT4EIP\", \"AllocationId\" ]\n          },\n          \"SubnetId\" : {\n            \"Ref\" : \"PublicSubnet4\"\n          },\n          \"Tags\" : [ {\n            \"Key\" : \"Name\",\n            \"Value\" : \"NATGateway4\"\n          } ]\n        }\n      },\n      \"S3VPCEndpoint\" : {\n        \"Condition\" : \"PrivateSubnetsCondition\",\n        \"Type\" : \"AWS::EC2::VPCEndpoint\",\n        \"Metadata\" : {\n          \"cfn-lint\" : {\n            \"config\" : {\n              \"ignore_checks\" : [ \"EIAMPolicyActionWildcard\", \"EPolicyWildcardPrincipal\" ],\n              \"ignore_reasons\" : {\n                \"EIAMPolicyActionWildcard\" : \"This is based on AWS documentation- filtering via bucket policy is generally preferred.\",\n                \"EIAMPolicyWildcardResource\" : \"This is based on AWS documentation- filtering via bucket policy is generally preferred.\"\n              }\n            }\n          }\n        },\n        \"Properties\" : {\n          \"PolicyDocument\" : {\n            \"Version\" : \"2012-10-17\",\n            \"Statement\" : [ {\n              \"Action\" : \"*\",\n              \"Effect\" : \"Allow\",\n              \"Resource\" : \"*\",\n              \"Principal\" : \"*\"\n            } ]\n          },\n          \"RouteTableIds\" : [ {\n            \"Ref\" : \"PrivateSubnet1ARouteTable\"\n          }, {\n            \"Ref\" : \"PrivateSubnet2ARouteTable\"\n          }, {\n            \"Fn::If\" : [ \"PrivateSubnets&3AZCondition\", {\n              \"Ref\" : \"PrivateSubnet3ARouteTable\"\n            }, {\n              \"Ref\" : \"AWS::NoValue\"\n            } ]\n          }, {\n            \"Fn::If\" : [ \"PrivateSubnets&4AZCondition\", {\n              \"Ref\" : \"PrivateSubnet4ARouteTable\"\n            }, {\n              \"Ref\" : \"AWS::NoValue\"\n            } ]\n          }, {\n            \"Fn::If\" : [ \"AdditionalPrivateSubnetsCondition\", {\n              \"Ref\" : \"PrivateSubnet1BRouteTable\"\n            }, {\n              \"Ref\" : \"AWS::NoValue\"\n            } ]\n          }, {\n            \"Fn::If\" : [ \"AdditionalPrivateSubnetsCondition\", {\n              \"Ref\" : \"PrivateSubnet2BRouteTable\"\n            }, {\n              \"Ref\" : \"AWS::NoValue\"\n            } ]\n          }, {\n            \"Fn::If\" : [ \"AdditionalPrivateSubnets&3AZCondition\", {\n              \"Ref\" : \"PrivateSubnet3BRouteTable\"\n            }, {\n              \"Ref\" : \"AWS::NoValue\"\n            } ]\n          }, {\n            \"Fn::If\" : [ \"AdditionalPrivateSubnets&4AZCondition\", {\n              \"Ref\" : \"PrivateSubnet4BRouteTable\"\n            }, {\n              \"Ref\" : \"AWS::NoValue\"\n            } ]\n          } ],\n          \"ServiceName\" : {\n            \"Fn::Sub\" : \"com.amazonaws.${AWS::Region}.s3\"\n          },\n          \"VpcId\" : {\n            \"Ref\" : \"VPC\"\n          }\n        }\n      },\n      \"VPCFlowLogsRole\" : {\n        \"Condition\" : \"VPCFlowLogsToCloudWatchCondition\",\n        \"Type\" : \"AWS::IAM::Role\",\n        \"Properties\" : {\n          \"Description\" : \"Rights to publish VPC flow logs to CloudWatch Logs.\",\n          \"AssumeRolePolicyDocument\" : {\n            \"Version\" : \"2012-10-17\",\n            \"Statement\" : [ {\n              \"Effect\" : \"Allow\",\n              \"Action\" : \"sts:AssumeRole\",\n              \"Principal\" : {\n                \"Service\" : [ \"vpc-flow-logs.amazonaws.com\" ]\n              }\n            } ]\n          },\n          \"Path\" : \"/\",\n          \"Policies\" : [ {\n            \"PolicyName\" : \"CloudWatchLogGroup\",\n            \"PolicyDocument\" : {\n              \"Version\" : \"2012-10-17\",\n              \"Statement\" : [ {\n                \"Sid\" : \"CloudWatchLogs\",\n                \"Effect\" : \"Allow\",\n                \"Action\" : [ \"logs:CreateLogStream\", \"logs:PutLogEvents\", \"logs:DescribeLogGroups\", \"logs:DescribeLogStreams\" ],\n                \"Resource\" : {\n                  \"Fn::GetAtt\" : [ \"VPCFlowLogsLogGroup\", \"Arn\" ]\n                }\n              } ]\n            }\n          } ]\n        }\n      },\n      \"VPCFlowLogsLogGroup\" : {\n        \"Condition\" : \"VPCFlowLogsToCloudWatchCondition\",\n        \"Type\" : \"AWS::Logs::LogGroup\",\n        \"Properties\" : {\n          \"RetentionInDays\" : {\n            \"Ref\" : \"VPCFlowLogsLogGroupRetention\"\n          },\n          \"KmsKeyId\" : {\n            \"Fn::If\" : [ \"VPCFlowLogsCloudWatchKMSKeyCondition\", {\n              \"Ref\" : \"VPCFlowLogsCloudWatchKMSKey\"\n            }, {\n              \"Ref\" : \"AWS::NoValue\"\n            } ]\n          }\n        }\n      },\n      \"VPCFlowLogsToCloudWatch\" : {\n        \"Condition\" : \"VPCFlowLogsToCloudWatchCondition\",\n        \"Type\" : \"AWS::EC2::FlowLog\",\n        \"Properties\" : {\n          \"LogDestinationType\" : \"cloud-watch-logs\",\n          \"LogGroupName\" : {\n            \"Ref\" : \"VPCFlowLogsLogGroup\"\n          },\n          \"DeliverLogsPermissionArn\" : {\n            \"Fn::GetAtt\" : [ \"VPCFlowLogsRole\", \"Arn\" ]\n          },\n          \"LogFormat\" : {\n            \"Ref\" : \"VPCFlowLogsLogFormat\"\n          },\n          \"MaxAggregationInterval\" : {\n            \"Ref\" : \"VPCFlowLogsMaxAggregationInterval\"\n          },\n          \"ResourceId\" : {\n            \"Ref\" : \"VPC\"\n          },\n          \"ResourceType\" : \"VPC\",\n          \"TrafficType\" : {\n            \"Ref\" : \"VPCFlowLogsTrafficType\"\n          },\n          \"Tags\" : [ {\n            \"Key\" : \"Name\",\n            \"Value\" : \"VPC Flow Logs CloudWatch\"\n          } ]\n        }\n      }\n    },\n    \"Outputs\" : {\n      \"NAT1EIP\" : {\n        \"Condition\" : \"NATGateways&PublicSubnets&PrivateSubnetsCondition\",\n        \"Description\" : \"NAT 1 IP address.\",\n        \"Value\" : {\n          \"Ref\" : \"NAT1EIP\"\n        },\n        \"Export\" : {\n          \"Name\" : {\n            \"Fn::Sub\" : \"${AWS::StackName}-NAT1EIP\"\n          }\n        }\n      },\n      \"NAT2EIP\" : {\n        \"Condition\" : \"NATGateways&PublicSubnets&PrivateSubnetsCondition\",\n        \"Description\" : \"NAT 2 IP address.\",\n        \"Value\" : {\n          \"Ref\" : \"NAT2EIP\"\n        },\n        \"Export\" : {\n          \"Name\" : {\n            \"Fn::Sub\" : \"${AWS::StackName}-NAT2EIP\"\n          }\n        }\n      },\n      \"NAT3EIP\" : {\n        \"Condition\" : \"NATGateways&PublicSubnets&PrivateSubnets&3AZCondition\",\n        \"Description\" : \"NAT 3 IP address.\",\n        \"Value\" : {\n          \"Ref\" : \"NAT3EIP\"\n        },\n        \"Export\" : {\n          \"Name\" : {\n            \"Fn::Sub\" : \"${AWS::StackName}-NAT3EIP\"\n          }\n        }\n      },\n      \"NAT4EIP\" : {\n        \"Condition\" : \"NATGateways&PublicSubnets&PrivateSubnets&4AZCondition\",\n        \"Description\" : \"NAT 4 IP address.\",\n        \"Value\" : {\n          \"Ref\" : \"NAT4EIP\"\n        },\n        \"Export\" : {\n          \"Name\" : {\n            \"Fn::Sub\" : \"${AWS::StackName}-NAT4EIP\"\n          }\n        }\n      },\n      \"NATGateway1ID\" : {\n        \"Condition\" : \"NATGateways&PublicSubnets&PrivateSubnetsCondition\",\n        \"Description\" : \"NATGateway 1 ID.\",\n        \"Value\" : {\n          \"Ref\" : \"NATGateway1\"\n        },\n        \"Export\" : {\n          \"Name\" : {\n            \"Fn::Sub\" : \"${AWS::StackName}-NATGateway1\"\n          }\n        }\n      },\n      \"NATGateway2ID\" : {\n        \"Condition\" : \"NATGateways&PublicSubnets&PrivateSubnetsCondition\",\n        \"Description\" : \"NATGateway 2 ID.\",\n        \"Value\" : {\n          \"Ref\" : \"NATGateway2\"\n        },\n        \"Export\" : {\n          \"Name\" : {\n            \"Fn::Sub\" : \"${AWS::StackName}-NATGateway2\"\n          }\n        }\n      },\n      \"NATGateway3ID\" : {\n        \"Condition\" : \"NATGateways&PublicSubnets&PrivateSubnets&3AZCondition\",\n        \"Description\" : \"NATGateway 3 ID.\",\n        \"Value\" : {\n          \"Ref\" : \"NATGateway3\"\n        },\n        \"Export\" : {\n          \"Name\" : {\n            \"Fn::Sub\" : \"${AWS::StackName}-NATGateway3\"\n          }\n        }\n      },\n      \"NATGateway4ID\" : {\n        \"Condition\" : \"NATGateways&PublicSubnets&PrivateSubnets&4AZCondition\",\n        \"Description\" : \"NATGateway 4 ID.\",\n        \"Value\" : {\n          \"Ref\" : \"NATGateway4\"\n        },\n        \"Export\" : {\n          \"Name\" : {\n            \"Fn::Sub\" : \"${AWS::StackName}-NATGateway4\"\n          }\n        }\n      },\n      \"PrivateSubnet1ACIDR\" : {\n        \"Condition\" : \"PrivateSubnetsCondition\",\n        \"Description\" : \"Private subnet 1A CIDR in Availability Zone 1.\",\n        \"Value\" : {\n          \"Ref\" : \"PrivateSubnet1ACIDR\"\n        },\n        \"Export\" : {\n          \"Name\" : {\n            \"Fn::Sub\" : \"${AWS::StackName}-PrivateSubnet1ACIDR\"\n          }\n        }\n      },\n      \"PrivateSubnet1AID\" : {\n        \"Condition\" : \"PrivateSubnetsCondition\",\n        \"Description\" : \"Private subnet 1A ID in Availability Zone 1.\",\n        \"Value\" : {\n          \"Ref\" : \"PrivateSubnet1A\"\n        },\n        \"Export\" : {\n          \"Name\" : {\n            \"Fn::Sub\" : \"${AWS::StackName}-PrivateSubnet1AID\"\n          }\n        }\n      },\n      \"PrivateSubnet1ARouteTable\" : {\n        \"Condition\" : \"PrivateSubnetsCondition\",\n        \"Description\" : \"Private subnet 1A route table.\",\n        \"Value\" : {\n          \"Ref\" : \"PrivateSubnet1ARouteTable\"\n        },\n        \"Export\" : {\n          \"Name\" : {\n            \"Fn::Sub\" : \"${AWS::StackName}-PrivateSubnet1ARouteTable\"\n          }\n        }\n      },\n      \"PrivateSubnet1BCIDR\" : {\n        \"Condition\" : \"AdditionalPrivateSubnetsCondition\",\n        \"Description\" : \"Private subnet 1B CIDR in Availability Zone 1.\",\n        \"Value\" : {\n          \"Ref\" : \"PrivateSubnet1BCIDR\"\n        },\n        \"Export\" : {\n          \"Name\" : {\n            \"Fn::Sub\" : \"${AWS::StackName}-PrivateSubnet1BCIDR\"\n          }\n        }\n      },\n      \"PrivateSubnet1BID\" : {\n        \"Condition\" : \"AdditionalPrivateSubnetsCondition\",\n        \"Description\" : \"Private subnet 1B ID in Availability Zone 1.\",\n        \"Value\" : {\n          \"Ref\" : \"PrivateSubnet1B\"\n        },\n        \"Export\" : {\n          \"Name\" : {\n            \"Fn::Sub\" : \"${AWS::StackName}-PrivateSubnet1BID\"\n          }\n        }\n      },\n      \"PrivateSubnet1BRouteTable\" : {\n        \"Condition\" : \"AdditionalPrivateSubnetsCondition\",\n        \"Description\" : \"Private subnet 1B route table.\",\n        \"Value\" : {\n          \"Ref\" : \"PrivateSubnet1BRouteTable\"\n        },\n        \"Export\" : {\n          \"Name\" : {\n            \"Fn::Sub\" : \"${AWS::StackName}-PrivateSubnet1BRouteTable\"\n          }\n        }\n      },\n      \"PrivateSubnet2ACIDR\" : {\n        \"Condition\" : \"PrivateSubnetsCondition\",\n        \"Description\" : \"Private subnet 2A CIDR in Availability Zone 2.\",\n        \"Value\" : {\n          \"Ref\" : \"PrivateSubnet2ACIDR\"\n        },\n        \"Export\" : {\n          \"Name\" : {\n            \"Fn::Sub\" : \"${AWS::StackName}-PrivateSubnet2ACIDR\"\n          }\n        }\n      },\n      \"PrivateSubnet2AID\" : {\n        \"Condition\" : \"PrivateSubnetsCondition\",\n        \"Description\" : \"Private subnet 2A ID in Availability Zone 2.\",\n        \"Value\" : {\n          \"Ref\" : \"PrivateSubnet2A\"\n        },\n        \"Export\" : {\n          \"Name\" : {\n            \"Fn::Sub\" : \"${AWS::StackName}-PrivateSubnet2AID\"\n          }\n        }\n      },\n      \"PrivateSubnet2ARouteTable\" : {\n        \"Condition\" : \"PrivateSubnetsCondition\",\n        \"Value\" : {\n          \"Ref\" : \"PrivateSubnet2ARouteTable\"\n        },\n        \"Description\" : \"Private subnet 2A route table.\",\n        \"Export\" : {\n          \"Name\" : {\n            \"Fn::Sub\" : \"${AWS::StackName}-PrivateSubnet2ARouteTable\"\n          }\n        }\n      },\n      \"PrivateSubnet2BCIDR\" : {\n        \"Condition\" : \"AdditionalPrivateSubnetsCondition\",\n        \"Description\" : \"Private subnet 2B CIDR in Availability Zone 2.\",\n        \"Value\" : {\n          \"Ref\" : \"PrivateSubnet2BCIDR\"\n        },\n        \"Export\" : {\n          \"Name\" : {\n            \"Fn::Sub\" : \"${AWS::StackName}-PrivateSubnet2BCIDR\"\n          }\n        }\n      },\n      \"PrivateSubnet2BID\" : {\n        \"Condition\" : \"AdditionalPrivateSubnetsCondition\",\n        \"Description\" : \"Private subnet 2B ID in Availability Zone 2.\",\n        \"Value\" : {\n          \"Ref\" : \"PrivateSubnet2B\"\n        },\n        \"Export\" : {\n          \"Name\" : {\n            \"Fn::Sub\" : \"${AWS::StackName}-PrivateSubnet2BID\"\n          }\n        }\n      },\n      \"PrivateSubnet2BRouteTable\" : {\n        \"Condition\" : \"AdditionalPrivateSubnetsCondition\",\n        \"Description\" : \"Private subnet 2B route table.\",\n        \"Value\" : {\n          \"Ref\" : \"PrivateSubnet2BRouteTable\"\n        },\n        \"Export\" : {\n          \"Name\" : {\n            \"Fn::Sub\" : \"${AWS::StackName}-PrivateSubnet2BRouteTable\"\n          }\n        }\n      },\n      \"PrivateSubnet3ACIDR\" : {\n        \"Condition\" : \"PrivateSubnets&3AZCondition\",\n        \"Description\" : \"Private subnet 3A CIDR in Availability Zone 3.\",\n        \"Value\" : {\n          \"Ref\" : \"PrivateSubnet3ACIDR\"\n        },\n        \"Export\" : {\n          \"Name\" : {\n            \"Fn::Sub\" : \"${AWS::StackName}-PrivateSubnet3ACIDR\"\n          }\n        }\n      },\n      \"PrivateSubnet3AID\" : {\n        \"Condition\" : \"PrivateSubnets&3AZCondition\",\n        \"Description\" : \"Private subnet 3A ID in Availability Zone 3.\",\n        \"Value\" : {\n          \"Ref\" : \"PrivateSubnet3A\"\n        },\n        \"Export\" : {\n          \"Name\" : {\n            \"Fn::Sub\" : \"${AWS::StackName}-PrivateSubnet3AID\"\n          }\n        }\n      },\n      \"PrivateSubnet3ARouteTable\" : {\n        \"Condition\" : \"PrivateSubnets&3AZCondition\",\n        \"Description\" : \"Private subnet 3A route table.\",\n        \"Value\" : {\n          \"Ref\" : \"PrivateSubnet3ARouteTable\"\n        },\n        \"Export\" : {\n          \"Name\" : {\n            \"Fn::Sub\" : \"${AWS::StackName}-PrivateSubnet3ARouteTable\"\n          }\n        }\n      },\n      \"PrivateSubnet3BCIDR\" : {\n        \"Condition\" : \"AdditionalPrivateSubnets&3AZCondition\",\n        \"Description\" : \"Private subnet 3B CIDR in Availability Zone 3.\",\n        \"Value\" : {\n          \"Ref\" : \"PrivateSubnet3BCIDR\"\n        },\n        \"Export\" : {\n          \"Name\" : {\n            \"Fn::Sub\" : \"${AWS::StackName}-PrivateSubnet3BCIDR\"\n          }\n        }\n      },\n      \"PrivateSubnet3BID\" : {\n        \"Condition\" : \"AdditionalPrivateSubnets&3AZCondition\",\n        \"Description\" : \"Private subnet 3B ID in Availability Zone 3.\",\n        \"Value\" : {\n          \"Ref\" : \"PrivateSubnet3B\"\n        },\n        \"Export\" : {\n          \"Name\" : {\n            \"Fn::Sub\" : \"${AWS::StackName}-PrivateSubnet3BID\"\n          }\n        }\n      },\n      \"PrivateSubnet3BRouteTable\" : {\n        \"Condition\" : \"AdditionalPrivateSubnets&3AZCondition\",\n        \"Description\" : \"Private subnet 3B route table.\",\n        \"Value\" : {\n          \"Ref\" : \"PrivateSubnet3BRouteTable\"\n        },\n        \"Export\" : {\n          \"Name\" : {\n            \"Fn::Sub\" : \"${AWS::StackName}-PrivateSubnet3BRouteTable\"\n          }\n        }\n      },\n      \"PrivateSubnet4ACIDR\" : {\n        \"Condition\" : \"PrivateSubnets&4AZCondition\",\n        \"Description\" : \"Private subnet 4A CIDR in Availability Zone 4.\",\n        \"Value\" : {\n          \"Ref\" : \"PrivateSubnet4ACIDR\"\n        },\n        \"Export\" : {\n          \"Name\" : {\n            \"Fn::Sub\" : \"${AWS::StackName}-PrivateSubnet4ACIDR\"\n          }\n        }\n      },\n      \"PrivateSubnet4AID\" : {\n        \"Condition\" : \"PrivateSubnets&4AZCondition\",\n        \"Description\" : \"Private subnet 4A ID in Availability Zone 4.\",\n        \"Value\" : {\n          \"Ref\" : \"PrivateSubnet4A\"\n        },\n        \"Export\" : {\n          \"Name\" : {\n            \"Fn::Sub\" : \"${AWS::StackName}-PrivateSubnet4AID\"\n          }\n        }\n      },\n      \"PrivateSubnet4ARouteTable\" : {\n        \"Condition\" : \"PrivateSubnets&4AZCondition\",\n        \"Description\" : \"Private subnet 4A route table.\",\n        \"Value\" : {\n          \"Ref\" : \"PrivateSubnet4ARouteTable\"\n        },\n        \"Export\" : {\n          \"Name\" : {\n            \"Fn::Sub\" : \"${AWS::StackName}-PrivateSubnet4ARouteTable\"\n          }\n        }\n      },\n      \"PrivateSubnet4BCIDR\" : {\n        \"Condition\" : \"AdditionalPrivateSubnets&4AZCondition\",\n        \"Description\" : \"Private subnet 4B CIDR in Availability Zone 4.\",\n        \"Value\" : {\n          \"Ref\" : \"PrivateSubnet4BCIDR\"\n        },\n        \"Export\" : {\n          \"Name\" : {\n            \"Fn::Sub\" : \"${AWS::StackName}-PrivateSubnet4BCIDR\"\n          }\n        }\n      },\n      \"PrivateSubnet4BID\" : {\n        \"Condition\" : \"AdditionalPrivateSubnets&4AZCondition\",\n        \"Description\" : \"Private subnet 4B ID in Availability Zone 4.\",\n        \"Value\" : {\n          \"Ref\" : \"PrivateSubnet4B\"\n        },\n        \"Export\" : {\n          \"Name\" : {\n            \"Fn::Sub\" : \"${AWS::StackName}-PrivateSubnet4BID\"\n          }\n        }\n      },\n      \"PrivateSubnet4BRouteTable\" : {\n        \"Condition\" : \"AdditionalPrivateSubnets&4AZCondition\",\n        \"Description\" : \"Private subnet 4B route table.\",\n        \"Value\" : {\n          \"Ref\" : \"PrivateSubnet4BRouteTable\"\n        },\n        \"Export\" : {\n          \"Name\" : {\n            \"Fn::Sub\" : \"${AWS::StackName}-PrivateSubnet4BRouteTable\"\n          }\n        }\n      },\n      \"PublicSubnet1CIDR\" : {\n        \"Condition\" : \"PublicSubnetsCondition\",\n        \"Description\" : \"Public subnet 1 CIDR in Availability Zone 1.\",\n        \"Value\" : {\n          \"Ref\" : \"PublicSubnet1CIDR\"\n        },\n        \"Export\" : {\n          \"Name\" : {\n            \"Fn::Sub\" : \"${AWS::StackName}-PublicSubnet1CIDR\"\n          }\n        }\n      },\n      \"PublicSubnet1ID\" : {\n        \"Condition\" : \"PublicSubnetsCondition\",\n        \"Description\" : \"Public subnet 1 ID in Availability Zone 1.\",\n        \"Value\" : {\n          \"Ref\" : \"PublicSubnet1\"\n        },\n        \"Export\" : {\n          \"Name\" : {\n            \"Fn::Sub\" : \"${AWS::StackName}-PublicSubnet1ID\"\n          }\n        }\n      },\n      \"PublicSubnet2CIDR\" : {\n        \"Condition\" : \"PublicSubnetsCondition\",\n        \"Description\" : \"Public subnet 2 CIDR in Availability Zone 2.\",\n        \"Value\" : {\n          \"Ref\" : \"PublicSubnet2CIDR\"\n        },\n        \"Export\" : {\n          \"Name\" : {\n            \"Fn::Sub\" : \"${AWS::StackName}-PublicSubnet2CIDR\"\n          }\n        }\n      },\n      \"PublicSubnet2ID\" : {\n        \"Condition\" : \"PublicSubnetsCondition\",\n        \"Description\" : \"Public subnet 2 ID in Availability Zone 2.\",\n        \"Value\" : {\n          \"Ref\" : \"PublicSubnet2\"\n        },\n        \"Export\" : {\n          \"Name\" : {\n            \"Fn::Sub\" : \"${AWS::StackName}-PublicSubnet2ID\"\n          }\n        }\n      },\n      \"PublicSubnet3CIDR\" : {\n        \"Condition\" : \"PublicSubnets&3AZCondition\",\n        \"Description\" : \"Public subnet 3 CIDR in Availability Zone 3.\",\n        \"Value\" : {\n          \"Ref\" : \"PublicSubnet3CIDR\"\n        },\n        \"Export\" : {\n          \"Name\" : {\n            \"Fn::Sub\" : \"${AWS::StackName}-PublicSubnet3CIDR\"\n          }\n        }\n      },\n      \"PublicSubnet3ID\" : {\n        \"Condition\" : \"PublicSubnets&3AZCondition\",\n        \"Description\" : \"Public subnet 3 ID in Availability Zone 3.\",\n        \"Value\" : {\n          \"Ref\" : \"PublicSubnet3\"\n        },\n        \"Export\" : {\n          \"Name\" : {\n            \"Fn::Sub\" : \"${AWS::StackName}-PublicSubnet3ID\"\n          }\n        }\n      },\n      \"PublicSubnet4CIDR\" : {\n        \"Condition\" : \"PublicSubnets&4AZCondition\",\n        \"Description\" : \"Public subnet 4 CIDR in Availability Zone 4.\",\n        \"Value\" : {\n          \"Ref\" : \"PublicSubnet4CIDR\"\n        },\n        \"Export\" : {\n          \"Name\" : {\n            \"Fn::Sub\" : \"${AWS::StackName}-PublicSubnet4CIDR\"\n          }\n        }\n      },\n      \"PublicSubnet4ID\" : {\n        \"Condition\" : \"PublicSubnets&4AZCondition\",\n        \"Description\" : \"Public subnet 4 ID in Availability Zone 4.\",\n        \"Value\" : {\n          \"Ref\" : \"PublicSubnet4\"\n        },\n        \"Export\" : {\n          \"Name\" : {\n            \"Fn::Sub\" : \"${AWS::StackName}-PublicSubnet4ID\"\n          }\n        }\n      },\n      \"PublicSubnetRouteTable\" : {\n        \"Condition\" : \"PublicSubnetsCondition\",\n        \"Description\" : \"Public subnet route table.\",\n        \"Value\" : {\n          \"Ref\" : \"PublicSubnetRouteTable\"\n        },\n        \"Export\" : {\n          \"Name\" : {\n            \"Fn::Sub\" : \"${AWS::StackName}-PublicSubnetRouteTable\"\n          }\n        }\n      },\n      \"S3VPCEndpoint\" : {\n        \"Condition\" : \"PrivateSubnetsCondition\",\n        \"Description\" : \"S3 VPC Endpoint.\",\n        \"Value\" : {\n          \"Ref\" : \"S3VPCEndpoint\"\n        },\n        \"Export\" : {\n          \"Name\" : {\n            \"Fn::Sub\" : \"${AWS::StackName}-S3VPCEndpoint\"\n          }\n        }\n      },\n      \"VPCCIDR\" : {\n        \"Description\" : \"VPC CIDR.\",\n        \"Value\" : {\n          \"Ref\" : \"VPCCIDR\"\n        },\n        \"Export\" : {\n          \"Name\" : {\n            \"Fn::Sub\" : \"${AWS::StackName}-VPCCIDR\"\n          }\n        }\n      },\n      \"VPCID\" : {\n        \"Description\" : \"VPC ID.\",\n        \"Value\" : {\n          \"Ref\" : \"VPC\"\n        },\n        \"Export\" : {\n          \"Name\" : {\n            \"Fn::Sub\" : \"${AWS::StackName}-VPCID\"\n          }\n        }\n      }\n    }\n  }\n}",
  "CreatedDate": "2022-09-19T14:37:39.925Z",
  "DisplayName": null,
  "DocumentFormat": {
    "Value": "JSON"
  },
  "DocumentType": {
    "Value": "CloudFormation"
  },
  "DocumentVersion": "5",
  "Name": "AWSQuickStarts-AWS-VPC",
  "Requires": [],
  "ReviewStatus": null,
  "Status": {
    "Value": "Active"
  },
  "StatusInformation": null,
  "VersionName": "AWSQuickStarts-AWS-VPC-2022-09-19-14-35-37",
  "ResponseMetadata": {
    "RequestId": "a1b02c81-1170-40ed-af1a-aba635d96240",
    "Metadata": {},
    "ChecksumAlgorithm": 0,
    "ChecksumValidationStatus": 0
  },
  "ContentLength": 114281,
  "HttpStatusCode": 200,
  "LoggedAt": "2023-02-18T07:11:22.3183624+00:00"
}
