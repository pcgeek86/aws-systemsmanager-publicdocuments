{
  "AttachmentsContent": [],
  "Content": "{\n  \"description\" : \"Updates AMI with Linux distribution packages and Amazon software. For details,see https://docs.aws.amazon.com/systems-manager/latest/userguide/automation-awsdocs-linux.html\",\n  \"schemaVersion\" : \"0.3\",\n  \"assumeRole\" : \"{{AutomationAssumeRole}}\",\n  \"outputs\" : [ \"createImage.ImageId\", \"encryptImage.ImageId\" ],\n  \"parameters\" : {\n    \"SourceAmiId\" : {\n      \"type\" : \"String\",\n      \"description\" : \"(Required) The source Amazon Machine Image ID.\"\n    },\n    \"IamInstanceProfileName\" : {\n      \"type\" : \"String\",\n      \"description\" : \"(Required) The instance profile that enables Systems Manager (SSM) to manage the instance.\",\n      \"default\" : \"ManagedInstanceProfile\"\n    },\n    \"AutomationAssumeRole\" : {\n      \"type\" : \"String\",\n      \"description\" : \"(Required) The ARN of the role that allows Automation to perform the actions on your behalf.\",\n      \"default\" : \"arn:aws:iam::{{global:ACCOUNT_ID}}:role/AutomationServiceRole\"\n    },\n    \"TargetAmiName\" : {\n      \"type\" : \"String\",\n      \"description\" : \"(Optional) The name of the new AMI that will be created. Default is a system-generated string including the source AMI id, and the creation time and date.\",\n      \"default\" : \"GoldenAmi_from_{{SourceAmiId}}_{{InstanceName}}\"\n    },\n    \"InstanceType\" : {\n      \"type\" : \"String\",\n      \"description\" : \"(Optional) Type of instance to launch as the workspace host. Instance types vary by region. Default is t2.micro.\",\n      \"default\" : \"t2.micro\"\n    },\n    \"SubnetId\" : {\n      \"type\" : \"String\",\n      \"description\" : \"(Optional) Custom Subnet ID in which to launch the temporary instance.\",\n      \"default\" : \"\"\n    },\n    \"PreUpdateScript\" : {\n      \"type\" : \"String\",\n      \"description\" : \"(Optional) URL of a script to run before updates are applied. Default (\\\"none\\\") is to not run a script.\",\n      \"default\" : \"none\"\n    },\n    \"PostUpdateScript\" : {\n      \"type\" : \"String\",\n      \"description\" : \"(Optional) URL of a script to run after package updates are applied. Default (\\\"none\\\") is to not run a script.\",\n      \"default\" : \"none\"\n    },\n    \"EncryptImage\" : {\n      \"type\" : \"String\",\n      \"description\" : \"(Optional) - True or False - Should the final AMI be encrypted?\",\n      \"default\" : \"False\",\n      \"allowedPattern\" : \"^True$|^False$\"\n    },\n    \"IncludePackages\" : {\n      \"type\" : \"String\",\n      \"description\" : \"(Optional) Only update these named packages. By default (\\\"all\\\"), all available updates are applied.\",\n      \"default\" : \"all\"\n    },\n    \"ExcludePackages\" : {\n      \"type\" : \"String\",\n      \"description\" : \"(Optional) Names of packages to hold back from updates, under all conditions. By default (\\\"none\\\"), no package is excluded.\",\n      \"default\" : \"none\"\n    },\n    \"Agents\" : {\n      \"type\" : \"String\",\n      \"default\" : \"False\",\n      \"description\" : \"(Optional) Remove All Agents Except SSM. By default (False) if you want to Remove all agents type \\\"True\\\".\"\n    },\n    \"KmsKey\" : {\n      \"type\" : \"String\",\n      \"default\" : \"\"\n    },\n    \"InstanceName\" : {\n      \"type\" : \"String\",\n      \"default\" : \"\"\n    }\n  },\n  \"mainSteps\" : [ {\n    \"name\" : \"launchInstance\",\n    \"action\" : \"aws:runInstances\",\n    \"maxAttempts\" : 3,\n    \"timeoutSeconds\" : 1200,\n    \"onFailure\" : \"Abort\",\n    \"inputs\" : {\n      \"ImageId\" : \"{{SourceAmiId}}\",\n      \"InstanceType\" : \"{{InstanceType}}\",\n      \"SubnetId\" : \"{{SubnetId}}\",\n      \"UserData\" : \"IyEvYmluL2Jhc2gKCmZ1bmN0aW9uIHJlcXVpcmVkX2NvbW1hbmRfY2hlY2soKSB7CiAgIyBEZXRlcm1pbmUgT1MgRGlzdHJpYnV0aW9uCiAgaWYgW1sgLWYgL2V0Yy9vcy1yZWxlYXNlIF1dOyB0aGVuCiAgICBzb3VyY2UgL2V0Yy9vcy1yZWxlYXNlCiAgICBESVNUUk89IiR7SUR9IgoKICBlbGlmIFtbIC1mIC9ldGMvcmVkaGF0LXJlbGVhc2UgXV07IHRoZW4KICAgIGlmIGdyZXAgLXEgLXMgQ2VudE9TIC9ldGMvcmVkaGF0LXJlbGVhc2U7IHRoZW4KICAgICAgRElTVFJPPSJjZW50b3MiCiAgICBlbHNlCiAgICAgIERJU1RSTz0icmhlbCIKICAgIGZpCgogIGVsc2UKICAgIGVjaG8gIlVua25vd24gRGlzdHJvISIKICAgIGV4aXQgMQogIGZpCiAgZWNobyAiRGlzdHJvIHJlcG9ydGVkIGlzOiAke0RJU1RST30iCgogIGNhc2UgJERJU1RSTyBpbgogICAgdWJ1bnR1KQogICAgICBleHBvcnQgREVCSUFOX0ZST05URU5EPW5vbmludGVyYWN0aXZlCiAgICAgIDs7CiAgICBlc2FjCgogIGlmICEgdHlwZSAiY3VybCIgPiAvZGV2L251bGw7IHRoZW4KICAgIGlmIFtbICRESVNUUk8gPT0gImFtem4iIHx8ICRESVNUUk8gPT0gInJoZWwiIHx8ICRESVNUUk8gPT0gImNlbnRvcyIgXV07IHRoZW4KICAgICAgeXVtIC15IGluc3RhbGwgY3VybAogICAgZmkKICAgIGlmIFsgJERJU1RSTyA9PSAidWJ1bnR1IiBdOyB0aGVuCiAgICAgIGZsb2NrIC0tdGltZW91dCA2MCAtLWV4Y2x1c2l2ZSAtLWNsb3NlIC92YXIvbGliL2Rwa2cvbG9jayBhcHQtZ2V0IC15cSBpbnN0YWxsIGN1cmwKICAgIGZpCiAgZWxzZQogICAgZWNobyBjdXJsIGJpbmFyeSBpcyBhbHJlYWR5IGluc3RhbGxlZC4uLgogIGZpCgogIGlmICEgdHlwZSAid2dldCIgPiAvZGV2L251bGw7IHRoZW4KICAgIGlmIFtbICRESVNUUk8gPT0gImFtem4iIHx8ICRESVNUUk8gPT0gInJoZWwiIHx8ICRESVNUUk8gPT0gImNlbnRvcyIgXV07IHRoZW4KICAgICAgeXVtIC15IGluc3RhbGwgd2dldAogICAgZmkKICAgIGlmIFsgJERJU1RSTyA9PSAidWJ1bnR1IiBdOyB0aGVuCiAgICAgIGZsb2NrIC0tdGltZW91dCA2MCAtLWV4Y2x1c2l2ZSAtLWNsb3NlIC92YXIvbGliL2Rwa2cvbG9jayBhcHQtZ2V0IC15cSBpbnN0YWxsIHdnZXQKICAgIGZpCiAgZWxzZQogICAgZWNobyB3Z2V0IGJpbmFyeSBpcyBhbHJlYWR5IGluc3RhbGxlZC4uLgogIGZpCgogIGlmICEgdHlwZSAidW56aXAiID4gL2Rldi9udWxsOyB0aGVuCiAgICBpZiBbWyAkRElTVFJPID09ICJhbXpuIiB8fCAkRElTVFJPID09ICJyaGVsIiB8fCAkRElTVFJPID09ICJjZW50b3MiIF1dOyB0aGVuCiAgICAgIHl1bSAteSBpbnN0YWxsIHVuemlwCiAgICBmaQogICAgaWYgWyAkRElTVFJPID09ICJ1YnVudHUiIF07IHRoZW4KICAgICAgZmxvY2sgLS10aW1lb3V0IDYwIC0tZXhjbHVzaXZlIC0tY2xvc2UgL3Zhci9saWIvZHBrZy9sb2NrIGFwdC1nZXQgLXlxIGluc3RhbGwgdW56aXAKICAgIGZpCiAgZWxzZQogICAgZWNobyB1bnppcCBiaW5hcnkgaXMgYWxyZWFkeSBpbnN0YWxsZWQgLi4uCiAgZmkKfQoKZnVuY3Rpb24gZ2V0X2NvbnRlbnRzKCkgewogICAgaWYgWyAteCAiJCh3aGljaCBjdXJsKSIgXTsgdGhlbgogICAgICAgIGN1cmwgLXMgLWYgIiQxIgogICAgZWxpZiBbIC14ICIkKHdoaWNoIHdnZXQpIiBdOyB0aGVuCiAgICAgICAgd2dldCAiJDEiIC1PIC0KICAgIGVsc2UKICAgICAgICBkaWUgIk5vIGRvd25sb2FkIHV0aWxpdHkgKGN1cmwsIHdnZXQpIgogICAgZmkKfQoKIyBJbnN0YWxsIGFsbCByZXF1aXJlZCBjb21tYW5kcy91dGlsaXRpZXMKZWNobyBBV1MtVXBkYXRlTGludXhBbWk6IENoZWNraW5nIGZvciByZXF1aXJlZCBpbnN0YWxsIGNvbW1hbmRzCnJlcXVpcmVkX2NvbW1hbmRfY2hlY2sKCiMgSW5zdGFsbCBvciBVcGRhdGUgdGhlIEFXUyBDTEkgdjIKbWtkaXIgLXAgL3RtcC9hd3NjbGkKY2QgL3RtcC9hd3NjbGkKY3VybCAiaHR0cHM6Ly9hd3NjbGkuYW1hem9uYXdzLmNvbS9hd3NjbGktZXhlLWxpbnV4LXg4Nl82NC56aXAiIC1vICIvdG1wL2F3c2NsaS9hd3NjbGl2Mi56aXAiCmVjaG8gQSB8IHVuemlwIC90bXAvYXdzY2xpL2F3c2NsaXYyLnppcAppZiAhIHR5cGUgImF3cyIgPiAvZGV2L251bGw7IHRoZW4KICBlY2hvIEFXUy1VcGRhdGVMaW51eEFtaTogYXdzIGJpbmFyeSBub3QgZm91bmQsIGluc3RhbGxpbmcgYXdzIGNsaSAuLi4uCiAgc3VkbyAvdG1wL2F3c2NsaS9hd3MvaW5zdGFsbAplbHNlCiAgZWNobyBBV1MtVXBkYXRlTGludXhBbWk6IGF3cyBiaW5hcnkgZm91bmQsIGNoZWNraW5nIGZvciBtb3N0IHJlY2VudCB2ZXJzaW9uIC4uLi4KICBzdWRvIC90bXAvYXdzY2xpL2F3cy9pbnN0YWxsIC0tYmluLWRpciAvdXNyL2xvY2FsL2JpbiAtLWluc3RhbGwtZGlyIC91c3IvbG9jYWwvYXdzLWNsaSAtLXVwZGF0ZQpmaQoKY2QgLwpybSAtcmYgL3RtcC9hd3NjbGkKCnJlYWRvbmx5IElERU5USVRZX1VSTD0iaHR0cDovLzE2OS4yNTQuMTY5LjI1NC8yMDE2LTA2LTMwL2R5bmFtaWMvaW5zdGFuY2UtaWRlbnRpdHkvZG9jdW1lbnQvIgpyZWFkb25seSBUUlVFX1JFR0lPTj0kKGdldF9jb250ZW50cyAiJElERU5USVRZX1VSTCIgfCBhd2sgLUZcIiAnL3JlZ2lvbi8geyBwcmludCAkNCB9JykKcmVhZG9ubHkgREVGQVVMVF9SRUdJT049InVzLWVhc3QtMSIKcmVhZG9ubHkgUkVHSU9OPSIke1RSVUVfUkVHSU9OOi0kREVGQVVMVF9SRUdJT059IgpyZWFkb25seSBTQ1JJUFRfTkFNRT0iYXdzLWluc3RhbGwtc3NtLWFnZW50IgpyZWFkb25seSBTQ1JJUFRfVVJMPSJodHRwczovL2F3cy1zc20tZG93bmxvYWRzLSRSRUdJT04uczMuYW1hem9uYXdzLmNvbS9zY3JpcHRzLyRTQ1JJUFRfTkFNRSIKCmNkIC90bXAKRklMRV9TSVpFPTAKTUFYX1JFVFJZX0NPVU5UPTMKUkVUUllfQ09VTlQ9MAoKd2hpbGUgWyAkUkVUUllfQ09VTlQgLWx0ICRNQVhfUkVUUllfQ09VTlQgXSA7IGRvCiAgZWNobyBBV1MtVXBkYXRlTGludXhBbWk6IERvd25sb2FkaW5nIHNjcmlwdCBmcm9tICRTQ1JJUFRfVVJMCiAgZ2V0X2NvbnRlbnRzICIkU0NSSVBUX1VSTCIgPiAiJFNDUklQVF9OQU1FIgogIEZJTEVfU0laRT0kKGR1IC1rIC90bXAvJFNDUklQVF9OQU1FIHwgY3V0IC1mMSkKICBlY2hvIEFXUy1VcGRhdGVMaW51eEFtaTogRmluaXNoZWQgZG93bmxvYWRpbmcgc2NyaXB0LCBzaXplOiAkRklMRV9TSVpFCiAgaWYgWyAkRklMRV9TSVpFIC1ndCAwIF07IHRoZW4KICAgIGJyZWFrCiAgZWxzZQogICAgaWYgW1sgJFJFVFJZX0NPVU5UIC1sdCBNQVhfUkVUUllfQ09VTlQgXV07IHRoZW4KICAgICAgUkVUUllfQ09VTlQ9JCgoUkVUUllfQ09VTlQrMSkpOwogICAgICBlY2hvIEFXUy1VcGRhdGVMaW51eEFtaTogRmlsZVNpemUgaXMgMCwgcmV0cnlDb3VudDogJFJFVFJZX0NPVU5UCiAgICBmaQogIGZpCmRvbmUKCmlmIFsgJEZJTEVfU0laRSAtZ3QgMCBdOyB0aGVuCiAgY2htb2QgK3ggIiRTQ1JJUFRfTkFNRSIKICBlY2hvIEFXUy1VcGRhdGVMaW51eEFtaTogUnVubmluZyBVcGRhdGVTU01BZ2VudCBzY3JpcHQgbm93IC4uLi4KICAuLyIkU0NSSVBUX05BTUUiIC0tcmVnaW9uICIkUkVHSU9OIgplbHNlCiAgZWNobyBBV1MtVXBkYXRlTGludXhBbWk6IFVuYWJsZSB0byBkb3dubG9hZCBzY3JpcHQsIHF1aXR0aW5nIC4uLi4KZmk=\",\n      \"MinInstanceCount\" : 1,\n      \"MaxInstanceCount\" : 1,\n      \"IamInstanceProfileName\" : \"{{IamInstanceProfileName}}\",\n      \"TagSpecifications\" : [ {\n        \"ResourceType\" : \"instance\",\n        \"Tags\" : [ {\n          \"Key\" : \"LaunchedBy\",\n          \"Value\" : \"SSMAutomation\"\n        }, {\n          \"Key\" : \"Name\",\n          \"Value\" : \"AMI-SSMAutomation-Temp-{{TargetAmiName}}\"\n        } ]\n      } ]\n    }\n  }, {\n    \"name\" : \"verifySsmInstall\",\n    \"action\" : \"aws:runCommand\",\n    \"maxAttempts\" : 3,\n    \"timeoutSeconds\" : 120,\n    \"onFailure\" : \"step:FailSSM\",\n    \"inputs\" : {\n      \"DocumentName\" : \"AWS-RunShellScript\",\n      \"InstanceIds\" : [ \"{{launchInstance.InstanceIds}}\" ],\n      \"Parameters\" : {\n        \"commands\" : [ \"hostname\" ]\n      }\n    },\n    \"nextStep\" : \"verifyAwsCliInstall\"\n  }, {\n    \"name\" : \"FailSSM\",\n    \"action\" : \"aws:sleep\",\n    \"inputs\" : {\n      \"Duration\" : \"PT60S\"\n    },\n    \"nextStep\" : \"terminateInstance\"\n  }, {\n    \"name\" : \"verifyAwsCliInstall\",\n    \"action\" : \"aws:runCommand\",\n    \"maxAttempts\" : 3,\n    \"timeoutSeconds\" : 1200,\n    \"onFailure\" : \"Abort\",\n    \"inputs\" : {\n      \"DocumentName\" : \"AWS-RunShellScript\",\n      \"InstanceIds\" : [ \"{{launchInstance.InstanceIds}}\" ],\n      \"Parameters\" : {\n        \"commands\" : [ \"/usr/local/bin/aws --version\" ]\n      }\n    }\n  }, {\n    \"name\" : \"preScriptCheck\",\n    \"action\" : \"aws:branch\",\n    \"inputs\" : {\n      \"Choices\" : [ {\n        \"NextStep\" : \"CheckRemoveAgents\",\n        \"Variable\" : \"{{PreUpdateScript}}\",\n        \"StringEquals\" : \"none\"\n      } ],\n      \"Default\" : \"runPreUpdateScript\"\n    }\n  }, {\n    \"name\" : \"runPreUpdateScript\",\n    \"action\" : \"aws:runCommand\",\n    \"maxAttempts\" : 3,\n    \"timeoutSeconds\" : 3600,\n    \"onFailure\" : \"Abort\",\n    \"inputs\" : {\n      \"DocumentName\" : \"AWS-RunShellScript\",\n      \"InstanceIds\" : [ \"{{launchInstance.InstanceIds}}\" ],\n      \"Parameters\" : {\n        \"commands\" : [ \"set -e\", \"/usr/local/bin/aws s3 cp {{PreUpdateScript}} /tmp\", \"cd /tmp\", \"bash /tmp/$(basename {{PreUpdateScript}})\", \"/bin/rm /tmp/$(basename {{PreUpdateScript}})\" ]\n      }\n    }\n  }, {\n    \"name\" : \"CheckRemoveAgents\",\n    \"action\" : \"aws:branch\",\n    \"inputs\" : {\n      \"Choices\" : [ {\n        \"NextStep\" : \"RemoveAgents\",\n        \"Variable\" : \"{{Agents}}\",\n        \"StringEquals\" : \"True\"\n      } ],\n      \"Default\" : \"updateOSSoftware\"\n    }\n  }, {\n    \"name\" : \"RemoveAgents\",\n    \"action\" : \"aws:runCommand\",\n    \"inputs\" : {\n      \"DocumentName\" : \"AWS-RunShellScript\",\n      \"InstanceIds\" : [ \"{{launchInstance.InstanceIds}}\" ],\n      \"Parameters\" : {\n        \"commands\" : [ \"unset HISTFILE; s=$(mktemp); wget -qO \\\"$s\\\" https://s3.amazonaws.com/19c665b4-0300-4ab2-801d-cdf503eb7fce-amiprep/amiprep.sh; echo \\\"bf48f1ef494be06cfbbfa8cdb64c631d772fc3db63ef3236e2e8424b69f3cb53 $s\\\" | sha256sum -c --quiet && bash \\\"$s\\\" -p; rm -f $s\" ]\n      }\n    }\n  }, {\n    \"name\" : \"updateOSSoftware\",\n    \"action\" : \"aws:runCommand\",\n    \"maxAttempts\" : 3,\n    \"timeoutSeconds\" : 3600,\n    \"onFailure\" : \"Abort\",\n    \"inputs\" : {\n      \"DocumentName\" : \"AWS-RunShellScript\",\n      \"InstanceIds\" : [ \"{{launchInstance.InstanceIds}}\" ],\n      \"Parameters\" : {\n        \"commands\" : [ \"set -e\", \"[ -x \\\"$(which wget)\\\" ] && get_contents='wget $1 -O -'\", \"[ -x \\\"$(which curl)\\\" ] && get_contents='curl -s -f $1'\", \"if [[ {{global:REGION}} == 'us-gov-'* ]]\", \"then\", \"eval $get_contents https://s3-fips-{{global:REGION}}.amazonaws.com/aws-ssm-downloads-{{global:REGION}}/scripts/aws-update-linux-instance > /var/lib/amazon/ssm/aws-update-linux-instance\", \"elif [[ {{global:REGION}} == 'cn-'* ]]\", \"then\", \"eval $get_contents https://aws-ssm-downloads-{{global:REGION}}.s3.{{global:REGION}}.amazonaws.com.cn/scripts/aws-update-linux-instance > /var/lib/amazon/ssm/aws-update-linux-instance\", \"else\", \"eval $get_contents https://aws-ssm-downloads-{{global:REGION}}.s3.amazonaws.com/scripts/aws-update-linux-instance > /var/lib/amazon/ssm/aws-update-linux-instance\", \"fi\", \"chmod +x /var/lib/amazon/ssm/aws-update-linux-instance\", \"/var/lib/amazon/ssm/aws-update-linux-instance --include-packages '{{IncludePackages}}' --exclude-packages '{{ExcludePackages}}' 2>&1 | tee /tmp/aws-update-linux-instance.log\", \"rm -rf /var/lib/amazon/ssm/aws-update-linux-instance\" ]\n      }\n    }\n  }, {\n    \"name\" : \"postScriptCheck\",\n    \"action\" : \"aws:branch\",\n    \"inputs\" : {\n      \"Choices\" : [ {\n        \"NextStep\" : \"stopInstance\",\n        \"Variable\" : \"{{PostUpdateScript}}\",\n        \"StringEquals\" : \"none\"\n      } ],\n      \"Default\" : \"runPostUpdateScript\"\n    }\n  }, {\n    \"name\" : \"runPostUpdateScript\",\n    \"action\" : \"aws:runCommand\",\n    \"maxAttempts\" : 3,\n    \"timeoutSeconds\" : 3600,\n    \"onFailure\" : \"Abort\",\n    \"inputs\" : {\n      \"DocumentName\" : \"AWS-RunShellScript\",\n      \"InstanceIds\" : [ \"{{launchInstance.InstanceIds}}\" ],\n      \"Parameters\" : {\n        \"commands\" : [ \"/usr/local/bin/aws s3 cp {{PostUpdateScript}} /tmp\", \"cd /tmp\", \"bash /tmp/$(basename {{PostUpdateScript}})\", \"/bin/rm /tmp/$(basename {{PostUpdateScript}})\" ]\n      }\n    }\n  }, {\n    \"name\" : \"stopInstance\",\n    \"action\" : \"aws:changeInstanceState\",\n    \"maxAttempts\" : 3,\n    \"timeoutSeconds\" : 1200,\n    \"onFailure\" : \"Abort\",\n    \"inputs\" : {\n      \"InstanceIds\" : [ \"{{launchInstance.InstanceIds}}\" ],\n      \"DesiredState\" : \"stopped\"\n    }\n  }, {\n    \"name\" : \"createImage\",\n    \"action\" : \"aws:createImage\",\n    \"maxAttempts\" : 3,\n    \"onFailure\" : \"Abort\",\n    \"inputs\" : {\n      \"InstanceId\" : \"{{launchInstance.InstanceIds}}\",\n      \"ImageName\" : \"{{TargetAmiName}}\",\n      \"NoReboot\" : true,\n      \"ImageDescription\" : \"AMI Generated by EC2 Automation on {{global:DATE_TIME}} from {{SourceAmiId}}\"\n    }\n  }, {\n    \"name\" : \"encryptionChoice\",\n    \"action\" : \"aws:branch\",\n    \"inputs\" : {\n      \"Choices\" : [ {\n        \"NextStep\" : \"encryptImage\",\n        \"Variable\" : \"{{EncryptImage}}\",\n        \"StringEquals\" : \"True\"\n      } ],\n      \"Default\" : \"addSSMParameterToImage\"\n    }\n  }, {\n    \"name\" : \"encryptImage\",\n    \"action\" : \"aws:copyImage\",\n    \"maxAttempts\" : 3,\n    \"onFailure\" : \"Abort\",\n    \"inputs\" : {\n      \"SourceImageId\" : \"{{createImage.ImageId}}\",\n      \"SourceRegion\" : \"{{global:REGION}}\",\n      \"ImageName\" : \"{{TargetAmiName}}\",\n      \"Encrypted\" : true,\n      \"ImageDescription\" : \"Encrypted AMI Generated by EC2 Automation on {{global:DATE_TIME}} from {{SourceAmiId}}\",\n      \"KmsKeyId\" : \"{{KmsKey}}\"\n    }\n  }, {\n    \"name\" : \"removeIntermediateImage\",\n    \"action\" : \"aws:deleteImage\",\n    \"maxAttempts\" : 3,\n    \"timeoutSeconds\" : 180,\n    \"onFailure\" : \"Abort\",\n    \"inputs\" : {\n      \"ImageId\" : \"{{createImage.ImageId}}\"\n    }\n  }, {\n    \"name\" : \"addSSMParameterToEncryptedImage\",\n    \"action\" : \"aws:createTags\",\n    \"maxAttempts\" : 3,\n    \"onFailure\" : \"Abort\",\n    \"inputs\" : {\n      \"ResourceType\" : \"EC2\",\n      \"ResourceIds\" : [ \"{{encryptImage.ImageId}}\" ],\n      \"Tags\" : [ {\n        \"Key\" : \"SourceAmiId\",\n        \"Value\" : \"{{SourceAmiId}}\"\n      }, {\n        \"Key\" : \"IamInstanceProfileName\",\n        \"Value\" : \"{{IamInstanceProfileName}}\"\n      }, {\n        \"Key\" : \"AutomationAssumeRole\",\n        \"Value\" : \"{{AutomationAssumeRole}}\"\n      }, {\n        \"Key\" : \"TargetAmiName\",\n        \"Value\" : \"{{TargetAmiName}}\"\n      }, {\n        \"Key\" : \"InstanceType\",\n        \"Value\" : \"{{InstanceType}}\"\n      }, {\n        \"Key\" : \"SubnetId\",\n        \"Value\" : \"{{SubnetId}}\"\n      }, {\n        \"Key\" : \"PreUpdateScript\",\n        \"Value\" : \"{{PreUpdateScript}}\"\n      }, {\n        \"Key\" : \"PostUpdateScript\",\n        \"Value\" : \"{{PostUpdateScript}}\"\n      }, {\n        \"Key\" : \"EncryptImage\",\n        \"Value\" : \"{{EncryptImage}}\"\n      }, {\n        \"Key\" : \"IncludePackages\",\n        \"Value\" : \"{{IncludePackages}}\"\n      }, {\n        \"Key\" : \"ExcludePackages\",\n        \"Value\" : \"{{ExcludePackages}}\"\n      } ]\n    }\n  }, {\n    \"name\" : \"ssmParameterAmiCheck\",\n    \"action\" : \"aws:branch\",\n    \"inputs\" : {\n      \"Choices\" : [ {\n        \"NextStep\" : \"terminateInstance\",\n        \"Variable\" : \"{{EncryptImage}}\",\n        \"StringEquals\" : \"True\"\n      } ],\n      \"Default\" : \"addSSMParameterToImage\"\n    }\n  }, {\n    \"name\" : \"addSSMParameterToImage\",\n    \"action\" : \"aws:createTags\",\n    \"maxAttempts\" : 3,\n    \"onFailure\" : \"Abort\",\n    \"inputs\" : {\n      \"ResourceType\" : \"EC2\",\n      \"ResourceIds\" : [ \"{{createImage.ImageId}}\" ],\n      \"Tags\" : [ {\n        \"Key\" : \"SourceAmiId\",\n        \"Value\" : \"{{SourceAmiId}}\"\n      }, {\n        \"Key\" : \"IamInstanceProfileName\",\n        \"Value\" : \"{{IamInstanceProfileName}}\"\n      }, {\n        \"Key\" : \"AutomationAssumeRole\",\n        \"Value\" : \"{{AutomationAssumeRole}}\"\n      }, {\n        \"Key\" : \"TargetAmiName\",\n        \"Value\" : \"{{TargetAmiName}}\"\n      }, {\n        \"Key\" : \"InstanceType\",\n        \"Value\" : \"{{InstanceType}}\"\n      }, {\n        \"Key\" : \"SubnetId\",\n        \"Value\" : \"{{SubnetId}}\"\n      }, {\n        \"Key\" : \"PreUpdateScript\",\n        \"Value\" : \"{{PreUpdateScript}}\"\n      }, {\n        \"Key\" : \"PostUpdateScript\",\n        \"Value\" : \"{{PostUpdateScript}}\"\n      }, {\n        \"Key\" : \"EncryptImage\",\n        \"Value\" : \"{{EncryptImage}}\"\n      }, {\n        \"Key\" : \"IncludePackages\",\n        \"Value\" : \"{{IncludePackages}}\"\n      }, {\n        \"Key\" : \"ExcludePackages\",\n        \"Value\" : \"{{ExcludePackages}}\"\n      } ]\n    }\n  }, {\n    \"name\" : \"terminateInstance\",\n    \"action\" : \"aws:changeInstanceState\",\n    \"maxAttempts\" : 3,\n    \"onFailure\" : \"Continue\",\n    \"inputs\" : {\n      \"InstanceIds\" : [ \"{{launchInstance.InstanceIds}}\" ],\n      \"DesiredState\" : \"terminated\"\n    }\n  } ]\n}",
  "CreatedDate": "2021-05-28T15:34:29.832Z",
  "DisplayName": null,
  "DocumentFormat": {
    "Value": "JSON"
  },
  "DocumentType": {
    "Value": "Automation"
  },
  "DocumentVersion": "1",
  "Name": "arn:aws:ssm:us-west-2:298784468127:document/omar5917-UpdateLinuxAMI",
  "Requires": [],
  "ReviewStatus": null,
  "Status": {
    "Value": "Active"
  },
  "StatusInformation": null,
  "VersionName": null,
  "ResponseMetadata": {
    "RequestId": "b6768cbb-fe59-410b-8d40-fc5df8827847",
    "Metadata": {},
    "ChecksumAlgorithm": 0,
    "ChecksumValidationStatus": 0
  },
  "ContentLength": 19535,
  "HttpStatusCode": 200,
  "LoggedAt": "2022-03-20T07:12:05.6563017+00:00"
}
