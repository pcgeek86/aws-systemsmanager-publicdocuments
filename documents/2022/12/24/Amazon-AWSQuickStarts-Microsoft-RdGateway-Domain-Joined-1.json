{
  "AttachmentsContent": [],
  "Content": "{\n  \"schemaVersion\" : \"1.0\",\n  \"description\" : \"This template is intended to be installed into an existing VPC with two public subnets and an Active Directory domain. It will create an auto-scaling group of RD Gateway instances in the public VPC subnets. **WARNING** This template creates Amazon EC2 Windows instance and related resources. You will be billed for the AWS resources used if you create a stack from this template. (qs-1qup6raf2)\",\n  \"templateBody\" : {\n    \"AWSTemplateFormatVersion\" : \"2010-09-09\",\n    \"Description\" : \"This template is intended to be installed into an existing VPC with two public subnets and an Active Directory domain. It will create an auto-scaling group of RD Gateway instances in the public VPC subnets. **WARNING** This template creates Amazon EC2 Windows instance and related resources. You will be billed for the AWS resources used if you create a stack from this template. (qs-1qup6raf2)\",\n    \"Metadata\" : {\n      \"QuickStartDocumentation\" : {\n        \"EntrypointName\" : \"Parameters for launching into an existing VPC (domain-joined)\"\n      },\n      \"AWS::CloudFormation::Interface\" : {\n        \"ParameterGroups\" : [ {\n          \"Label\" : {\n            \"default\" : \"Network configuration\"\n          },\n          \"Parameters\" : [ \"VPCID\", \"PublicSubnet1ID\", \"PublicSubnet2ID\", \"RDGWCIDR\" ]\n        }, {\n          \"Label\" : {\n            \"default\" : \"Amazon EC2 configuration\"\n          },\n          \"Parameters\" : [ \"KeyPairName\", \"RDGWInstanceType\", \"LatestAmiId\" ]\n        }, {\n          \"Label\" : {\n            \"default\" : \"Microsoft Active Directory configuration\"\n          },\n          \"Parameters\" : [ \"DomainDNSName\", \"DomainNetBIOSName\", \"DomainMemberSGID\", \"DomainAdminUser\", \"DomainAdminPassword\" ]\n        }, {\n          \"Label\" : {\n            \"default\" : \"Microsoft Remote Desktop Gateway configuration\"\n          },\n          \"Parameters\" : [ \"NumberOfRDGWHosts\" ]\n        }, {\n          \"Label\" : {\n            \"default\" : \"AWS Quick Start configuration\"\n          },\n          \"Parameters\" : [ \"QSS3BucketName\", \"QSS3KeyPrefix\", \"QSS3BucketRegion\" ]\n        } ],\n        \"ParameterLabels\" : {\n          \"DomainAdminPassword\" : {\n            \"default\" : \"Domain admin password\"\n          },\n          \"DomainAdminUser\" : {\n            \"default\" : \"Domain admin user name\"\n          },\n          \"DomainDNSName\" : {\n            \"default\" : \"Domain DNS name\"\n          },\n          \"DomainMemberSGID\" : {\n            \"default\" : \"Domain member security group ID\"\n          },\n          \"DomainNetBIOSName\" : {\n            \"default\" : \"Domain NetBIOS name\"\n          },\n          \"KeyPairName\" : {\n            \"default\" : \"Key pair name\"\n          },\n          \"LatestAmiId\" : {\n            \"default\" : \"SSM parameter to grab latest AMI ID\"\n          },\n          \"NumberOfRDGWHosts\" : {\n            \"default\" : \"Number of RDGW hosts\"\n          },\n          \"PublicSubnet1ID\" : {\n            \"default\" : \"Public subnet 1 ID\"\n          },\n          \"PublicSubnet2ID\" : {\n            \"default\" : \"Public subnet 2 ID\"\n          },\n          \"QSS3BucketName\" : {\n            \"default\" : \"Quick Start S3 bucket name\"\n          },\n          \"QSS3KeyPrefix\" : {\n            \"default\" : \"Quick Start S3 key prefix\"\n          },\n          \"QSS3BucketRegion\" : {\n            \"default\" : \"Quick Start S3 bucket Region\"\n          },\n          \"RDGWInstanceType\" : {\n            \"default\" : \"Remote Desktop Gateway instance type\"\n          },\n          \"RDGWCIDR\" : {\n            \"default\" : \"Allowed Remote Desktop Gateway external access CIDR\"\n          },\n          \"VPCID\" : {\n            \"default\" : \"VPC ID\"\n          }\n        }\n      }\n    },\n    \"Parameters\" : {\n      \"DomainAdminPassword\" : {\n        \"Description\" : \"Password for the domain admin user. Must be at least 8 characters containing letters, numbers and symbols.\",\n        \"Type\" : \"String\",\n        \"MinLength\" : \"8\",\n        \"MaxLength\" : \"32\",\n        \"AllowedPattern\" : \"(?=^.{6,255}$)((?=.*\\\\d)(?=.*[A-Z])(?=.*[a-z])|(?=.*\\\\d)(?=.*[^A-Za-z0-9])(?=.*[a-z])|(?=.*[^A-Za-z0-9])(?=.*[A-Z])(?=.*[a-z])|(?=.*\\\\d)(?=.*[A-Z])(?=.*[^A-Za-z0-9]))^.*\",\n        \"NoEcho\" : \"true\"\n      },\n      \"DomainAdminUser\" : {\n        \"Description\" : \"User name for the domain administrator. This parameter is separate from the default administrator account.\",\n        \"Type\" : \"String\",\n        \"Default\" : \"Admin\",\n        \"MinLength\" : \"5\",\n        \"MaxLength\" : \"25\",\n        \"AllowedPattern\" : \"[a-zA-Z0-9]*\"\n      },\n      \"DomainNetBIOSName\" : {\n        \"AllowedPattern\" : \"[a-zA-Z0-9\\\\-]+\",\n        \"Description\" : \"NetBIOS name of the domain (up to 15 characters) for users of earlier versions of Windows (for example, EXAMPLE).\",\n        \"MaxLength\" : \"15\",\n        \"MinLength\" : \"1\",\n        \"Type\" : \"String\"\n      },\n      \"DomainDNSName\" : {\n        \"Description\" : \"Fully qualified domain name (FQDN) such as example.com.\",\n        \"Type\" : \"String\",\n        \"MinLength\" : \"2\",\n        \"MaxLength\" : \"255\",\n        \"AllowedPattern\" : \"[a-zA-Z0-9\\\\-]+\\\\..+\"\n      },\n      \"DomainMemberSGID\" : {\n        \"Description\" : \"ID of the domain member security group (for example, sg-7f16e910).\",\n        \"Type\" : \"AWS::EC2::SecurityGroup::Id\"\n      },\n      \"KeyPairName\" : {\n        \"Description\" : \"Public/private key pairs allow you to securely connect to your instance after it launches.\",\n        \"Type\" : \"AWS::EC2::KeyPair::KeyName\"\n      },\n      \"LatestAmiId\" : {\n        \"Type\" : \"AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>\",\n        \"Default\" : \"/aws/service/ami-windows-latest/Windows_Server-2016-English-Full-Base\"\n      },\n      \"NumberOfRDGWHosts\" : {\n        \"AllowedValues\" : [ \"1\", \"2\", \"3\", \"4\" ],\n        \"Default\" : \"1\",\n        \"Description\" : \"Enter the number of Remote Desktop Gateway hosts to create.\",\n        \"Type\" : \"String\"\n      },\n      \"PublicSubnet1ID\" : {\n        \"Description\" : \"ID of the public subnet 1 that you want to provision the first Remote Desktop Gateway into (for example, subnet-a0246dcd).\",\n        \"Type\" : \"AWS::EC2::Subnet::Id\"\n      },\n      \"PublicSubnet2ID\" : {\n        \"Description\" : \"ID of the public subnet 2 you want to provision the second Remote Desktop Gateway into (for example, subnet-e3246d8e).\",\n        \"Type\" : \"AWS::EC2::Subnet::Id\"\n      },\n      \"QSS3BucketName\" : {\n        \"AllowedPattern\" : \"^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$\",\n        \"ConstraintDescription\" : \"The Quick Start bucket name can include numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen (-).\",\n        \"Default\" : \"aws-quickstart\",\n        \"Description\" : \"Name of the S3 bucket for your copy of the Quick Start assets. Keep the default name unless you are customizing the template. Changing the name updates code references to point to a new Quick Start location. This name can include numbers, lowercase letters, uppercase letters, and hyphens, but do not start or end with a hyphen (-). See https://aws-quickstart.github.io/option1.html.\",\n        \"Type\" : \"String\"\n      },\n      \"QSS3KeyPrefix\" : {\n        \"AllowedPattern\" : \"^[0-9a-zA-Z-/]*$\",\n        \"ConstraintDescription\" : \"The Quick Start S3 key prefix can include numbers, lowercase letters, uppercase letters, hyphens (-), and forward slash (/).\",\n        \"Default\" : \"quickstart-microsoft-rdgateway/\",\n        \"Description\" : \"S3 key prefix that is used to simulate a directory for your copy of the Quick Start assets. Keep the default prefix unless you are customizing the template. Changing this prefix updates code references to point to a new Quick Start location. This prefix can include numbers, lowercase letters, uppercase letters, hyphens (-), and forward slashes (/). See https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingMetadata.html and https://aws-quickstart.github.io/option1.html.\",\n        \"Type\" : \"String\"\n      },\n      \"QSS3BucketRegion\" : {\n        \"Default\" : \"us-east-1\",\n        \"Description\" : \"'AWS Region where the Quick Start S3 bucket (QSS3BucketName) is hosted. Keep the default Region unless you are customizing the template. Changing this Region updates code references to point to a new Quick Start location. When using your own bucket, specify the Region. See https://aws-quickstart.github.io/option1.html.'\",\n        \"Type\" : \"String\"\n      },\n      \"RDGWInstanceType\" : {\n        \"Description\" : \"Amazon EC2 instance type for the Remote Desktop Gateway instances.\",\n        \"Type\" : \"String\",\n        \"Default\" : \"t3.2xlarge\",\n        \"AllowedValues\" : [ \"t2.small\", \"t2.medium\", \"t2.large\", \"t3.micro\", \"t3.small\", \"t3.medium\", \"t3.large\", \"t3.xlarge\", \"t3.2xlarge\", \"t3a.micro\", \"t3a.small\", \"t3a.medium\", \"t3a.large\", \"t3a.xlarge\", \"t3a.2xlarge\", \"m5.large\", \"m5.xlarge\", \"m5.2xlarge\", \"m5.4xlarge\", \"m5a.large\", \"m5a.xlarge\", \"m5a.2xlarge\" ]\n      },\n      \"RDGWCIDR\" : {\n        \"AllowedPattern\" : \"^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\\\/([0-9]|[1-2][0-9]|3[0-2]))$\",\n        \"Description\" : \"Allowed CIDR Block for external access to the Remote Desktop Gateways.\",\n        \"Type\" : \"String\"\n      },\n      \"VPCID\" : {\n        \"Description\" : \"ID of the VPC (for example, vpc-0343606e).\",\n        \"Type\" : \"AWS::EC2::VPC::Id\"\n      }\n    },\n    \"Rules\" : {\n      \"SubnetsInVPC\" : {\n        \"Assertions\" : [ {\n          \"Assert\" : {\n            \"Fn::EachMemberIn\" : [ {\n              \"Fn::ValueOfAll\" : [ \"AWS::EC2::Subnet::Id\", \"VpcId\" ]\n            }, {\n              \"Fn::RefAll\" : \"AWS::EC2::VPC::Id\"\n            } ]\n          },\n          \"AssertDescription\" : \"All subnets must be in the VPC.\"\n        } ]\n      },\n      \"CheckSupportedInstances\" : {\n        \"RuleCondition\" : {\n          \"Fn::Contains\" : [ [ \"m4.large\", \"m4.xlarge\", \"m4.2xlarge\", \"m4.4xlarge\" ], {\n            \"Ref\" : \"RDGWInstanceType\"\n          } ]\n        },\n        \"Assertions\" : [ {\n          \"Assert\" : {\n            \"Fn::Not\" : [ {\n              \"Fn::Contains\" : [ [ \"eu-west-3\" ], {\n                \"Ref\" : \"AWS::Region\"\n              } ]\n            } ]\n          },\n          \"AssertDescription\" : \"M4 instances are not available in the Paris region.\"\n        } ]\n      }\n    },\n    \"Conditions\" : {\n      \"UsingDefaultBucket\" : {\n        \"Fn::Equals\" : [ {\n          \"Ref\" : \"QSS3BucketName\"\n        }, \"aws-quickstart\" ]\n      }\n    },\n    \"Resources\" : {\n      \"DomainJoinSecrets\" : {\n        \"Type\" : \"AWS::SecretsManager::Secret\",\n        \"Properties\" : {\n          \"Name\" : {\n            \"Fn::Sub\" : \"DomainJoinSecrets-${AWS::StackName}\"\n          },\n          \"Description\" : \"Secrets to join AD domain.\",\n          \"SecretString\" : {\n            \"Fn::Sub\" : \"{\\\"username\\\":\\\"${DomainNetBIOSName}\\\\\\\\${DomainAdminUser}\\\",\\\"password\\\":\\\"${DomainAdminPassword}\\\"}\"\n          }\n        }\n      },\n      \"SetupConfigurationDoc\" : {\n        \"Type\" : \"AWS::SSM::Document\",\n        \"Properties\" : {\n          \"DocumentType\" : \"Automation\",\n          \"Content\" : {\n            \"schemaVersion\" : \"0.3\",\n            \"description\" : \"Configure instances on launch.\",\n            \"assumeRole\" : \"{{AutomationAssumeRole}}\",\n            \"parameters\" : {\n              \"InstanceId\" : {\n                \"description\" : \"ID of the instance.\",\n                \"type\" : \"String\"\n              },\n              \"ASGName\" : {\n                \"description\" : \"Auto Scaling group name.\",\n                \"type\" : \"String\"\n              },\n              \"LCHName\" : {\n                \"description\" : \"Life cycle hook name.\",\n                \"type\" : \"String\"\n              },\n              \"DomainDNSName\" : {\n                \"default\" : \"example.com\",\n                \"description\" : \"Fully qualified domain name (FQDN) of the forest root domain (for example, example.com).\",\n                \"type\" : \"String\"\n              },\n              \"DomainNetBIOSName\" : {\n                \"default\" : \"example\",\n                \"description\" : \"NetBIOS name of the domain (up to 15 characters) for users of earlier versions of Windows (for example, EXAMPLE).\",\n                \"type\" : \"String\"\n              },\n              \"QSS3BucketName\" : {\n                \"default\" : \"aws-quickstart\",\n                \"description\" : \"Name of the S3 bucket for your copy of the Quick Start assets. Keep the default name unless you are customizing the template. Changing the name updates code references to point to a new Quick Start location. This name can include numbers, lowercase letters, uppercase letters, and hyphens, but do not start or end with a hyphen (-). See https://aws-quickstart.github.io/option1.html.\",\n                \"type\" : \"String\"\n              },\n              \"QSS3KeyPrefix\" : {\n                \"default\" : \"quickstart-microsoft-rdgateway/\",\n                \"description\" : \"S3 key prefix that is used to simulate a directory for your copy of the Quick Start assets. Keep the default prefix unless you are customizing the template. Changing this prefix updates code references to point to a new Quick Start location. This prefix can include numbers, lowercase letters, uppercase letters, hyphens (-), and forward slashes (/). See https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingMetadata.html and https://aws-quickstart.github.io/option1.html.\",\n                \"type\" : \"String\"\n              },\n              \"URLSuffix\" : {\n                \"default\" : \"amazonaws.com\",\n                \"description\" : \"AWS URL suffix.\",\n                \"type\" : \"String\"\n              },\n              \"AutomationAssumeRole\" : {\n                \"default\" : \"\",\n                \"description\" : \"(Optional) The ARN of the role that allows automation to perform the actions on your behalf.\",\n                \"type\" : \"String\"\n              }\n            },\n            \"mainSteps\" : [ {\n              \"name\" : \"waitUntilInstanceStateRunning\",\n              \"action\" : \"aws:waitForAwsResourceProperty\",\n              \"timeoutSeconds\" : 600,\n              \"inputs\" : {\n                \"Service\" : \"ec2\",\n                \"Api\" : \"DescribeInstanceStatus\",\n                \"InstanceIds\" : [ \"{{InstanceId}}\" ],\n                \"PropertySelector\" : \"$.InstanceStatuses[0].InstanceState.Name\",\n                \"DesiredValues\" : [ \"running\" ]\n              }\n            }, {\n              \"name\" : \"assertInstanceStateRunning\",\n              \"action\" : \"aws:assertAwsResourceProperty\",\n              \"inputs\" : {\n                \"Service\" : \"ec2\",\n                \"Api\" : \"DescribeInstanceStatus\",\n                \"InstanceIds\" : [ \"{{InstanceId}}\" ],\n                \"PropertySelector\" : \"$.InstanceStatuses[0].InstanceState.Name\",\n                \"DesiredValues\" : [ \"running\" ]\n              }\n            }, {\n              \"name\" : \"InstallDSCmodules\",\n              \"action\" : \"aws:runCommand\",\n              \"onFailure\" : \"step:abandonHookAction\",\n              \"inputs\" : {\n                \"DocumentName\" : \"AWS-RunPowerShellScript\",\n                \"InstanceIds\" : [ \"{{InstanceId}}\" ],\n                \"CloudWatchOutputConfig\" : {\n                  \"CloudWatchOutputEnabled\" : \"true\",\n                  \"CloudWatchLogGroupName\" : {\n                    \"Fn::Sub\" : \"/QuickStart/rdgateway/${AWS::StackName}/SetupConfiguration\"\n                  }\n                },\n                \"Parameters\" : {\n                  \"commands\" : [ \"<#\\n    .SYNOPSIS\\n    install-dsc-modules.ps1\\n\\n    .DESCRIPTION\\n    This script downloads and installs the required PowerShell modules to create and configure Active Directory Domain Controllers. \\n    It also creates a self signed certificate to be uses with PowerShell DSC.\\n    \\n    .EXAMPLE\\n    .\\\\install-dsc-modules\\n#>\\n\\n[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12\\n\\nWrite-Output 'Installing NuGet Package Provider'\\nTry {\\n    Install-PackageProvider -Name 'NuGet' -MinimumVersion '2.8.5' -Force -ErrorAction Stop\\n} Catch [System.Exception] {\\n    Write-Output \\\"Failed to install NuGet Package Provider $_\\\"\\n    Exit 1\\n}\\n\\nWrite-Output 'Setting PSGallery Respository to trusted'\\nTry {\\n    Set-PSRepository -Name 'PSGallery' -InstallationPolicy 'Trusted' -ErrorAction Stop\\n} Catch [System.Exception] {\\n    Write-Output \\\"Failed to set PSGallery Respository to trusted $_\\\"\\n    Exit 1\\n}\\n\\nWrite-Output 'Installing the needed Powershell DSC modules for this Quick Start'\\n$Modules = @(\\n    @{\\n        Name = 'ActiveDirectoryDsc'\\n        Version = '6.0.1'\\n    },\\n    @{\\n        Name = 'ComputerManagementDsc'\\n        Version = '8.4.0'\\n    }\\n)\\n\\nForeach ($Module in $Modules) {\\n    Try {\\n        Install-Module -Name $Module.Name -RequiredVersion $Module.Version -ErrorAction Stop\\n    } Catch [System.Exception] {\\n        Write-Output \\\"Failed to Import Modules $_\\\"\\n        Exit 1\\n    }\\n}\\n\" ]\n                }\n              }\n            }, {\n              \"name\" : \"GenerateDomainJoinMof\",\n              \"action\" : \"aws:runCommand\",\n              \"onFailure\" : \"step:abandonHookAction\",\n              \"inputs\" : {\n                \"DocumentName\" : \"AWS-RunPowerShellScript\",\n                \"InstanceIds\" : [ \"{{InstanceId}}\" ],\n                \"CloudWatchOutputConfig\" : {\n                  \"CloudWatchOutputEnabled\" : \"true\",\n                  \"CloudWatchLogGroupName\" : {\n                    \"Fn::Sub\" : \"/QuickStart/rdgateway/${AWS::StackName}/SetupConfiguration\"\n                  }\n                },\n                \"Parameters\" : {\n                  \"commands\" : [ {\n                    \"Fn::Sub\" : \"[CmdletBinding()]\\n# Incoming Parameters for Script, CloudFormation\\\\SSM Parameters being passed in\\nparam()\\n\\n# Creating Configuration Data Block that allows plain test password \\n# for DSC Configuration Processing\\n$ConfigurationData = @{\\n    AllNodes = @(\\n        @{\\n            NodeName=\\\"*\\\"\\n            PSDscAllowPlainTextPassword = $true\\n            PSDscAllowDomainUser = $true\\n        },\\n        @{\\n            NodeName = 'localhost'\\n        }\\n    )\\n}\\n\\nConfiguration DomainJoin {\\n    $ss = ConvertTo-SecureString -String 'stringdoesntmatter' -AsPlaintext -Force\\n    $Credentials = New-Object PSCredential('${DomainJoinSecrets}', $ss)\\n\\n    Import-Module -Name PSDesiredStateConfiguration\\n    Import-Module -Name ComputerManagementDsc\\n    \\n    Import-DscResource -Module PSDesiredStateConfiguration\\n    Import-DscResource -Module ComputerManagementDsc\\n\\n    Node 'localhost' {\\n\\n        Computer JoinDomain {\\n            Name = $env:COMPUTERNAME\\n            DomainName = '{{DomainDNSName}}'\\n            Credential = $Credentials\\n        }\\n    }\\n}\\n\\nDomainJoin -OutputPath 'C:\\\\AWSQuickstart\\\\DomainJoin' -ConfigurationData $ConfigurationData\\n\"\n                  } ]\n                }\n              }\n            }, {\n              \"name\" : \"applyDomainJoin\",\n              \"action\" : \"aws:runCommand\",\n              \"onFailure\" : \"step:abandonHookAction\",\n              \"inputs\" : {\n                \"DocumentName\" : \"AWS-ApplyDSCMofs\",\n                \"InstanceIds\" : [ \"{{InstanceId}}\" ],\n                \"CloudWatchOutputConfig\" : {\n                  \"CloudWatchOutputEnabled\" : \"true\",\n                  \"CloudWatchLogGroupName\" : {\n                    \"Fn::Sub\" : \"/QuickStart/rdgateway/${AWS::StackName}/SetupConfiguration\"\n                  }\n                },\n                \"Parameters\" : {\n                  \"MofsToApply\" : [ \"C:\\\\AWSQuickstart\\\\DomainJoin\\\\localhost.mof\" ],\n                  \"ServicePath\" : [ \"default\" ],\n                  \"MofOperationMode\" : [ \"Apply\" ],\n                  \"ModuleSourceBucketName\" : [ \"NONE\" ],\n                  \"AllowPSGalleryModuleSource\" : [ \"True\" ],\n                  \"RebootBehavior\" : [ \"AfterMof\" ],\n                  \"UseComputerNameForReporting\" : [ \"False\" ],\n                  \"EnableVerboseLogging\" : [ \"False\" ],\n                  \"EnableDebugLogging\" : [ \"False\" ]\n                }\n              }\n            }, {\n              \"name\" : \"installRDP\",\n              \"action\" : \"aws:runCommand\",\n              \"onFailure\" : \"step:abandonHookAction\",\n              \"inputs\" : {\n                \"DocumentName\" : \"AWS-RunPowerShellScript\",\n                \"InstanceIds\" : [ \"{{InstanceId}}\" ],\n                \"CloudWatchOutputConfig\" : {\n                  \"CloudWatchOutputEnabled\" : \"true\",\n                  \"CloudWatchLogGroupName\" : {\n                    \"Fn::Sub\" : \"/QuickStart/rdgateway/${AWS::StackName}/SetupConfiguration\"\n                  }\n                },\n                \"Parameters\" : {\n                  \"commands\" : [ \"Write-Output 'Installing RD Gateway components'\\nTry {\\n  Install-WindowsFeature RDS-Gateway,RSAT-RDS-Gateway\\n} Catch [System.Exception] {\\n  Write-Output \\\"Failed to install RD Gateway components $_\\\"\\n  Exit 1\\n}\\n\" ]\n                }\n              }\n            }, {\n              \"name\" : \"configurerdgw\",\n              \"action\" : \"aws:runCommand\",\n              \"onFailure\" : \"step:abandonHookAction\",\n              \"inputs\" : {\n                \"DocumentName\" : \"AWS-RunRemoteScript\",\n                \"InstanceIds\" : [ \"{{InstanceId}}\" ],\n                \"CloudWatchOutputConfig\" : {\n                  \"CloudWatchOutputEnabled\" : \"true\",\n                  \"CloudWatchLogGroupName\" : {\n                    \"Fn::Sub\" : \"/QuickStart/rdgateway/${AWS::StackName}/SetupConfiguration\"\n                  }\n                },\n                \"Parameters\" : {\n                  \"sourceType\" : \"S3\",\n                  \"sourceInfo\" : {\n                    \"Fn::Sub\" : [ \"{\\\"path\\\": \\\"https://${S3Bucket}.s3.${S3Region}.{{URLSuffix}}/{{QSS3KeyPrefix}}scripts/Initialize-RDGW.ps1\\\"}\", {\n                      \"S3Bucket\" : {\n                        \"Fn::If\" : [ \"UsingDefaultBucket\", {\n                          \"Fn::Sub\" : \"${QSS3BucketName}-${AWS::Region}\"\n                        }, {\n                          \"Ref\" : \"QSS3BucketName\"\n                        } ]\n                      },\n                      \"S3Region\" : {\n                        \"Fn::If\" : [ \"UsingDefaultBucket\", {\n                          \"Ref\" : \"AWS::Region\"\n                        }, {\n                          \"Ref\" : \"QSS3BucketRegion\"\n                        } ]\n                      }\n                    } ]\n                  },\n                  \"commandLine\" : \"./Initialize-RDGW.ps1 -DomainDNSName {{DomainDNSName}} -DomainNetBiosName {{DomainNetBIOSName}} -GroupName 'domain admins'\"\n                }\n              }\n            }, {\n              \"name\" : \"completeHookAction\",\n              \"action\" : \"aws:executeAwsApi\",\n              \"isEnd\" : true,\n              \"inputs\" : {\n                \"Service\" : \"autoscaling\",\n                \"Api\" : \"CompleteLifecycleAction\",\n                \"AutoScalingGroupName\" : \"{{ASGName}}\",\n                \"InstanceId\" : \"{{InstanceId}}\",\n                \"LifecycleActionResult\" : \"CONTINUE\",\n                \"LifecycleHookName\" : \"{{LCHName}}\"\n              }\n            }, {\n              \"name\" : \"abandonHookAction\",\n              \"action\" : \"aws:executeAwsApi\",\n              \"isEnd\" : true,\n              \"inputs\" : {\n                \"Service\" : \"autoscaling\",\n                \"Api\" : \"CompleteLifecycleAction\",\n                \"AutoScalingGroupName\" : \"{{ASGName}}\",\n                \"InstanceId\" : \"{{InstanceId}}\",\n                \"LifecycleActionResult\" : \"ABANDON\",\n                \"LifecycleHookName\" : \"{{LCHName}}\"\n              }\n            } ]\n          }\n        }\n      },\n      \"RemoveConfigurationDoc\" : {\n        \"Type\" : \"AWS::SSM::Document\",\n        \"Properties\" : {\n          \"DocumentType\" : \"Automation\",\n          \"Content\" : {\n            \"schemaVersion\" : \"0.3\",\n            \"description\" : \"Remove EC2 Instances from AD domain.\",\n            \"assumeRole\" : \"{{AutomationAssumeRole}}\",\n            \"parameters\" : {\n              \"InstanceId\" : {\n                \"description\" : \"ID of the instance.\",\n                \"type\" : \"String\"\n              },\n              \"ASGName\" : {\n                \"description\" : \"Auto Scaling group name.\",\n                \"type\" : \"String\"\n              },\n              \"LCHName\" : {\n                \"description\" : \"Life cycle hook name.\",\n                \"type\" : \"String\"\n              },\n              \"AutomationAssumeRole\" : {\n                \"default\" : \"\",\n                \"description\" : \"(Optional) The ARN of the role that allows automation to perform the actions on your behalf.\",\n                \"type\" : \"String\"\n              }\n            },\n            \"mainSteps\" : [ {\n              \"name\" : \"GenerateRemoveJoinMof\",\n              \"action\" : \"aws:runCommand\",\n              \"onFailure\" : \"step:abandonHookAction\",\n              \"inputs\" : {\n                \"DocumentName\" : \"AWS-RunPowerShellScript\",\n                \"InstanceIds\" : [ \"{{InstanceId}}\" ],\n                \"CloudWatchOutputConfig\" : {\n                  \"CloudWatchOutputEnabled\" : \"true\",\n                  \"CloudWatchLogGroupName\" : {\n                    \"Fn::Sub\" : \"/QuickStart/rdgateway/${AWS::StackName}/RemoveConfiguration\"\n                  }\n                },\n                \"Parameters\" : {\n                  \"commands\" : [ {\n                    \"Fn::Sub\" : \"[CmdletBinding()]\\n# Incoming Parameters for Script, CloudFormation\\\\SSM Parameters being passed in\\nparam()\\n\\n$ConfigurationData = @{\\n    AllNodes = @(\\n        @{\\n            NodeName=\\\"*\\\"\\n            PSDscAllowPlainTextPassword = $true\\n            PSDscAllowDomainUser = $true\\n        },\\n        @{\\n            NodeName = 'localhost'\\n        }\\n    )\\n}\\n\\nConfiguration RemoveDomain {\\n\\n    $ss = ConvertTo-SecureString -String 'stringdoesntmatter' -AsPlaintext -Force\\n    $Credentials = New-Object PSCredential(\\\"${DomainJoinSecrets}\\\", $ss)\\n    \\n\\n    Import-Module -Name PSDesiredStateConfiguration\\n    Import-Module -Name ComputerManagementDsc\\n    Import-Module -Name ActiveDirectoryDsc\\n    \\n    Import-DscResource -Module PSDesiredStateConfiguration\\n    Import-DscResource -Module ComputerManagementDsc\\n    Import-DscResource -Module ActiveDirectoryDsc\\n\\n\\n    Node localhost {\\n        WindowsFeature RSAT-AD-PowerShell {\\n            Name = 'RSAT-AD-PowerShell'\\n            Ensure = 'Present'\\n        }\\n        \\n        ADComputer RemoveDomain {\\n            ComputerName = $env:COMPUTERNAME\\n            Ensure = 'Absent'\\n            Credential = $Credentials\\n            DependsOn = \\\"[WindowsFeature]RSAT-AD-PowerShell\\\"\\n        }\\n    }\\n}\\n\\nRemoveDomain -OutputPath 'C:\\\\AWSQuickstart\\\\RemoveDomain' -ConfigurationData $ConfigurationData\\n\"\n                  } ]\n                }\n              }\n            }, {\n              \"name\" : \"RemoveFromDomain\",\n              \"action\" : \"aws:runCommand\",\n              \"onFailure\" : \"step:abandonHookAction\",\n              \"inputs\" : {\n                \"DocumentName\" : \"AWS-ApplyDSCMofs\",\n                \"InstanceIds\" : [ \"{{InstanceId}}\" ],\n                \"CloudWatchOutputConfig\" : {\n                  \"CloudWatchOutputEnabled\" : \"true\",\n                  \"CloudWatchLogGroupName\" : {\n                    \"Fn::Sub\" : \"/QuickStart/rdgateway/${AWS::StackName}/RemoveConfiguration\"\n                  }\n                },\n                \"Parameters\" : {\n                  \"MofsToApply\" : [ \"C:\\\\AWSQuickstart\\\\RemoveDomain\\\\localhost.mof\" ],\n                  \"ServicePath\" : [ \"default\" ],\n                  \"MofOperationMode\" : [ \"Apply\" ],\n                  \"ModuleSourceBucketName\" : [ \"NONE\" ],\n                  \"AllowPSGalleryModuleSource\" : [ \"True\" ],\n                  \"RebootBehavior\" : [ \"AfterMof\" ],\n                  \"UseComputerNameForReporting\" : [ \"False\" ],\n                  \"EnableVerboseLogging\" : [ \"False\" ],\n                  \"EnableDebugLogging\" : [ \"False\" ]\n                }\n              }\n            }, {\n              \"name\" : \"completeHookAction\",\n              \"action\" : \"aws:executeAwsApi\",\n              \"isEnd\" : true,\n              \"inputs\" : {\n                \"Service\" : \"autoscaling\",\n                \"Api\" : \"CompleteLifecycleAction\",\n                \"AutoScalingGroupName\" : \"{{ASGName}}\",\n                \"InstanceId\" : \"{{InstanceId}}\",\n                \"LifecycleActionResult\" : \"CONTINUE\",\n                \"LifecycleHookName\" : \"{{LCHName}}\"\n              }\n            }, {\n              \"name\" : \"abandonHookAction\",\n              \"action\" : \"aws:executeAwsApi\",\n              \"isEnd\" : true,\n              \"inputs\" : {\n                \"Service\" : \"autoscaling\",\n                \"Api\" : \"CompleteLifecycleAction\",\n                \"AutoScalingGroupName\" : \"{{ASGName}}\",\n                \"InstanceId\" : \"{{InstanceId}}\",\n                \"LifecycleActionResult\" : \"ABANDON\",\n                \"LifecycleHookName\" : \"{{LCHName}}\"\n              }\n            } ]\n          }\n        }\n      },\n      \"RDGWHostRole\" : {\n        \"Type\" : \"AWS::IAM::Role\",\n        \"Properties\" : {\n          \"ManagedPolicyArns\" : [ {\n            \"Fn::Sub\" : \"arn:${AWS::Partition}:iam::aws:policy/AmazonSSMManagedInstanceCore\"\n          }, {\n            \"Fn::Sub\" : \"arn:${AWS::Partition}:iam::aws:policy/CloudWatchAgentServerPolicy\"\n          }, {\n            \"Fn::Sub\" : \"arn:${AWS::Partition}:iam::aws:policy/AmazonSSMDirectoryServiceAccess\"\n          } ],\n          \"Policies\" : [ {\n            \"PolicyDocument\" : {\n              \"Version\" : \"2012-10-17\",\n              \"Statement\" : [ {\n                \"Action\" : [ \"s3:GetObject\" ],\n                \"Resource\" : {\n                  \"Fn::Sub\" : [ \"arn:${AWS::Partition}:s3:::${S3Bucket}/${QSS3KeyPrefix}*\", {\n                    \"S3Bucket\" : {\n                      \"Fn::If\" : [ \"UsingDefaultBucket\", {\n                        \"Fn::Sub\" : \"${QSS3BucketName}-${AWS::Region}\"\n                      }, {\n                        \"Ref\" : \"QSS3BucketName\"\n                      } ]\n                    }\n                  } ]\n                },\n                \"Effect\" : \"Allow\"\n              }, {\n                \"Action\" : [ \"s3:ListBucket\" ],\n                \"Resource\" : {\n                  \"Fn::Sub\" : [ \"arn:${AWS::Partition}:s3:::${S3Bucket}\", {\n                    \"S3Bucket\" : {\n                      \"Fn::If\" : [ \"UsingDefaultBucket\", {\n                        \"Fn::Sub\" : \"${QSS3BucketName}-${AWS::Region}\"\n                      }, {\n                        \"Ref\" : \"QSS3BucketName\"\n                      } ]\n                    }\n                  } ]\n                },\n                \"Effect\" : \"Allow\"\n              } ]\n            },\n            \"PolicyName\" : \"aws-quick-start-s3-policy\"\n          }, {\n            \"PolicyDocument\" : {\n              \"Version\" : \"2012-10-17\",\n              \"Statement\" : [ {\n                \"Action\" : [ \"s3:GetObject\" ],\n                \"Resource\" : [ {\n                  \"Fn::Sub\" : \"arn:${AWS::Partition}:s3:::aws-ssm-${AWS::Region}/*\"\n                }, {\n                  \"Fn::Sub\" : \"arn:${AWS::Partition}:s3:::aws-windows-downloads-${AWS::Region}/*\"\n                }, {\n                  \"Fn::Sub\" : \"arn:${AWS::Partition}:s3:::amazon-ssm-${AWS::Region}/*\"\n                }, {\n                  \"Fn::Sub\" : \"arn:${AWS::Partition}:s3:::amazon-ssm-packages-${AWS::Region}/*\"\n                }, {\n                  \"Fn::Sub\" : \"arn:${AWS::Partition}:s3:::${AWS::Region}-birdwatcher-prod/*\"\n                }, {\n                  \"Fn::Sub\" : \"arn:${AWS::Partition}:s3:::patch-baseline-snapshot-${AWS::Region}/*\"\n                } ],\n                \"Effect\" : \"Allow\"\n              } ]\n            },\n            \"PolicyName\" : \"ssm-custom-s3-policy\"\n          }, {\n            \"PolicyDocument\" : {\n              \"Version\" : \"2012-10-17\",\n              \"Statement\" : [ {\n                \"Effect\" : \"Allow\",\n                \"Action\" : [ \"secretsmanager:GetSecretValue\", \"secretsmanager:DescribeSecret\" ],\n                \"Resource\" : [ {\n                  \"Ref\" : \"DomainJoinSecrets\"\n                } ]\n              } ]\n            },\n            \"PolicyName\" : \"ssm-secrets-policy\"\n          } ],\n          \"Path\" : \"/\",\n          \"AssumeRolePolicyDocument\" : {\n            \"Statement\" : [ {\n              \"Action\" : [ \"sts:AssumeRole\" ],\n              \"Principal\" : {\n                \"Service\" : [ \"ec2.amazonaws.com\" ]\n              },\n              \"Effect\" : \"Allow\"\n            } ],\n            \"Version\" : \"2012-10-17\"\n          }\n        }\n      },\n      \"RDGWHostProfile\" : {\n        \"Type\" : \"AWS::IAM::InstanceProfile\",\n        \"Properties\" : {\n          \"Roles\" : [ {\n            \"Ref\" : \"RDGWHostRole\"\n          } ],\n          \"Path\" : \"/\"\n        }\n      },\n      \"EventBridgeSSMAutoRole\" : {\n        \"Type\" : \"AWS::IAM::Role\",\n        \"Properties\" : {\n          \"Policies\" : [ {\n            \"PolicyDocument\" : {\n              \"Version\" : \"2012-10-17\",\n              \"Statement\" : [ {\n                \"Effect\" : \"Allow\",\n                \"Action\" : [ \"ssm:StartAutomationExecution\" ],\n                \"Resource\" : [ {\n                  \"Fn::Sub\" : \"arn:${AWS::Partition}:ssm:${AWS::Region}:${AWS::AccountId}:automation-definition/${RemoveConfigurationDoc}:$DEFAULT\"\n                }, {\n                  \"Fn::Sub\" : \"arn:${AWS::Partition}:ssm:${AWS::Region}:${AWS::AccountId}:automation-definition/${SetupConfigurationDoc}:$DEFAULT\"\n                } ]\n              }, {\n                \"Effect\" : \"Allow\",\n                \"Action\" : [ \"iam:PassRole\" ],\n                \"Resource\" : [ {\n                  \"Fn::GetAtt\" : [ \"ExecutionResourceRole\", \"Arn\" ]\n                } ],\n                \"Condition\" : {\n                  \"StringLikeIfExists\" : {\n                    \"iam:PassedToService\" : \"ssm.amazonaws.com\"\n                  }\n                }\n              } ]\n            },\n            \"PolicyName\" : \"EventBridge_Invoke_SSM_Automation\"\n          } ],\n          \"Path\" : \"/service-role/\",\n          \"AssumeRolePolicyDocument\" : {\n            \"Version\" : \"2012-10-17\",\n            \"Statement\" : [ {\n              \"Effect\" : \"Allow\",\n              \"Principal\" : {\n                \"Service\" : [ \"events.amazonaws.com\" ]\n              },\n              \"Action\" : \"sts:AssumeRole\"\n            } ]\n          }\n        }\n      },\n      \"ExecutionResourceRole\" : {\n        \"Type\" : \"AWS::IAM::Role\",\n        \"Properties\" : {\n          \"Policies\" : [ {\n            \"PolicyDocument\" : {\n              \"Version\" : \"2012-10-17\",\n              \"Statement\" : [ {\n                \"Effect\" : \"Allow\",\n                \"Action\" : [ \"autoscaling:CompleteLifecycleAction\" ],\n                \"Resource\" : {\n                  \"Fn::Sub\" : \"arn:${AWS::Partition}:autoscaling:*:${AWS::AccountId}:autoScalingGroup:*:autoScalingGroupName/${AWS::StackName}\"\n                }\n              } ]\n            },\n            \"PolicyName\" : \"asg-lch-complete\"\n          } ],\n          \"AssumeRolePolicyDocument\" : {\n            \"Version\" : \"2012-10-17\",\n            \"Statement\" : [ {\n              \"Effect\" : \"Allow\",\n              \"Principal\" : {\n                \"Service\" : [ \"ssm.amazonaws.com\" ]\n              },\n              \"Action\" : [ \"sts:AssumeRole\" ]\n            } ]\n          },\n          \"Path\" : \"/\",\n          \"ManagedPolicyArns\" : [ {\n            \"Fn::Sub\" : \"arn:${AWS::Partition}:iam::aws:policy/service-role/AmazonSSMAutomationRole\"\n          } ],\n          \"Description\" : \"New IAM role to allow SSM access.\"\n        }\n      },\n      \"ALBResource\" : {\n        \"Type\" : \"AWS::ElasticLoadBalancingV2::LoadBalancer\",\n        \"Properties\" : {\n          \"Type\" : \"network\",\n          \"Subnets\" : [ {\n            \"Ref\" : \"PublicSubnet1ID\"\n          }, {\n            \"Ref\" : \"PublicSubnet2ID\"\n          } ]\n        }\n      },\n      \"ALBTargetGroup3389\" : {\n        \"Type\" : \"AWS::ElasticLoadBalancingV2::TargetGroup\",\n        \"Properties\" : {\n          \"Port\" : 3389,\n          \"Protocol\" : \"TCP\",\n          \"VpcId\" : {\n            \"Ref\" : \"VPCID\"\n          },\n          \"TargetGroupAttributes\" : [ {\n            \"Key\" : \"deregistration_delay.timeout_seconds\",\n            \"Value\" : \"60\"\n          }, {\n            \"Key\" : \"stickiness.enabled\",\n            \"Value\" : \"true\"\n          } ]\n        }\n      },\n      \"ALBTargetGroup443\" : {\n        \"Type\" : \"AWS::ElasticLoadBalancingV2::TargetGroup\",\n        \"Properties\" : {\n          \"Port\" : 443,\n          \"Protocol\" : \"TCP\",\n          \"VpcId\" : {\n            \"Ref\" : \"VPCID\"\n          },\n          \"TargetGroupAttributes\" : [ {\n            \"Key\" : \"deregistration_delay.timeout_seconds\",\n            \"Value\" : \"60\"\n          }, {\n            \"Key\" : \"stickiness.enabled\",\n            \"Value\" : \"true\"\n          } ]\n        }\n      },\n      \"ALBTargetGroup3391\" : {\n        \"Type\" : \"AWS::ElasticLoadBalancingV2::TargetGroup\",\n        \"Properties\" : {\n          \"Port\" : 3391,\n          \"Protocol\" : \"UDP\",\n          \"VpcId\" : {\n            \"Ref\" : \"VPCID\"\n          },\n          \"TargetGroupAttributes\" : [ {\n            \"Key\" : \"deregistration_delay.timeout_seconds\",\n            \"Value\" : \"60\"\n          }, {\n            \"Key\" : \"stickiness.enabled\",\n            \"Value\" : \"true\"\n          } ]\n        }\n      },\n      \"ALBListener3389\" : {\n        \"Type\" : \"AWS::ElasticLoadBalancingV2::Listener\",\n        \"Properties\" : {\n          \"LoadBalancerArn\" : {\n            \"Ref\" : \"ALBResource\"\n          },\n          \"Port\" : 3389,\n          \"Protocol\" : \"TCP\",\n          \"DefaultActions\" : [ {\n            \"Type\" : \"forward\",\n            \"TargetGroupArn\" : {\n              \"Ref\" : \"ALBTargetGroup3389\"\n            }\n          } ]\n        }\n      },\n      \"ALBListener443\" : {\n        \"Type\" : \"AWS::ElasticLoadBalancingV2::Listener\",\n        \"Properties\" : {\n          \"LoadBalancerArn\" : {\n            \"Ref\" : \"ALBResource\"\n          },\n          \"Port\" : 443,\n          \"Protocol\" : \"TCP\",\n          \"DefaultActions\" : [ {\n            \"Type\" : \"forward\",\n            \"TargetGroupArn\" : {\n              \"Ref\" : \"ALBTargetGroup443\"\n            }\n          } ]\n        }\n      },\n      \"ALBListener3391\" : {\n        \"Type\" : \"AWS::ElasticLoadBalancingV2::Listener\",\n        \"Properties\" : {\n          \"LoadBalancerArn\" : {\n            \"Ref\" : \"ALBResource\"\n          },\n          \"Port\" : 3391,\n          \"Protocol\" : \"UDP\",\n          \"DefaultActions\" : [ {\n            \"Type\" : \"forward\",\n            \"TargetGroupArn\" : {\n              \"Ref\" : \"ALBTargetGroup3391\"\n            }\n          } ]\n        }\n      },\n      \"RDGWLaunchTemplate\" : {\n        \"Type\" : \"AWS::EC2::LaunchTemplate\",\n        \"DeletionPolicy\" : \"Delete\",\n        \"Properties\" : {\n          \"LaunchTemplateData\" : {\n            \"InstanceType\" : {\n              \"Ref\" : \"RDGWInstanceType\"\n            },\n            \"ImageId\" : {\n              \"Ref\" : \"LatestAmiId\"\n            },\n            \"SecurityGroupIds\" : [ {\n              \"Ref\" : \"RemoteDesktopGatewaySG\"\n            }, {\n              \"Ref\" : \"DomainMemberSGID\"\n            } ],\n            \"IamInstanceProfile\" : {\n              \"Name\" : {\n                \"Ref\" : \"RDGWHostProfile\"\n              }\n            },\n            \"BlockDeviceMappings\" : [ {\n              \"DeviceName\" : \"/dev/sda1\",\n              \"Ebs\" : {\n                \"VolumeSize\" : 50,\n                \"VolumeType\" : \"gp2\"\n              }\n            } ],\n            \"KeyName\" : {\n              \"Ref\" : \"KeyPairName\"\n            },\n            \"TagSpecifications\" : [ {\n              \"ResourceType\" : \"instance\",\n              \"Tags\" : [ {\n                \"Key\" : \"Name\",\n                \"Value\" : \"RDGW\"\n              } ]\n            } ]\n          }\n        }\n      },\n      \"RDGWAutoScalingGroup\" : {\n        \"DependsOn\" : \"ScaleUpEventBridgeResource\",\n        \"Type\" : \"AWS::AutoScaling::AutoScalingGroup\",\n        \"Properties\" : {\n          \"AutoScalingGroupName\" : {\n            \"Fn::Sub\" : \"${AWS::StackName}\"\n          },\n          \"LaunchTemplate\" : {\n            \"LaunchTemplateId\" : {\n              \"Ref\" : \"RDGWLaunchTemplate\"\n            },\n            \"Version\" : {\n              \"Fn::GetAtt\" : [ \"RDGWLaunchTemplate\", \"LatestVersionNumber\" ]\n            }\n          },\n          \"VPCZoneIdentifier\" : [ {\n            \"Ref\" : \"PublicSubnet1ID\"\n          }, {\n            \"Ref\" : \"PublicSubnet2ID\"\n          } ],\n          \"MinSize\" : {\n            \"Ref\" : \"NumberOfRDGWHosts\"\n          },\n          \"MaxSize\" : {\n            \"Ref\" : \"NumberOfRDGWHosts\"\n          },\n          \"Cooldown\" : \"300\",\n          \"DesiredCapacity\" : {\n            \"Ref\" : \"NumberOfRDGWHosts\"\n          },\n          \"TargetGroupARNs\" : [ {\n            \"Ref\" : \"ALBTargetGroup3389\"\n          }, {\n            \"Ref\" : \"ALBTargetGroup443\"\n          }, {\n            \"Ref\" : \"ALBTargetGroup3391\"\n          } ],\n          \"LifecycleHookSpecificationList\" : [ {\n            \"LifecycleTransition\" : \"autoscaling:EC2_INSTANCE_LAUNCHING\",\n            \"LifecycleHookName\" : \"DomainJoinHook\",\n            \"DefaultResult\" : \"ABANDON\",\n            \"HeartbeatTimeout\" : 1200\n          }, {\n            \"LifecycleTransition\" : \"autoscaling:EC2_INSTANCE_TERMINATING\",\n            \"LifecycleHookName\" : \"DomainUnjoinHook\",\n            \"DefaultResult\" : \"ABANDON\",\n            \"HeartbeatTimeout\" : 600\n          } ]\n        }\n      },\n      \"RemoteDesktopGatewaySG\" : {\n        \"Type\" : \"AWS::EC2::SecurityGroup\",\n        \"Properties\" : {\n          \"GroupDescription\" : \"Enable RDP access from the Internet\",\n          \"VpcId\" : {\n            \"Ref\" : \"VPCID\"\n          },\n          \"SecurityGroupIngress\" : [ {\n            \"IpProtocol\" : \"tcp\",\n            \"FromPort\" : 3389,\n            \"ToPort\" : 3389,\n            \"CidrIp\" : {\n              \"Ref\" : \"RDGWCIDR\"\n            }\n          }, {\n            \"IpProtocol\" : \"tcp\",\n            \"FromPort\" : 3389,\n            \"ToPort\" : 3389,\n            \"CidrIp\" : {\n              \"Ref\" : \"RDGWCIDR\"\n            }\n          }, {\n            \"IpProtocol\" : \"tcp\",\n            \"FromPort\" : 443,\n            \"ToPort\" : 443,\n            \"CidrIp\" : {\n              \"Ref\" : \"RDGWCIDR\"\n            }\n          }, {\n            \"IpProtocol\" : \"udp\",\n            \"FromPort\" : 3391,\n            \"ToPort\" : 3391,\n            \"CidrIp\" : {\n              \"Ref\" : \"RDGWCIDR\"\n            }\n          }, {\n            \"IpProtocol\" : \"icmp\",\n            \"FromPort\" : -1,\n            \"ToPort\" : -1,\n            \"CidrIp\" : {\n              \"Ref\" : \"RDGWCIDR\"\n            }\n          } ]\n        }\n      },\n      \"ScaleUpEventBridgeResource\" : {\n        \"Type\" : \"AWS::Events::Rule\",\n        \"Properties\" : {\n          \"State\" : \"ENABLED\",\n          \"Description\" : \"Run configuration document that joins domain and configures RDGW.\",\n          \"EventPattern\" : {\n            \"source\" : [ \"aws.autoscaling\" ],\n            \"detail-type\" : [ \"EC2 Instance-launch Lifecycle Action\" ],\n            \"detail\" : {\n              \"AutoScalingGroupName\" : [ {\n                \"Fn::Sub\" : \"${AWS::StackName}\"\n              } ]\n            }\n          },\n          \"Targets\" : [ {\n            \"Arn\" : {\n              \"Fn::Sub\" : \"arn:${AWS::Partition}:ssm:${AWS::Region}:${AWS::AccountId}:automation-definition/${SetupConfigurationDoc}:$DEFAULT\"\n            },\n            \"Id\" : \"Windows-Scale-Out\",\n            \"RoleArn\" : {\n              \"Fn::GetAtt\" : [ \"EventBridgeSSMAutoRole\", \"Arn\" ]\n            },\n            \"InputTransformer\" : {\n              \"InputPathsMap\" : {\n                \"InstanceId\" : \"$.detail.EC2InstanceId\",\n                \"ASGName\" : \"$.detail.AutoScalingGroupName\",\n                \"LCHName\" : \"$.detail.LifecycleHookName\"\n              },\n              \"InputTemplate\" : {\n                \"Fn::Sub\" : \"{\\\"AutomationAssumeRole\\\":[\\\"${ExecutionResourceRole.Arn}\\\"],\\\"InstanceId\\\":[<InstanceId>],\\\"ASGName\\\":[<ASGName>],\\\"LCHName\\\":[<LCHName>],\\\"QSS3BucketName\\\":[\\\"${QSS3BucketName}\\\"],\\\"QSS3KeyPrefix\\\":[\\\"${QSS3KeyPrefix}\\\"],\\\"URLSuffix\\\":[\\\"${AWS::URLSuffix}\\\"], \\\"DomainNetBIOSName\\\":[\\\"${DomainNetBIOSName}\\\"], \\\"DomainDNSName\\\":[\\\"${DomainDNSName}\\\"]}\"\n              }\n            }\n          } ]\n        }\n      },\n      \"ScaleDownEventBridgeResource\" : {\n        \"Type\" : \"AWS::Events::Rule\",\n        \"Properties\" : {\n          \"State\" : \"ENABLED\",\n          \"Description\" : \"Run removal document that unjoins domain.\",\n          \"EventPattern\" : {\n            \"source\" : [ \"aws.autoscaling\" ],\n            \"detail-type\" : [ \"EC2 Instance-terminate Lifecycle Action\" ],\n            \"detail\" : {\n              \"AutoScalingGroupName\" : [ {\n                \"Fn::Sub\" : \"${AWS::StackName}\"\n              } ]\n            }\n          },\n          \"Targets\" : [ {\n            \"Arn\" : {\n              \"Fn::Sub\" : \"arn:${AWS::Partition}:ssm:${AWS::Region}:${AWS::AccountId}:automation-definition/${RemoveConfigurationDoc}:$DEFAULT\"\n            },\n            \"Id\" : \"Windows-Scale-In\",\n            \"RoleArn\" : {\n              \"Fn::GetAtt\" : [ \"EventBridgeSSMAutoRole\", \"Arn\" ]\n            },\n            \"InputTransformer\" : {\n              \"InputPathsMap\" : {\n                \"InstanceId\" : \"$.detail.EC2InstanceId\",\n                \"ASGName\" : \"$.detail.AutoScalingGroupName\",\n                \"LCHName\" : \"$.detail.LifecycleHookName\"\n              },\n              \"InputTemplate\" : {\n                \"Fn::Sub\" : \"{\\\"AutomationAssumeRole\\\":[\\\"${ExecutionResourceRole.Arn}\\\"],\\\"InstanceId\\\":[<InstanceId>],\\\"ASGName\\\":[<ASGName>],\\\"LCHName\\\":[<LCHName>]}\"\n              }\n            }\n          } ]\n        }\n      }\n    },\n    \"Outputs\" : {\n      \"RDPURL\" : {\n        \"Description\" : \"ELB DNS name to connect to RDP Gateway.\",\n        \"Value\" : {\n          \"Fn::GetAtt\" : [ \"ALBResource\", \"DNSName\" ]\n        }\n      },\n      \"RemoteDesktopGatewaySGID\" : {\n        \"Value\" : {\n          \"Ref\" : \"RemoteDesktopGatewaySG\"\n        },\n        \"Description\" : \"Remote Desktop Gateway security group ID.\"\n      }\n    }\n  }\n}",
  "CreatedDate": "2021-11-11T06:43:22.144Z",
  "DisplayName": null,
  "DocumentFormat": {
    "Value": "JSON"
  },
  "DocumentType": {
    "Value": "CloudFormation"
  },
  "DocumentVersion": "1",
  "Name": "AWSQuickStarts-Microsoft-RdGateway-Domain-Joined",
  "Requires": [],
  "ReviewStatus": null,
  "Status": {
    "Value": "Active"
  },
  "StatusInformation": null,
  "VersionName": "AWSQuickStarts-Microsoft-RdGateway-Domain-Joined-2021-11-10-22-30-09",
  "ResponseMetadata": {
    "RequestId": "66e26110-8e25-4bb4-844d-433e1a5c8ed9",
    "Metadata": {},
    "ChecksumAlgorithm": 0,
    "ChecksumValidationStatus": 0
  },
  "ContentLength": 50026,
  "HttpStatusCode": 200,
  "LoggedAt": "2022-12-24T07:10:42.9063139+00:00"
}
