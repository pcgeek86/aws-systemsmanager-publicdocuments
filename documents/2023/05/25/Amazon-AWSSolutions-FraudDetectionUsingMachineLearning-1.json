{
  "AttachmentsContent": [],
  "Content": "{\n  \"schemaVersion\": \"1.0\",\n  \"description\": \"(SO0056) - fraud-detection-using-machine-learning: Solution for predicting fraud events with ML using Amazon SageMaker. Version 2\",\n  \"templateBody\": {\n    \"AWSTemplateFormatVersion\": \"2010-09-09\",\n    \"Description\": \"(SO0056) - fraud-detection-using-machine-learning: Solution for predicting fraud events with ML using Amazon SageMaker. Version 2\",\n    \"Parameters\": {\n      \"S3BucketName1\": {\n        \"Type\": \"String\",\n        \"Description\": \"New bucket for storing the Amazon SageMaker model and training data.\"\n      },\n      \"S3BucketName2\": {\n        \"Type\": \"String\",\n        \"Description\": \"New bucket for storing processed events for visualization features.\"\n      },\n      \"KinesisFirehosePrefix\": {\n        \"Type\": \"String\",\n        \"Default\": \"fraud-detection/firehose/\",\n        \"Description\": \"Kinesis Firehose prefix for delivery of processed events.\"\n      }\n    },\n    \"Metadata\": {\n      \"AWS::CloudFormation::Interface\": {\n        \"ParameterGroups\": [\n          {\n            \"Label\": {\n              \"default\": \"Amazon S3 Bucket Configuration\"\n            },\n            \"Parameters\": [\n              \"S3BucketName1\",\n              \"S3BucketName2\"\n            ]\n          },\n          {\n            \"Label\": {\n              \"default\": \"Amazon Kinesis Firehose Configuration\"\n            },\n            \"Parameters\": [\n              \"KinesisFirehosePrefix\"\n            ]\n          }\n        ],\n        \"ParameterLabels\": {\n          \"S3BucketName1\": {\n            \"default\": \"Model and Data Bucket Name\"\n          },\n          \"S3BucketName2\": {\n            \"default\": \"Results Bucket Name\"\n          },\n          \"KinesisFirehosePrefix\": {\n            \"default\": \"Kinesis Firehose S3 Prefix\"\n          }\n        }\n      }\n    },\n    \"Mappings\": {\n      \"Function\": {\n        \"FraudDetection\": {\n          \"S3Bucket\": \"solutions\",\n          \"S3Key\": \"fraud-detection-using-machine-learning/v2.0.0/fraud_detection.zip\"\n        }\n      },\n      \"Notebook\": {\n        \"FraudDetection\": {\n          \"S3Bucket\": \"solutions\",\n          \"S3Key\": \"/fraud-detection-using-machine-learning/v2.0.0/notebooks/sagemaker_fraud_detection.ipynb\"\n        }\n      },\n      \"Script\": {\n        \"Install\": {\n          \"S3Bucket\": \"solutions\",\n          \"S3Key\": \"/fraud-detection-using-machine-learning/v2.0.0/notebooks/on-start.sh\"\n        },\n        \"GenerateTraffic\": {\n          \"S3Bucket\": \"solutions\",\n          \"S3Key\": \"/fraud-detection-using-machine-learning/v2.0.0/notebooks/generate_endpoint_traffic.py\"\n        }\n      }\n    },\n    \"Resources\": {\n      \"S3Bucket1\": {\n        \"Type\": \"AWS::S3::Bucket\",\n        \"Properties\": {\n          \"BucketName\": {\n            \"Ref\": \"S3BucketName1\"\n          },\n          \"PublicAccessBlockConfiguration\": {\n            \"BlockPublicAcls\": true,\n            \"BlockPublicPolicy\": true,\n            \"IgnorePublicAcls\": true,\n            \"RestrictPublicBuckets\": true\n          },\n          \"BucketEncryption\": {\n            \"ServerSideEncryptionConfiguration\": [\n              {\n                \"ServerSideEncryptionByDefault\": {\n                  \"SSEAlgorithm\": \"AES256\"\n                }\n              }\n            ]\n          }\n        },\n        \"Metadata\": {\n          \"cfn_nag\": {\n            \"rules_to_suppress\": [\n              {\n                \"id\": \"W35\",\n                \"reason\": \"Configuring logging requires supplying an existing customer S3 bucket to store logs\"\n              },\n              {\n                \"id\": \"W51\",\n                \"reason\": \"Default policy works fine\"\n              }\n            ]\n          }\n        }\n      },\n      \"S3Bucket2\": {\n        \"Type\": \"AWS::S3::Bucket\",\n        \"Properties\": {\n          \"BucketName\": {\n            \"Ref\": \"S3BucketName2\"\n          },\n          \"PublicAccessBlockConfiguration\": {\n            \"BlockPublicAcls\": true,\n            \"BlockPublicPolicy\": true,\n            \"IgnorePublicAcls\": true,\n            \"RestrictPublicBuckets\": true\n          },\n          \"BucketEncryption\": {\n            \"ServerSideEncryptionConfiguration\": [\n              {\n                \"ServerSideEncryptionByDefault\": {\n                  \"SSEAlgorithm\": \"AES256\"\n                }\n              }\n            ]\n          }\n        },\n        \"Metadata\": {\n          \"cfn_nag\": {\n            \"rules_to_suppress\": [\n              {\n                \"id\": \"W35\",\n                \"reason\": \"Configuring logging requires supplying an existing customer S3 bucket to store logs\"\n              },\n              {\n                \"id\": \"W51\",\n                \"reason\": \"Default policy works fine\"\n              }\n            ]\n          }\n        }\n      },\n      \"BasicNotebookInstance\": {\n        \"Type\": \"AWS::SageMaker::NotebookInstance\",\n        \"Properties\": {\n          \"InstanceType\": \"ml.t2.medium\",\n          \"NotebookInstanceName\": \"FraudDetectionNotebookInstance\",\n          \"RoleArn\": {\n            \"Fn::GetAtt\": [\n              \"NotebookInstanceExecutionRole\",\n              \"Arn\"\n            ]\n          },\n          \"LifecycleConfigName\": {\n            \"Fn::GetAtt\": [\n              \"BasicNotebookInstanceLifecycleConfig\",\n              \"NotebookInstanceLifecycleConfigName\"\n            ]\n          }\n        }\n      },\n      \"BasicNotebookInstanceLifecycleConfig\": {\n        \"Type\": \"AWS::SageMaker::NotebookInstanceLifecycleConfig\",\n        \"DependsOn\": [\n          \"S3Bucket1\"\n        ],\n        \"Properties\": {\n          \"OnStart\": [\n            {\n              \"Content\": {\n                \"Fn::Base64\": {\n                  \"Fn::Join\": [\n                    \";\",\n                    [\n                      \"cd /home/ec2-user/SageMaker\",\n                      {\n                        \"Fn::Join\": [\n                          \"\",\n                          [\n                            \"aws s3 cp s3://\",\n                            {\n                              \"Fn::Join\": [\n                                \"-\",\n                                [\n                                  {\n                                    \"Fn::FindInMap\": [\n                                      \"Notebook\",\n                                      \"FraudDetection\",\n                                      \"S3Bucket\"\n                                    ]\n                                  },\n                                  {\n                                    \"Ref\": \"AWS::Region\"\n                                  }\n                                ]\n                              ]\n                            },\n                            {\n                              \"Fn::FindInMap\": [\n                                \"Notebook\",\n                                \"FraudDetection\",\n                                \"S3Key\"\n                              ]\n                            },\n                            \" .\"\n                          ]\n                        ]\n                      },\n                      {\n                        \"Fn::Join\": [\n                          \"\",\n                          [\n                            \"sed -i 's/fraud-detection-end-to-end-demo/\",\n                            {\n                              \"Ref\": \"S3BucketName1\"\n                            },\n                            \"/g' sagemaker_fraud_detection.ipynb\"\n                          ]\n                        ]\n                      },\n                      {\n                        \"Fn::Join\": [\n                          \"\",\n                          [\n                            \"aws s3 cp s3://\",\n                            {\n                              \"Fn::Join\": [\n                                \"-\",\n                                [\n                                  {\n                                    \"Fn::FindInMap\": [\n                                      \"Script\",\n                                      \"GenerateTraffic\",\n                                      \"S3Bucket\"\n                                    ]\n                                  },\n                                  {\n                                    \"Ref\": \"AWS::Region\"\n                                  }\n                                ]\n                              ]\n                            },\n                            {\n                              \"Fn::FindInMap\": [\n                                \"Script\",\n                                \"GenerateTraffic\",\n                                \"S3Key\"\n                              ]\n                            },\n                            \" .\"\n                          ]\n                        ]\n                      },\n                      {\n                        \"Fn::Join\": [\n                          \"\",\n                          [\n                            \"aws s3 cp s3://\",\n                            {\n                              \"Fn::Join\": [\n                                \"-\",\n                                [\n                                  {\n                                    \"Fn::FindInMap\": [\n                                      \"Script\",\n                                      \"Install\",\n                                      \"S3Bucket\"\n                                    ]\n                                  },\n                                  {\n                                    \"Ref\": \"AWS::Region\"\n                                  }\n                                ]\n                              ]\n                            },\n                            {\n                              \"Fn::FindInMap\": [\n                                \"Script\",\n                                \"Install\",\n                                \"S3Key\"\n                              ]\n                            },\n                            \" .\"\n                          ]\n                        ]\n                      },\n                      {\n                        \"Fn::Join\": [\n                          \"\",\n                          [\n                            \"sed -i 's/fraud-detection-api-placeholder/\",\n                            {\n                              \"Ref\": \"RESTAPIGateway\"\n                            },\n                            \"/g' generate_endpoint_traffic.py\"\n                          ]\n                        ]\n                      },\n                      \"bash ./on-start.sh\"\n                    ]\n                  ]\n                }\n              }\n            }\n          ]\n        }\n      },\n      \"NotebookInstanceExecutionRole\": {\n        \"Type\": \"AWS::IAM::Role\",\n        \"Properties\": {\n          \"AssumeRolePolicyDocument\": {\n            \"Version\": \"2012-10-17\",\n            \"Statement\": [\n              {\n                \"Effect\": \"Allow\",\n                \"Principal\": {\n                  \"Service\": [\n                    \"sagemaker.amazonaws.com\"\n                  ]\n                },\n                \"Action\": [\n                  \"sts:AssumeRole\"\n                ]\n              }\n            ]\n          }\n        }\n      },\n      \"NotebookInstanceIAMPolicy\": {\n        \"Type\": \"AWS::IAM::Policy\",\n        \"Properties\": {\n          \"PolicyName\": \"sm-notebook-instance-policy\",\n          \"PolicyDocument\": {\n            \"Version\": \"2012-10-17\",\n            \"Statement\": [\n              {\n                \"Effect\": \"Allow\",\n                \"Action\": [\n                  \"s3:GetBucketLocation\",\n                  \"s3:ListBucket\",\n                  \"s3:GetObject\",\n                  \"s3:PutObject\",\n                  \"s3:DeleteObject\"\n                ],\n                \"Resource\": [\n                  {\n                    \"Fn::Join\": [\n                      \"\",\n                      [\n                        \"arn:aws:s3:::\",\n                        {\n                          \"Ref\": \"S3BucketName1\"\n                        }\n                      ]\n                    ]\n                  },\n                  {\n                    \"Fn::Join\": [\n                      \"\",\n                      [\n                        \"arn:aws:s3:::\",\n                        {\n                          \"Ref\": \"S3BucketName1\"\n                        },\n                        \"/*\"\n                      ]\n                    ]\n                  },\n                  {\n                    \"Fn::Join\": [\n                      \"\",\n                      [\n                        \"arn:aws:s3:::\",\n                        {\n                          \"Fn::Join\": [\n                            \"-\",\n                            [\n                              {\n                                \"Fn::FindInMap\": [\n                                  \"Notebook\",\n                                  \"FraudDetection\",\n                                  \"S3Bucket\"\n                                ]\n                              },\n                              {\n                                \"Ref\": \"AWS::Region\"\n                              }\n                            ]\n                          ]\n                        },\n                        \"/*\"\n                      ]\n                    ]\n                  }\n                ]\n              },\n              {\n                \"Effect\": \"Allow\",\n                \"Action\": [\n                  \"sagemaker:CreateTrainingJob\",\n                  \"sagemaker:DescribeTrainingJob\",\n                  \"sagemaker:CreateModel\",\n                  \"sagemaker:DescribeModel\",\n                  \"sagemaker:DeleteModel\",\n                  \"sagemaker:CreateEndpoint\",\n                  \"sagemaker:CreateEndpointConfig\",\n                  \"sagemaker:DescribeEndpoint\",\n                  \"sagemaker:DescribeEndpointConfig\",\n                  \"sagemaker:DeleteEndpoint\",\n                  \"sagemaker:DeleteEndpointConfig\",\n                  \"sagemaker:InvokeEndpoint\"\n                ],\n                \"Resource\": [\n                  {\n                    \"Fn::Join\": [\n                      \"\",\n                      [\n                        \"arn:aws:sagemaker:\",\n                        {\n                          \"Ref\": \"AWS::Region\"\n                        },\n                        \":\",\n                        {\n                          \"Ref\": \"AWS::AccountId\"\n                        },\n                        \":*\"\n                      ]\n                    ]\n                  }\n                ]\n              },\n              {\n                \"Effect\": \"Allow\",\n                \"Action\": [\n                  \"ecr:GetDownloadUrlForLayer\",\n                  \"ecr:BatchGetImage\",\n                  \"ecr:BatchCheckLayerAvailability\"\n                ],\n                \"Resource\": [\n                  {\n                    \"Fn::Join\": [\n                      \"\",\n                      [\n                        \"arn:aws:ecr:\",\n                        {\n                          \"Ref\": \"AWS::Region\"\n                        },\n                        \":\",\n                        {\n                          \"Ref\": \"AWS::AccountId\"\n                        },\n                        \":repository/*\"\n                      ]\n                    ]\n                  }\n                ]\n              },\n              {\n                \"Effect\": \"Allow\",\n                \"Action\": [\n                  \"ec2:CreateVpcEndpoint\",\n                  \"ec2:DescribeRouteTables\"\n                ],\n                \"Resource\": \"*\"\n              },\n              {\n                \"Effect\": \"Allow\",\n                \"Action\": [\n                  \"cloudwatch:PutMetricData\",\n                  \"cloudwatch:GetMetricData\",\n                  \"cloudwatch:GetMetricStatistics\",\n                  \"cloudwatch:ListMetrics\"\n                ],\n                \"Resource\": [\n                  {\n                    \"Fn::Join\": [\n                      \"\",\n                      [\n                        \"arn:aws:cloudwatch:\",\n                        {\n                          \"Ref\": \"AWS::Region\"\n                        },\n                        \":\",\n                        {\n                          \"Ref\": \"AWS::AccountId\"\n                        },\n                        \":*\"\n                      ]\n                    ]\n                  }\n                ]\n              },\n              {\n                \"Effect\": \"Allow\",\n                \"Action\": [\n                  \"logs:CreateLogGroup\",\n                  \"logs:CreateLogStream\",\n                  \"logs:DescribeLogStreams\",\n                  \"logs:GetLogEvents\",\n                  \"logs:PutLogEvents\"\n                ],\n                \"Resource\": {\n                  \"Fn::Join\": [\n                    \"\",\n                    [\n                      \"arn:aws:logs:\",\n                      {\n                        \"Ref\": \"AWS::Region\"\n                      },\n                      \":\",\n                      {\n                        \"Ref\": \"AWS::AccountId\"\n                      },\n                      \":log-group:/aws/sagemaker/*\"\n                    ]\n                  ]\n                }\n              },\n              {\n                \"Effect\": \"Allow\",\n                \"Action\": [\n                  \"iam:PassRole\"\n                ],\n                \"Resource\": [\n                  {\n                    \"Fn::GetAtt\": [\n                      \"NotebookInstanceExecutionRole\",\n                      \"Arn\"\n                    ]\n                  }\n                ],\n                \"Condition\": {\n                  \"StringEquals\": {\n                    \"iam:PassedToService\": \"sagemaker.amazonaws.com\"\n                  }\n                }\n              },\n              {\n                \"Effect\": \"Allow\",\n                \"Action\": [\n                  \"iam:GetRole\"\n                ],\n                \"Resource\": [\n                  {\n                    \"Fn::GetAtt\": [\n                      \"NotebookInstanceExecutionRole\",\n                      \"Arn\"\n                    ]\n                  }\n                ]\n              },\n              {\n                \"Effect\": \"Allow\",\n                \"Action\": [\n                  \"lambda:InvokeFunction\"\n                ],\n                \"Resource\": [\n                  {\n                    \"Fn::GetAtt\": [\n                      \"LambdaFunction\",\n                      \"Arn\"\n                    ]\n                  }\n                ]\n              },\n              {\n                \"Effect\": \"Allow\",\n                \"Action\": [\n                  \"execute-api:Invoke\"\n                ],\n                \"Resource\": [\n                  {\n                    \"Fn::Join\": [\n                      \"\",\n                      [\n                        \"arn:aws:execute-api:\",\n                        {\n                          \"Ref\": \"AWS::Region\"\n                        },\n                        \":\",\n                        {\n                          \"Ref\": \"AWS::AccountId\"\n                        },\n                        \":\",\n                        {\n                          \"Ref\": \"RESTAPIGateway\"\n                        },\n                        \"/*/POST/*\"\n                      ]\n                    ]\n                  }\n                ]\n              }\n            ]\n          },\n          \"Roles\": [\n            {\n              \"Ref\": \"NotebookInstanceExecutionRole\"\n            }\n          ]\n        },\n        \"Metadata\": {\n          \"cfn_nag\": {\n            \"rules_to_suppress\": [\n              {\n                \"id\": \"W12\",\n                \"reason\": \"This policy needs to have * resource because some of the resources are created dynamically and some of its actions are * resource actions\"\n              }\n            ]\n          }\n        }\n      },\n      \"LambdaFunction\": {\n        \"Type\": \"AWS::Lambda::Function\",\n        \"Properties\": {\n          \"Handler\": \"index.lambda_handler\",\n          \"FunctionName\": \"fraud-detection-event-processor\",\n          \"Role\": {\n            \"Fn::GetAtt\": [\n              \"LambdaExecutionRole\",\n              \"Arn\"\n            ]\n          },\n          \"Code\": {\n            \"S3Bucket\": {\n              \"Fn::Join\": [\n                \"-\",\n                [\n                  {\n                    \"Fn::FindInMap\": [\n                      \"Function\",\n                      \"FraudDetection\",\n                      \"S3Bucket\"\n                    ]\n                  },\n                  {\n                    \"Ref\": \"AWS::Region\"\n                  }\n                ]\n              ]\n            },\n            \"S3Key\": {\n              \"Fn::FindInMap\": [\n                \"Function\",\n                \"FraudDetection\",\n                \"S3Key\"\n              ]\n            }\n          },\n          \"Runtime\": \"python3.6\"\n        }\n      },\n      \"LambdaExecutionRole\": {\n        \"Type\": \"AWS::IAM::Role\",\n        \"Properties\": {\n          \"AssumeRolePolicyDocument\": {\n            \"Version\": \"2012-10-17\",\n            \"Statement\": [\n              {\n                \"Effect\": \"Allow\",\n                \"Principal\": {\n                  \"Service\": [\n                    \"lambda.amazonaws.com\"\n                  ]\n                },\n                \"Action\": [\n                  \"sts:AssumeRole\"\n                ]\n              }\n            ]\n          },\n          \"Path\": \"/\",\n          \"Policies\": [\n            {\n              \"PolicyName\": \"root\",\n              \"PolicyDocument\": {\n                \"Version\": \"2012-10-17\",\n                \"Statement\": [\n                  {\n                    \"Effect\": \"Allow\",\n                    \"Action\": [\n                      \"logs:CreateLogGroup\",\n                      \"logs:CreateLogStream\",\n                      \"logs:PutLogEvents\"\n                    ],\n                    \"Resource\": {\n                      \"Fn::Join\": [\n                        \"\",\n                        [\n                          \"arn:aws:logs:\",\n                          {\n                            \"Ref\": \"AWS::Region\"\n                          },\n                          \":\",\n                          {\n                            \"Ref\": \"AWS::AccountId\"\n                          },\n                          \":log-group:/aws/lambda/*\"\n                        ]\n                      ]\n                    }\n                  },\n                  {\n                    \"Effect\": \"Allow\",\n                    \"Action\": [\n                      \"sagemaker:InvokeEndpoint\"\n                    ],\n                    \"Resource\": [\n                      \"arn:aws:sagemaker:*:*:endpoint/*\"\n                    ]\n                  },\n                  {\n                    \"Effect\": \"Allow\",\n                    \"Action\": [\n                      \"firehose:PutRecord\",\n                      \"firehose:PutRecordBatch\"\n                    ],\n                    \"Resource\": {\n                      \"Fn::GetAtt\": [\n                        \"KinesisFirehoseDeliveryStream\",\n                        \"Arn\"\n                      ]\n                    }\n                  }\n                ]\n              }\n            }\n          ]\n        },\n        \"Metadata\": {\n          \"cfn_nag\": {\n            \"rules_to_suppress\": [\n              {\n                \"id\": \"W11\",\n                \"reason\": \"This role needs to have * resource in it's policy because resource names are created dynamically and some of its actions are * resource actions\"\n              }\n            ]\n          }\n        }\n      },\n      \"KinesisFirehoseDeliveryStream\": {\n        \"Type\": \"AWS::KinesisFirehose::DeliveryStream\",\n        \"Properties\": {\n          \"DeliveryStreamName\": \"fraud-detection-firehose-stream\",\n          \"DeliveryStreamType\": \"DirectPut\",\n          \"S3DestinationConfiguration\": {\n            \"BucketARN\": {\n              \"Fn::GetAtt\": [\n                \"S3Bucket2\",\n                \"Arn\"\n              ]\n            },\n            \"Prefix\": {\n              \"Ref\": \"KinesisFirehosePrefix\"\n            },\n            \"BufferingHints\": {\n              \"IntervalInSeconds\": 60,\n              \"SizeInMBs\": 100\n            },\n            \"CompressionFormat\": \"GZIP\",\n            \"EncryptionConfiguration\": {\n              \"NoEncryptionConfig\": \"NoEncryption\"\n            },\n            \"RoleARN\": {\n              \"Fn::GetAtt\": [\n                \"FirehoseDeliveryIAMRole\",\n                \"Arn\"\n              ]\n            }\n          }\n        },\n        \"DependsOn\": [\n          \"FirehoseDeliveryIAMPolicy\"\n        ]\n      },\n      \"FirehoseDeliveryIAMRole\": {\n        \"Type\": \"AWS::IAM::Role\",\n        \"Properties\": {\n          \"AssumeRolePolicyDocument\": {\n            \"Version\": \"2012-10-17\",\n            \"Statement\": [\n              {\n                \"Sid\": \"\",\n                \"Effect\": \"Allow\",\n                \"Principal\": {\n                  \"Service\": \"firehose.amazonaws.com\"\n                },\n                \"Action\": [\n                  \"sts:AssumeRole\"\n                ]\n              }\n            ]\n          }\n        }\n      },\n      \"FirehoseDeliveryIAMPolicy\": {\n        \"Type\": \"AWS::IAM::Policy\",\n        \"Properties\": {\n          \"PolicyName\": \"fraud-detection-firehose-policy\",\n          \"PolicyDocument\": {\n            \"Version\": \"2012-10-17\",\n            \"Statement\": [\n              {\n                \"Effect\": \"Allow\",\n                \"Action\": [\n                  \"s3:AbortMultipartUpload\",\n                  \"s3:GetBucketLocation\",\n                  \"s3:GetObject\",\n                  \"s3:ListBucket\",\n                  \"s3:ListBucketMultipartUploads\",\n                  \"s3:PutObject\"\n                ],\n                \"Resource\": [\n                  {\n                    \"Fn::Join\": [\n                      \"\",\n                      [\n                        \"arn:aws:s3:::\",\n                        {\n                          \"Ref\": \"S3BucketName2\"\n                        }\n                      ]\n                    ]\n                  },\n                  {\n                    \"Fn::Join\": [\n                      \"\",\n                      [\n                        \"arn:aws:s3:::\",\n                        {\n                          \"Ref\": \"S3BucketName2\"\n                        },\n                        \"/\",\n                        {\n                          \"Ref\": \"KinesisFirehosePrefix\"\n                        },\n                        \"*\"\n                      ]\n                    ]\n                  }\n                ]\n              }\n            ]\n          },\n          \"Roles\": [\n            {\n              \"Ref\": \"FirehoseDeliveryIAMRole\"\n            }\n          ]\n        },\n        \"Metadata\": {\n          \"cfn_nag\": {\n            \"rules_to_suppress\": [\n              {\n                \"id\": \"W12\",\n                \"reason\": \"This policy needs to have * resource because some of its actions are * resource actions\"\n              }\n            ]\n          }\n        }\n      },\n      \"RESTAPIGateway\": {\n        \"Type\": \"AWS::ApiGateway::RestApi\",\n        \"Properties\": {\n          \"Description\": \"A REST API that can be used to invoke the Lambda function that triggers predictions.\",\n          \"Name\": \"model-invocation-api\",\n          \"EndpointConfiguration\": {\n            \"Types\": [\n              \"REGIONAL\"\n            ]\n          }\n        }\n      },\n      \"APIGatewayCloudWatchLogGroup\": {\n        \"Type\": \"AWS::Logs::LogGroup\",\n        \"Properties\": {\n          \"LogGroupName\": {\n            \"Fn::Join\": [\n              \"/\",\n              [\n                \"/aws/apigateway/AccessLogs\",\n                {\n                  \"Ref\": \"RESTAPIGateway\"\n                },\n                \"prod\"\n              ]\n            ]\n          },\n          \"RetentionInDays\": 3653\n        }\n      },\n      \"APIGatewayCloudWatchRole\": {\n        \"Type\": \"AWS::IAM::Role\",\n        \"Properties\": {\n          \"AssumeRolePolicyDocument\": {\n            \"Version\": \"2012-10-17\",\n            \"Statement\": [\n              {\n                \"Effect\": \"Allow\",\n                \"Principal\": {\n                  \"Service\": [\n                    \"apigateway.amazonaws.com\"\n                  ]\n                },\n                \"Action\": \"sts:AssumeRole\"\n              }\n            ]\n          },\n          \"Path\": \"/\",\n          \"ManagedPolicyArns\": [\n            \"arn:aws:iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs\"\n          ]\n        }\n      },\n      \"APIGatewayAccount\": {\n        \"Type\": \"AWS::ApiGateway::Account\",\n        \"Properties\": {\n          \"CloudWatchRoleArn\": {\n            \"Fn::GetAtt\": [\n              \"APIGatewayCloudWatchRole\",\n              \"Arn\"\n            ]\n          }\n        },\n        \"DependsOn\": [\n          \"RESTAPIGateway\"\n        ]\n      },\n      \"LambdaAPIPermission\": {\n        \"Type\": \"AWS::Lambda::Permission\",\n        \"Properties\": {\n          \"Action\": \"lambda:InvokeFunction\",\n          \"FunctionName\": {\n            \"Fn::GetAtt\": [\n              \"LambdaFunction\",\n              \"Arn\"\n            ]\n          },\n          \"Principal\": \"apigateway.amazonaws.com\",\n          \"SourceArn\": {\n            \"Fn::Join\": [\n              \"\",\n              [\n                \"arn:aws:execute-api:\",\n                {\n                  \"Ref\": \"AWS::Region\"\n                },\n                \":\",\n                {\n                  \"Ref\": \"AWS::AccountId\"\n                },\n                \":\",\n                {\n                  \"Ref\": \"RESTAPIGateway\"\n                },\n                \"/*/POST/*\"\n              ]\n            ]\n          }\n        }\n      },\n      \"RESTInvocationResource\": {\n        \"Type\": \"AWS::ApiGateway::Resource\",\n        \"Properties\": {\n          \"ParentId\": {\n            \"Fn::GetAtt\": [\n              \"RESTAPIGateway\",\n              \"RootResourceId\"\n            ]\n          },\n          \"PathPart\": \"invocations\",\n          \"RestApiId\": {\n            \"Ref\": \"RESTAPIGateway\"\n          }\n        }\n      },\n      \"POSTMethod\": {\n        \"Type\": \"AWS::ApiGateway::Method\",\n        \"Properties\": {\n          \"RestApiId\": {\n            \"Ref\": \"RESTAPIGateway\"\n          },\n          \"ResourceId\": {\n            \"Ref\": \"RESTInvocationResource\"\n          },\n          \"HttpMethod\": \"POST\",\n          \"AuthorizationType\": \"AWS_IAM\",\n          \"Integration\": {\n            \"Type\": \"AWS\",\n            \"IntegrationHttpMethod\": \"POST\",\n            \"Uri\": {\n              \"Fn::Join\": [\n                \"\",\n                [\n                  \"arn:aws:apigateway:\",\n                  {\n                    \"Ref\": \"AWS::Region\"\n                  },\n                  \":lambda:path/2015-03-31/functions/\",\n                  {\n                    \"Fn::GetAtt\": [\n                      \"LambdaFunction\",\n                      \"Arn\"\n                    ]\n                  },\n                  \"/invocations\"\n                ]\n              ]\n            },\n            \"IntegrationResponses\": [\n              {\n                \"ResponseTemplates\": {\n                  \"application/json\": \"\"\n                },\n                \"StatusCode\": 200\n              },\n              {\n                \"SelectionPattern\": \"^not found.*\",\n                \"ResponseTemplates\": {\n                  \"application/json\": \"{}\"\n                },\n                \"StatusCode\": 404\n              }\n            ],\n            \"PassthroughBehavior\": \"WHEN_NO_TEMPLATES\",\n            \"RequestTemplates\": {\n              \"application/json\": \"{\\\"data\\\": $input.json('$.data'),\\\"metadata\\\": $input.json('$.metadata'),\\\"model\\\": \\\"$input.params('model')\\\"}\"\n            }\n          },\n          \"MethodResponses\": [\n            {\n              \"ResponseModels\": {\n                \"application/json\": \"Empty\"\n              },\n              \"StatusCode\": 200\n            },\n            {\n              \"ResponseModels\": {\n                \"application/json\": \"Empty\"\n              },\n              \"StatusCode\": 404\n            }\n          ],\n          \"RequestParameters\": {\n            \"method.request.querystring.model\": false\n          }\n        }\n      },\n      \"RestApiDeployment\": {\n        \"Type\": \"AWS::ApiGateway::Deployment\",\n        \"Properties\": {\n          \"StageDescription\": {\n            \"AccessLogSetting\": {\n              \"DestinationArn\": {\n                \"Fn::GetAtt\": [\n                  \"APIGatewayCloudWatchLogGroup\",\n                  \"Arn\"\n                ]\n              },\n              \"Format\": {\n                \"Fn::Join\": [\n                  \",\",\n                  [\n                    \"{\\\"requestId\\\":\\\"$context.requestId\\\"\",\n                    \"\\\"ip\\\": \\\"$context.identity.sourceIp\\\"\",\n                    \"\\\"caller\\\":\\\"$context.identity.caller\\\"\",\n                    \"\\\"user\\\":\\\"$context.identity.user\\\"\",\n                    \"\\\"requestTime\\\":\\\"$context.requestTime\\\"\",\n                    \"\\\"httpMethod\\\":\\\"$context.httpMethod\\\"\",\n                    \"\\\"resourcePath\\\":\\\"$context.resourcePath\\\"\",\n                    \"\\\"status\\\":\\\"$context.status\\\"\",\n                    \"\\\"protocol\\\":\\\"$context.protocol\\\"\",\n                    \"\\\"responseLength\\\":\\\"$context.responseLength\\\"}\"\n                  ]\n                ]\n              }\n            }\n          },\n          \"RestApiId\": {\n            \"Ref\": \"RESTAPIGateway\"\n          },\n          \"StageName\": \"prod\"\n        },\n        \"DependsOn\": [\n          \"POSTMethod\"\n        ]\n      }\n    },\n    \"Outputs\": {\n      \"BasicNotebookInstanceId\": {\n        \"Value\": {\n          \"Ref\": \"BasicNotebookInstance\"\n        }\n      },\n      \"firehoseDeliveryStreamArn\": {\n        \"Description\": \"Firehose Delivery Stream ARN\",\n        \"Value\": {\n          \"Fn::GetAtt\": [\n            \"KinesisFirehoseDeliveryStream\",\n            \"Arn\"\n          ]\n        }\n      },\n      \"firehoseDeliveryRoleArn\": {\n        \"Description\": \"Firehose Delivery Role ARN\",\n        \"Value\": {\n          \"Fn::GetAtt\": [\n            \"FirehoseDeliveryIAMRole\",\n            \"Arn\"\n          ]\n        }\n      },\n      \"RestApiId\": {\n        \"Value\": {\n          \"Ref\": \"RESTAPIGateway\"\n        }\n      }\n    }\n  }\n}",
  "CreatedDate": "2021-06-30T23:09:04.815Z",
  "DisplayName": null,
  "DocumentFormat": {
    "Value": "JSON"
  },
  "DocumentType": {
    "Value": "CloudFormation"
  },
  "DocumentVersion": "1",
  "Name": "AWSSolutions-FraudDetectionUsingMachineLearning",
  "Requires": [],
  "ReviewStatus": null,
  "Status": {
    "Value": "Active"
  },
  "StatusInformation": null,
  "VersionName": null,
  "ResponseMetadata": {
    "RequestId": "a9f23857-3b3b-4277-bed6-262bc07c1497",
    "Metadata": {},
    "ChecksumAlgorithm": 0,
    "ChecksumValidationStatus": 0
  },
  "ContentLength": 36881,
  "HttpStatusCode": 200,
  "LoggedAt": "2023-05-25T07:11:29.231729+00:00"
}
