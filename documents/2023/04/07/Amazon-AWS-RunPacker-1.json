{
  "AttachmentsContent": [
    {
      "Hash": "9429c3a6f80b406dbddb9b30a4e468aeac59ab6ae4d09618c8d70c4f4188442e",
      "HashType": {
        "Value": "Sha256"
      },
      "Name": "packer_1.7.2_linux_amd64.zip",
      "Size": 28738303,
      "Url": "https://aws-ssm-document-attachments-us-west-2.s3.us-west-2.amazonaws.com/957/123784938132/Automation/AWS-RunPacker%21ea5c8f36-c8ec-4ede-ae2c-4fc53e3bb122/6/packer_1.7.2_linux_amd64.zip?x-attachment-size=28738303&x-requester-accountId=987868780346&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEFYaCXVzLXdlc3QtMiJIMEYCIQCK5C9cFF3bnzmEO2rR6oWcmzoO0HwyxO2%2FYd924aVB3wIhAL6Lkl%2F%2Fn5rh7jINO%2FdLbz%2F7puV4%2BIVhm1ogtbB%2FyVQWKroFCD8QAxoMMjQ5OTI0NTI3NDEwIgzW7C5Ic6KCZeKg1GsqlwXEFpmyviCjC%2Fb8nPZiApUIvu9FG3MNalMD40Dei7q07Sb9SSru41E3xoAtGfT6FYZ7rpdZ07Pnkt9H708Ux2DNeJyAO1PfUwFq5PRFs%2Fz8FZYVHKrBJALTlZzDAPOZkBhGWeTndyLi5c8IK79D%2FVnDhqu7itf1Rg8a0wKfsI0Q%2BNZ8LiBBBll1%2FqmQYNqMb7XJlKvVSoRdZD3jvHOcwATi1DnHZvraf%2BD0Nsh7BLuCCbdR2w5k5saAQ66A6EuGzSLt1zLKIpPwexEUw%2FZbldSJxSsW%2BVznjufjI%2Fma8xROI2NtaeN0Tu1yVPHqwQFmY7SxbZ1n65V90RPFteR704YHk3%2BaKIzjeGsqjJLmsBx5knc3PiwQTAengjJpBFFD9OEy7h%2Fxc4J8nrEPbsEPbFQOvU5MDF8Hwa9duIHVjkE4782GOyk88ODk%2BpUr2ZFsTSQrCJOe%2B%2FcZzERZE90z8BDsDUaiSwdTt5LWtGQsjjHP0%2Bvuakg01iQOFGM3nr%2BoikF2mYr3WcnYtpZirAZ6DCgTZu0tjIMFFCPayQyoXd5C09uh2QTQspxwF1ovMCflepfsZzb8SapmLKRqNDdBgte8MFcf96VXD5pC4EOnxHuOvVhK1KqFSdyITy4Nd7S9FI2diB49oJVuEAu77aRYhw1kTCqwfl6GLHjdWlR2MVxdm%2BOc5mP4VPnmPC6bZvYT5MA7Oh4vm8i9WofY3lfnlzk7mL4GPFN%2Bl0Hz1GFARjTYgmZ9QlCKUoEbfCX%2FYLu5BfxDLAl%2BvzFqbYxEQ8wfUW4308ApIkdidTYYqFnflZKOr337cD6iAvf6q%2BgUe1IY2XRDH4IyF84DomuKVDiUhZ%2BdYi%2Bo11tAF%2ByHUOvrCc4ZIToxq0468Awwldm%2BoQY6sAGi877E9sCWdP6fAMurhifTxGAtK8OdEhsjoer6r9c3ibpTJ2hYyysZG0XLFg%2BxjZMdvueXpo8%2FzWvCaAZDaNayHVw96cTmKxXmDlU%2FBOYUtgJMFIW17cnxrFwKd2KXb2rij2q0b1gsYpDywj2CCUfhhqGbFKdck8%2Fedf9z1qu%2B9HPJ8DzLfG3MTzWYaUD5cJMBEYtMomxbORjgeulWe6%2B2Pg%2Bxtf580Zvgi%2BGc9MV%2B2w%3D%3D&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Date=20230407T071020Z&X-Amz-SignedHeaders=host&X-Amz-Expires=86400&X-Amz-Credential=ASIATUMFJUUZMDD3HWT7%2F20230407%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Signature=79a071648a670a4c4aa72c0d1688a234afdfa1608e76c621dd93d5a239448ea5"
    }
  ],
  "Content": "{\n  \"description\" : \"### Document Name - AWS-RunPacker\\n\\n## What does this document do?\\nThis document uses the HashiCorp [packer](https://www.packer.io/) tool to validate, fix, or build packer templates that are used to create machine images. This document is using Packer v1.7.2.\\n\\n## Input Parameters\\n* TemplateS3BucketName: The name of the Amazon S3 bucket containing the packer template.\\n* TemplateFileName: The name, or key, of the template file in the S3 bucket.\\n* Mode: The mode, or command, in which to use Packer when validating against the template:\\n    * [Build](https://www.packer.io/docs/commands/build.html): (Default) Runs all the builds within the template in order to generate a set of artifacts.\\n    * [Validate](https://www.packer.io/docs/commands/validate.html): Validates the syntax and configuration of the template.\\n    * [Fix](https://www.packer.io/docs/commands/fix.html): Finds backwards incompatible content in the template and updates it for use with the latest version of Packer. It then uploads the fixed template to the S3 bucket that you specify. The name of the fixed template is identical to the template provided by the user, but with \\\"fixed-\\\" prepended to the name.\\n* [Force](https://www.packer.io/docs/commands/build.html#force): Forces a builder to run when artifacts from a previous build otherwise prevent a build from running.\\n    * True: (Default) Force flag is used\\n    * False: Force flag is not used\\n* AutomationAssumeRole: The ARN of the role that allows Automation to perform the actions on your behalf.\\n\\n## Output Parameters\\n* RunPackerProcessTemplate.output: The stdout from the Packer tool.\\n* RunPackerProcessTemplate.fixed_template_key: The name of the template stored in an S3 bucket to use only when running in \\\"Fix\\\" mode.\\n* RunPackerProcessTemplate.s3_bucket: The name of the S3 bucket that contains the fixed template to use only when running in \\\"Fix\\\" mode.\\n\",\n  \"schemaVersion\" : \"0.3\",\n  \"assumeRole\" : \"{{ AutomationAssumeRole }}\",\n  \"parameters\" : {\n    \"TemplateS3BucketName\" : {\n      \"type\" : \"String\",\n      \"description\" : \"(Required) AWS S3 bucket name that stores the template. eg. my-packer-bucket\"\n    },\n    \"TemplateFileName\" : {\n      \"type\" : \"String\",\n      \"description\" : \"(Required) Packer template file key in the bucket. eg. path/to/packer-template.json\"\n    },\n    \"Mode\" : {\n      \"type\" : \"String\",\n      \"description\" : \"(Required) The mode in which to use Packer when validating against the template. Default Value - Build\",\n      \"allowedValues\" : [ \"Validate\", \"Fix\", \"Build\" ],\n      \"default\" : \"Build\"\n    },\n    \"Force\" : {\n      \"type\" : \"String\",\n      \"description\" : \"(Optional) Forces a builder to run when artifacts from a previous build otherwise prevent a build from running. Default Value - True\",\n      \"allowedValues\" : [ \"True\", \"False\" ],\n      \"default\" : \"True\"\n    },\n    \"AutomationAssumeRole\" : {\n      \"type\" : \"String\",\n      \"description\" : \"(Optional) The ARN of the role that allows Automation to perform the actions on your behalf.\",\n      \"default\" : \"\"\n    }\n  },\n  \"outputs\" : [ \"RunPackerProcessTemplate.output\", \"RunPackerProcessTemplate.fixed_template_key\", \"RunPackerProcessTemplate.s3_bucket\" ],\n  \"mainSteps\" : [ {\n    \"name\" : \"RunPackerProcessTemplate\",\n    \"action\" : \"aws:executeScript\",\n    \"timeoutSeconds\" : 600,\n    \"description\" : \"## RunPackerProcessTemplate\\nRuns the selected mode against the template using the Packer tool\\n## Outputs\\n* output: The stdout from the packer tool\\n* Fixed_template_key: The name of the fixed template in S3 if run in \\\"Fix\\\" mode. No value otherwise\\n* s3_bucket: The name of your s3 that contains the fixed template if run in \\\"Fix\\\" mode. No value otherwise\\n\",\n    \"inputs\" : {\n      \"Runtime\" : \"python3.8\",\n      \"Handler\" : \"run_packer_handler\",\n      \"Attachment\" : \"packer_1.7.2_linux_amd64.zip\",\n      \"InputPayload\" : {\n        \"TemplateFileName\" : \"{{TemplateFileName}}\",\n        \"TemplateS3BucketName\" : \"{{TemplateS3BucketName}}\",\n        \"Mode\" : \"{{Mode}}\",\n        \"Force\" : \"{{Force}}\"\n      },\n      \"Script\" : \"import os\\nimport glob\\nimport boto3\\nimport subprocess\\nfrom pathlib import Path\\nimport json\\n\\ndef get_current_dir():\\n  current_path = os.path.realpath(__file__)\\n  p = Path(current_path)\\n  return str(p.parent)\\n\\ndef execute_packer_command(cmdArray):\\n  p = subprocess.Popen(cmdArray, stdout=subprocess.PIPE, stderr=subprocess.PIPE)\\n  out, err = [(x.decode(\\\"utf-8\\\")) for x in p.communicate()]\\n  return_code = p.returncode\\n  if err != \\\"\\\":\\n    raise Exception(\\\"ERROR IN EXECUTING PACKER\\\", err)\\n  if return_code != 0:\\n    raise Exception(\\\"FAILED\\\", out)\\n  return out\\n\\ndef download_file(path, key, bucket_name):\\n  s3 = boto3.client('s3')\\n  s3.download_file(bucket_name, key, path)\\n\\ndef upload_file(path, key, bucket_name):\\n  s3 = boto3.client('s3')\\n  s3.upload_file(path, bucket_name, key)\\n\\ndef validate_template(packer_cmd, template_path):\\n  validate_template_cmd = [packer_cmd, \\\"validate\\\", template_path]\\n  out = execute_packer_command(validate_template_cmd)\\n  print(\\\"Template validated successfully\\\")\\n  return out\\n\\ndef build_template(packer_cmd, template_path, force_build):\\n  build_command = [packer_cmd, \\\"build\\\"]\\n  if force_build == \\\"True\\\":\\n      build_command.extend([\\\"-machine-readable\\\", \\\"-force\\\"])\\n  build_command.append(template_path)\\n  out = execute_packer_command(build_command)\\n  print(\\\"Template built\\\")\\n  return out\\n\\ndef fix_template(packer_cmd, local_template_path, s3_template_path, bucket_name):\\n    s3_path_head, template_file_name = os.path.split(s3_template_path)\\n    fixed_template_file_name = \\\"fixed-\\\" + template_file_name\\n    fixed_template_path = os.path.join('/tmp/', fixed_template_file_name)\\n    fixed_template_cmd = [packer_cmd, \\\"fix\\\", local_template_path]\\n    out = execute_packer_command(fixed_template_cmd)\\n    fixed_template_file = open(fixed_template_path, \\\"w\\\")\\n    fixed_template_file.write(out)\\n    fixed_template_file.close()\\n    fixed_s3_key = os.path.join(s3_path_head, fixed_template_file_name)\\n    upload_file(fixed_template_path, fixed_s3_key, bucket_name)\\n    print (\\\"Template fixed from \\\" + s3_template_path + \\\" to \\\" + fixed_s3_key)\\n    return out, fixed_s3_key\\n\\ndef run_packer_handler(events, context):\\n  current_dir = get_current_dir()\\n  packer_cmd = current_dir + \\\"/\\\" + \\\"packer\\\"\\n  s3_template_path = events['TemplateFileName']\\n  bucket_name = events['TemplateS3BucketName']\\n  mode = events['Mode']\\n  force_build = events['Force']\\n  s3_path_head, file_name = os.path.split(s3_template_path)\\n  local_template_path = os.path.join(\\\"/tmp/\\\", file_name)\\n  download_file(local_template_path, s3_template_path, bucket_name)\\n\\n  os.system(\\\"chmod u=x \\\" + packer_cmd)\\n\\n  fixed_template_path = \\\"\\\"\\n  ret_bucket_value = \\\"\\\"\\n  if mode == \\\"Validate\\\":\\n      out = validate_template(packer_cmd, local_template_path)\\n  elif mode == \\\"Build\\\":\\n      out = build_template(packer_cmd, local_template_path, force_build)\\n  elif mode == \\\"Fix\\\":\\n      out, fixed_template_path = fix_template(packer_cmd, local_template_path, s3_template_path, bucket_name)\\n      ret_bucket_value = bucket_name\\n  return {\\n    'output': json.dumps(out),\\n    'fixed_template_key': fixed_template_path,\\n    's3_bucket': ret_bucket_value\\n  }\\n\"\n    },\n    \"isEnd\" : true,\n    \"outputs\" : [ {\n      \"Name\" : \"output\",\n      \"Selector\" : \"$.Payload.output\",\n      \"Type\" : \"String\"\n    }, {\n      \"Name\" : \"fixed_template_key\",\n      \"Selector\" : \"$.Payload.fixed_template_key\",\n      \"Type\" : \"String\"\n    }, {\n      \"Name\" : \"s3_bucket\",\n      \"Selector\" : \"$.Payload.s3_bucket\",\n      \"Type\" : \"String\"\n    } ]\n  } ],\n  \"files\" : {\n    \"packer_1.7.2_linux_amd64.zip\" : {\n      \"checksums\" : {\n        \"sha256\" : \"9429c3a6f80b406dbddb9b30a4e468aeac59ab6ae4d09618c8d70c4f4188442e\"\n      },\n      \"size\" : 28738303\n    }\n  }\n}",
  "CreatedDate": "2022-06-21T22:57:23.287Z",
  "DisplayName": null,
  "DocumentFormat": {
    "Value": "JSON"
  },
  "DocumentType": {
    "Value": "Automation"
  },
  "DocumentVersion": "1",
  "Name": "AWS-RunPacker",
  "Requires": [],
  "ReviewStatus": null,
  "Status": {
    "Value": "Active"
  },
  "StatusInformation": null,
  "VersionName": null,
  "ResponseMetadata": {
    "RequestId": "0b7d65c6-971e-4004-897a-fdafd71a2f0d",
    "Metadata": {},
    "ChecksumAlgorithm": 0,
    "ChecksumValidationStatus": 0
  },
  "ContentLength": 10747,
  "HttpStatusCode": 200,
  "LoggedAt": "2023-04-07T07:10:20.3512566+00:00"
}
