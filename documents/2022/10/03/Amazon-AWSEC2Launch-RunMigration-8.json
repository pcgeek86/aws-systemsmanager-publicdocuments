{
  "AttachmentsContent": [],
  "Content": "{\n  \"schemaVersion\": \"2.2\",\n  \"description\": \"Command document for migrating from EC2Config and EC2Launch v1 to EC2Launch v2\",\n  \"parameters\": {\n    \"dryRun\": {\n      \"type\": \"String\",\n      \"description\": \"Set to true if you want to execute a dry run\",\n      \"default\": \"false\",\n      \"allowedValues\": [\n        \"true\",\n        \"false\"\n      ]\n    }\n  },\n  \"mainSteps\": [\n    {\n      \"action\": \"aws:runPowerShellScript\",\n      \"name\": \"migration\",\n      \"maxAttempts\": 3,\n      \"precondition\": {\n        \"StringEquals\": [\n          \"platformType\",\n          \"Windows\"\n        ]\n      },\n      \"inputs\": {\n        \"runCommand\": [\n          \"$ErrorActionPreference = 'Stop'\",\n          \"$scriptPath = Split-Path -Parent $MyInvocation.MyCommand.Definition\",\n          \"$zipFilename = 'EC2LaunchMigrationTool.zip'\",\n          \"$migrationToolName = 'EC2LaunchMigrationTool'\",\n          \"$migrationZipFilePath = Join-Path -Path $scriptPath -ChildPath $zipFilename\",\n          \"$migrationDirectory = Join-Path -Path $scriptPath -ChildPath $migrationToolName\",\n          \"$migrationInstallScriptPath = Join-Path $migrationDirectory -ChildPath Install.ps1\",\n          \"\",\n          \"function Main {\",\n          \"  Clear-MigrationTool\",\n          \"  Get-MigrationTool\",\n          \"  Add-Type -AssemblyName System.IO.Compression.FileSystem\",\n          \"  Unzip $migrationZipFilePath $migrationDirectory\",\n          \"  Run-Migration\",\n          \"}\",\n          \"\",\n          \"function Clear-MigrationTool {\",\n          \"  try {\",\n          \"    if (Test-Path $migrationDirectory) {\",\n          \"      Remove-Item $migrationDirectory -Force -Recurse\",\n          \"    }\",\n          \"    if (Test-Path $migrationZipFilePath) {\",\n          \"      Remove-Item $migrationZipFilePath -Force\",\n          \"    }\",\n          \"  } catch {\",\n          \"    Write-Host ('Cleaning migration tool resulted in error: {0}.' -f $_.Exception.Message)\",\n          \"    Exit -1\",\n          \"  }\",\n          \"}\",\n          \"\",\n          \"function GetOsArch {\",\n          \"  if ([System.IntPtr]::Size -eq 8) {\",\n          \"    return 'amd64'\",\n          \"  } else {\",\n          \"    return '386'\",\n          \"  }\",\n          \"}\",\n          \"\",\n          \"function GetS3Endpoint {\",\n          \"  param([string]$region)\",\n          \"\",\n          \"  if ($region.StartsWith('us-gov-')) {\",\n          \"    $s3Endpoint = 's3-{0}.amazonaws.com'\",\n          \"  } elseif ($region.StartsWith('cn-')) {\",\n          \"    $s3Endpoint = 's3.{0}.amazonaws.com.cn'\",\n          \"  } elseif ($region -eq 'us-iso-east-1') {\",\n          \"    $s3Endpoint = 's3.us-iso-east-1.c2s.ic.gov'\",\n          \"  } elseif ($region -eq 'us-isob-east-1') {\",\n          \"    $s3Endpoint = 's3.us-isob-east-1.sc2s.sgov.gov'\",\n          \"  } else {\",\n          \"    $s3Endpoint = 's3.{0}.amazonaws.com'\",\n          \"  }\",\n          \"  $s3Endpoint -f $region\",\n          \"}\",\n          \"\",\n          \"function Get-Region {\",\n          \"  if (-not [string]::IsNullOrEmpty($env:AWS_SSM_REGION_NAME)) {\",\n          \"    return $env:AWS_SSM_REGION_NAME\",\n          \"  }\",\n          \"\",\n          \"  try {\",\n          \"    $wc = New-Object System.Net.WebClient\",\n          \"    $wc.Headers.Add('X-aws-ec2-metadata-token-ttl-seconds', 21600)\",\n          \"    $token = $wc.UploadString('http://169.254.169.254/latest/api/token', 'PUT', '')\",\n          \"    $wc = New-Object System.Net.WebClient\",\n          \"    $wc.Headers.Add('X-aws-ec2-metadata-token', $token)\",\n          \"    $identityDocument = $wc.DownloadString('http://169.254.169.254/latest/dynamic/instance-identity/document')\",\n          \"    return ($identityDocument | ConvertFrom-Json).region\",\n          \"  } catch {\",\n          \"    Write-Host ('Error encountered while getting region from IMDS: {0}.' -f $_.Exception.Message)\",\n          \"    return 'us-east-1'\",\n          \"  }\",\n          \"}\",\n          \"\",\n          \"function Get-MigrationTool {\",\n          \"  try {\",\n          \"    [ValidatePattern(\\\"^(?!(.*--))(?!(.*-$))[a-z0-9]([a-z0-9-]){0,62}$\\\")] \",\n          \"    [string]$region = Get-Region\",\n          \"    $Arch = GetOsArch\",\n          \"    $s3Endpoint = GetS3Endpoint $region\",\n          \"    $s3location = 'https://amazon-ec2launch-v2-utils-{0}.{1}/MigrationTool/windows/{2}/latest/{3}'\",\n          \"    $source = $s3location -f $region, $s3Endpoint, $Arch, $zipFilename\",\n          \"    Start-BitsTransfer -Source $source -Destination $migrationZipFilePath\",\n          \"  } catch {\",\n          \"    Write-Host ('Error encoutered while getting the migration tool: {0}.' -f $_.Exception.Message)\",\n          \"    Exit -1\",\n          \"  }\",\n          \"}\",\n          \"\",\n          \"function Unzip {\",\n          \"  param([string]$ziparchive, [string]$extractpath)\",\n          \"\",\n          \"  try {\",\n          \"    [System.IO.Compression.ZipFile]::ExtractToDirectory($ziparchive, $extractpath)\",\n          \"  } catch {\",\n          \"    Write-Host ('Error when extracting zip file: {0}.' -f $_.Exception.Message)\",\n          \"    Exit -1\",\n          \"  }\",\n          \"}\",\n          \"\",\n          \"function Run-Migration {\",\n          \"  try {\",\n          \"    if ('{{dryRun}}' -eq 'true') {\",\n          \"      & $migrationInstallScriptPath -DryRun\",\n          \"    } else {\",\n          \"      & $migrationInstallScriptPath\",\n          \"    }\",\n          \"  } catch {\",\n          \"    Write-Host ('Error when executing migration script: {0}.' -f $_.Exception.Message)\",\n          \"    Exit -1\",\n          \"  }\",\n          \"}\",\n          \"\",\n          \"Main\"\n        ]\n      }\n    }\n  ]\n}",
  "CreatedDate": "2022-03-19T08:50:12.298Z",
  "DisplayName": null,
  "DocumentFormat": {
    "Value": "JSON"
  },
  "DocumentType": {
    "Value": "Command"
  },
  "DocumentVersion": "8",
  "Name": "AWSEC2Launch-RunMigration",
  "Requires": [],
  "ReviewStatus": null,
  "Status": {
    "Value": "Active"
  },
  "StatusInformation": null,
  "VersionName": null,
  "ResponseMetadata": {
    "RequestId": "bb3f479d-7dd3-4d60-8f47-59b238537c61",
    "Metadata": {},
    "ChecksumAlgorithm": 0,
    "ChecksumValidationStatus": 0
  },
  "ContentLength": 6189,
  "HttpStatusCode": 200,
  "LoggedAt": "2022-10-03T07:25:38.9883829+00:00"
}
