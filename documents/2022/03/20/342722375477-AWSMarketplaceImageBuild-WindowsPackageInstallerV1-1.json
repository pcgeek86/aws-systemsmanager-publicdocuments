{
  "AttachmentsContent": [],
  "Content": "{\n  \"outputs\" : [ \"createImage.ImageId\" ],\n  \"schemaVersion\" : \"0.3\",\n  \"description\" : \"Install seller packages on an AMI. This is a public document used by AWSMP Image Building Service. Do not alter the contents, modify permissions or delete this document.\",\n  \"assumeRole\" : \"{{ ssmAutomationRoleArn }}\",\n  \"parameters\" : {\n    \"subnetId\" : {\n      \"default\" : \"subnet-a39a38da\",\n      \"description\" : \"Subnet Id to use\",\n      \"type\" : \"String\"\n    },\n    \"installTimeoutInSeconds\" : {\n      \"default\" : \"3600\",\n      \"description\" : \"Timeout in seconds for installation to time out\",\n      \"type\" : \"String\"\n    },\n    \"sourceImageId\" : {\n      \"description\" : \"AMI to patch\",\n      \"type\" : \"String\"\n    },\n    \"userData\" : {\n      \"description\" : \"Base64 encoded user data\",\n      \"type\" : \"String\"\n    },\n    \"instanceType\" : {\n      \"description\" : \"Instance type to use\",\n      \"type\" : \"String\"\n    },\n    \"packageUrls\" : {\n      \"description\" : \"package URLs, separated by |\",\n      \"type\" : \"String\"\n    },\n    \"installScript\" : {\n      \"description\" : \"Install script\",\n      \"type\" : \"StringList\"\n    },\n    \"launchBlockDeviceMappings\" : {\n      \"description\" : \"Block Device Mappings when launching EC2\",\n      \"type\" : \"MapList\"\n    },\n    \"outputS3KeyPrefix\" : {\n      \"description\" : \"Key prefix for storing the logs\",\n      \"type\" : \"String\"\n    },\n    \"ssmAutomationRoleArn\" : {\n      \"default\" : \"arn:aws:iam::342722375477:role/SSMAutomationRole\",\n      \"description\" : \"SSM Automation role ARN to use\",\n      \"type\" : \"String\"\n    },\n    \"securityGroupId\" : {\n      \"default\" : [ \"sg-259c755b\" ],\n      \"description\" : \"Security group Id to use\",\n      \"type\" : \"StringList\"\n    },\n    \"marketplaceInstanceTagValue\" : {\n      \"description\" : \"Build ID generated by image building service\",\n      \"type\" : \"String\"\n    },\n    \"installCommand\" : {\n      \"description\" : \"install command\",\n      \"type\" : \"String\"\n    },\n    \"outputS3BucketName\" : {\n      \"description\" : \"Name of S3 bucket to store install command output\",\n      \"type\" : \"String\"\n    },\n    \"targetImageName\" : {\n      \"description\" : \"Name of new AMI\",\n      \"type\" : \"String\"\n    },\n    \"targetImageDescription\" : {\n      \"default\" : \"\",\n      \"description\" : \"Description of new AMI\",\n      \"type\" : \"String\"\n    },\n    \"fileNames\" : {\n      \"description\" : \"file names, separated by |\",\n      \"type\" : \"String\"\n    },\n    \"marketplaceInstanceTagKey\" : {\n      \"description\" : \"Marketplace tag attached to instances launched from image building service\",\n      \"type\" : \"String\"\n    },\n    \"ssmInstanceProfileName\" : {\n      \"default\" : \"SSMInstanceProfile\",\n      \"description\" : \"Instance profile to use\",\n      \"type\" : \"String\"\n    }\n  },\n  \"mainSteps\" : [ {\n    \"maxAttempts\" : 3,\n    \"inputs\" : {\n      \"IamInstanceProfileName\" : \"{{ ssmInstanceProfileName }}\",\n      \"MaxInstanceCount\" : 1,\n      \"TagSpecifications\" : [ {\n        \"ResourceType\" : \"instance\",\n        \"Tags\" : [ {\n          \"Value\" : \"{{ marketplaceInstanceTagValue }}\",\n          \"Key\" : \"{{ marketplaceInstanceTagKey }}\"\n        } ]\n      } ],\n      \"UserData\" : \"{{ userData }}\",\n      \"BlockDeviceMappings\" : \"{{ launchBlockDeviceMappings }}\",\n      \"ImageId\" : \"{{ sourceImageId }}\",\n      \"SubnetId\" : \"{{ subnetId }}\",\n      \"InstanceType\" : \"{{ instanceType }}\",\n      \"SecurityGroupIds\" : \"{{ securityGroupId }}\",\n      \"MinInstanceCount\" : 1\n    },\n    \"name\" : \"launchInstance\",\n    \"action\" : \"aws:runInstances\",\n    \"onFailure\" : \"Abort\",\n    \"timeoutSeconds\" : 1200\n  }, {\n    \"maxAttempts\" : 3,\n    \"inputs\" : {\n      \"Parameters\" : {\n        \"allowDowngrade\" : \"false\"\n      },\n      \"InstanceIds\" : [ \"{{ launchInstance.InstanceIds }}\" ],\n      \"DocumentName\" : \"AWS-UpdateSSMAgent\"\n    },\n    \"name\" : \"updateSSMAgent\",\n    \"action\" : \"aws:runCommand\",\n    \"onFailure\" : \"Abort\",\n    \"timeoutSeconds\" : 600\n  }, {\n    \"maxAttempts\" : 3,\n    \"inputs\" : {\n      \"OutputS3KeyPrefix\" : \"{{ outputS3KeyPrefix }}\",\n      \"Parameters\" : {\n        \"executionTimeout\" : \"{{ installTimeoutInSeconds }}\",\n        \"commands\" : \"{{ installScript }}\"\n      },\n      \"InstanceIds\" : [ \"{{ launchInstance.InstanceIds }}\" ],\n      \"OutputS3BucketName\" : \"{{ outputS3BucketName }}\",\n      \"DocumentName\" : \"AWS-RunPowerShellScript\"\n    },\n    \"name\" : \"installPackages\",\n    \"action\" : \"aws:runCommand\",\n    \"onFailure\" : \"Abort\",\n    \"timeoutSeconds\" : 9000\n  }, {\n    \"maxAttempts\" : 3,\n    \"inputs\" : {\n      \"OutputS3KeyPrefix\" : \"{{ outputS3KeyPrefix }}\",\n      \"Parameters\" : {\n        \"commands\" : [ \"$ec2ConfigSettings = \\\"$env:programFiles\\\\Amazon\\\\Ec2ConfigService\\\\Settings\\\\config.xml\\\"\", \"if (Test-Path -Path $ec2ConfigSettings) { $nodes = @(\\\"Ec2DynamicBootVolumeSize\\\", \\\"Ec2SetPassword\\\", \\\"Ec2HandleUserData\\\", \\\"Ec2WindowsActivate\\\"); [xml]$ec2Config = Get-Content \\\"$ec2ConfigSettings\\\"; foreach ($configNode in $nodes) {$contentNode = $ec2Config | Select-Xml -XPath \\\"//Plugin/Name[text() = '$configNode']/../State\\\"; $contentNode.Node.'#text' = 'Enabled'} $ec2Config.Save(\\\"$ec2ConfigSettings\\\")} else {Write-Host \\\"path $ec2ConfigSettings not found\\\"}\", \"$ec2InitializeInstanceScript = \\\"$env:programData\\\\Amazon\\\\EC2-Windows\\\\Launch\\\\Scripts\\\\InitializeInstance.ps1\\\"\", \"if (Test-Path -path $ec2InitializeInstanceScript) { Write-host \\\"Rescheduling launch script\\\"; Invoke-Expression \\\"& $ec2InitializeInstanceScript -Schedule\\\" } else { Write-host \\\"path $ec2LaunchScript not found\\\" }\" ]\n      },\n      \"InstanceIds\" : [ \"{{ launchInstance.InstanceIds }}\" ],\n      \"OutputS3BucketName\" : \"{{ outputS3BucketName }}\",\n      \"DocumentName\" : \"AWS-RunPowerShellScript\"\n    },\n    \"name\" : \"resetEc2Config\",\n    \"action\" : \"aws:runCommand\",\n    \"onFailure\" : \"Abort\",\n    \"timeoutSeconds\" : 10800\n  }, {\n    \"maxAttempts\" : 3,\n    \"inputs\" : {\n      \"OutputS3KeyPrefix\" : \"{{ outputS3KeyPrefix }}\",\n      \"InstanceIds\" : [ \"{{ launchInstance.InstanceIds }}\" ],\n      \"OutputS3BucketName\" : \"{{ outputS3BucketName }}\",\n      \"DocumentName\" : \"AWSEC2-RunSysprep\"\n    },\n    \"name\" : \"sysprepGeneralize\",\n    \"action\" : \"aws:runCommand\",\n    \"onFailure\" : \"Continue\",\n    \"timeoutSeconds\" : 600\n  }, {\n    \"maxAttempts\" : 3,\n    \"inputs\" : {\n      \"DesiredState\" : \"stopped\",\n      \"InstanceIds\" : [ \"{{ launchInstance.InstanceIds }}\" ]\n    },\n    \"name\" : \"stopInstance\",\n    \"action\" : \"aws:changeInstanceState\",\n    \"onFailure\" : \"Continue\"\n  }, {\n    \"maxAttempts\" : 3,\n    \"inputs\" : {\n      \"ImageName\" : \"{{ targetImageName }}\",\n      \"InstanceId\" : \"{{ launchInstance.InstanceIds }}\",\n      \"ImageDescription\" : \"{{ targetImageDescription }}\"\n    },\n    \"name\" : \"createImage\",\n    \"action\" : \"aws:createImage\",\n    \"onFailure\" : \"Continue\",\n    \"timeoutSeconds\" : 3600\n  }, {\n    \"maxAttempts\" : 3,\n    \"inputs\" : {\n      \"DesiredState\" : \"terminated\",\n      \"InstanceIds\" : [ \"{{ launchInstance.InstanceIds }}\" ]\n    },\n    \"name\" : \"terminateInstance\",\n    \"action\" : \"aws:changeInstanceState\",\n    \"onFailure\" : \"Abort\"\n  } ]\n}",
  "CreatedDate": "2022-02-10T22:19:34.728Z",
  "DisplayName": null,
  "DocumentFormat": {
    "Value": "JSON"
  },
  "DocumentType": {
    "Value": "Automation"
  },
  "DocumentVersion": "1",
  "Name": "arn:aws:ssm:us-west-2:342722375477:document/AWSMarketplaceImageBuild-WindowsPackageInstallerV1",
  "Requires": [],
  "ReviewStatus": null,
  "Status": {
    "Value": "Active"
  },
  "StatusInformation": null,
  "VersionName": null,
  "ResponseMetadata": {
    "RequestId": "4d7f0688-daaf-420a-8b8f-f46bb43fc515",
    "Metadata": {},
    "ChecksumAlgorithm": 0,
    "ChecksumValidationStatus": 0
  },
  "ContentLength": 8066,
  "HttpStatusCode": 200,
  "LoggedAt": "2022-03-20T07:11:50.2189949+00:00"
}
