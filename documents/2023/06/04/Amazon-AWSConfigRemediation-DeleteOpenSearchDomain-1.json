{
  "AttachmentsContent": [],
  "Content": "{\n  \"schemaVersion\" : \"0.3\",\n  \"description\" : \"### Document name - AWSConfigRemediation-DeleteOpenSearchDomain\\n\\n## What does this document do?\\nThis runbook deletes the given Amazon OpenSearch Service domain using the [DeleteDomain](https://docs.aws.amazon.com/opensearch-service/latest/developerguide/configuration-api.html#configuration-api-actions-deletedomain) API.\\n\\n## Input Parameters\\n* AutomationAssumeRole: (Required) The ARN of the role that allows Automation to perform the actions on your behalf.\\n* DomainName: (Required) The name of the Amazon OpenSearch Service domain that you want to delete.\\n\\n## Output Parameters\\n* DeleteOpenSearchDomainAndVerify.Output: Success message or failure exception.\\n\",\n  \"assumeRole\" : \"{{ AutomationAssumeRole }}\",\n  \"parameters\" : {\n    \"AutomationAssumeRole\" : {\n      \"type\" : \"String\",\n      \"description\" : \"(Required) The Amazon Resource Name (ARN) of the AWS Identity and Access Management (IAM) role that allows Systems Manager Automation to perform the actions on your behalf.\",\n      \"allowedPattern\" : \"^arn:(?:aws|aws-us-gov|aws-cn):iam::\\\\d{12}:role\\\\/[\\\\w+=,.@/-]+$\"\n    },\n    \"DomainName\" : {\n      \"type\" : \"String\",\n      \"description\" : \"(Required) The name of the Amazon OpenSearch Service domain that you want to delete.\",\n      \"allowedPattern\" : \"(\\\\d{12}/)?[a-z]{1}[a-z0-9-]{2,28}\"\n    }\n  },\n  \"outputs\" : [ \"DeleteOpenSearchDomainAndVerify.Output\" ],\n  \"mainSteps\" : [ {\n    \"name\" : \"DeleteOpenSearchDomainAndVerify\",\n    \"action\" : \"aws:executeScript\",\n    \"description\" : \"## DeleteOpenSearchDomainAndVerify\\nAccepts the Amazon OpenSearch Service domain name as input, deletes it, and verifies the deletion.\\n## Outputs\\n* Output: Success message or failure exception.\\n\",\n    \"timeoutSeconds\" : 600,\n    \"inputs\" : {\n      \"Runtime\" : \"python3.8\",\n      \"Handler\" : \"handler\",\n      \"InputPayload\" : {\n        \"DomainName\" : \"{{ DomainName }}\"\n      },\n      \"Script\" : \"import boto3\\nimport re\\nfrom botocore.config import Config\\n\\nconfig = Config(\\n    retries={\\n        \\\"max_attempts\\\": 10,\\n        \\\"mode\\\": \\\"standard\\\"\\n    }\\n)\\n\\nopensearch_client = boto3.client(\\\"opensearch\\\", config=config)\\n\\ndef verify_opensearch_domain_exist(domain_name):\\n    desc_domain = opensearch_client.describe_domain(DomainName=domain_name)\\n    if desc_domain[\\\"DomainStatus\\\"][\\\"Deleted\\\"]:\\n        return False\\n    return True\\n\\ndef delete_opensearch_domain(domain_name):\\n    return opensearch_client.delete_domain(DomainName=domain_name)\\n\\ndef handler(event, context):\\n    domain_name = event[\\\"DomainName\\\"]\\n    domain_pattern = r\\\"(\\\\d{12}/)?[a-z]{1}[a-z0-9-]{2,28}\\\"\\n    if re.match(domain_pattern, domain_name):\\n        domain_name = domain_name.split(\\\"/\\\")[-1]\\n\\n    response = delete_opensearch_domain(domain_name)['ResponseMetadata']\\n    domain_exist = verify_opensearch_domain_exist(domain_name)\\n    if not domain_exist:\\n        return {\\n            \\\"output\\\": {\\n                \\\"message\\\": \\\"Verification of delete Amazon OpenSearch service domain is successful.\\\",\\n                \\\"HTTPResponse\\\": response,\\n            }\\n        }\\n    raise Exception(\\\"VERIFICATION FAILED. AMAZON OPENSEARCH SERVICE DOMAIN NOT DELETED.\\\")\"\n    },\n    \"outputs\" : [ {\n      \"Name\" : \"Output\",\n      \"Selector\" : \"$.Payload.output\",\n      \"Type\" : \"StringMap\"\n    } ]\n  } ]\n}",
  "CreatedDate": "2022-05-24T15:17:35.342Z",
  "DisplayName": null,
  "DocumentFormat": {
    "Value": "JSON"
  },
  "DocumentType": {
    "Value": "Automation"
  },
  "DocumentVersion": "1",
  "Name": "AWSConfigRemediation-DeleteOpenSearchDomain",
  "Requires": [],
  "ReviewStatus": null,
  "Status": {
    "Value": "Active"
  },
  "StatusInformation": null,
  "VersionName": null,
  "ResponseMetadata": {
    "RequestId": "19dca1cb-3446-4a8e-95cb-6a6f2a136b44",
    "Metadata": {},
    "ChecksumAlgorithm": 0,
    "ChecksumValidationStatus": 0
  },
  "ContentLength": 3814,
  "HttpStatusCode": 200,
  "LoggedAt": "2023-06-04T07:10:23.8942165+00:00"
}
