{
  "AttachmentsContent": [],
  "Content": "{\n  \"description\" : \"### Document Name - AWS-ChangeDDBRWCapacityMode\\n\\n## What does this document do?\\nThis document changes the read/write capacity mode for one or more DynamoDB tables to on-demand mode or provisioned mode.\\n\\n## Input Parameters\\n* TableNames: (Required) Comma separated list of DynamoDB table names to change the read/write capacity mode for.\\n* CapacityMode: (Required) The desired read/write capacity mode. When switching from on-demand(pay-per-request) to provisioned capacity, initial provisioned capacity values must be set. The initial provisioned capacity values are estimated based on the consumed read and write capacity of your table and global secondary indexes over the past 30 minutes.\\n  * Allowed Values: PROVISIONED | PAY_PER_REQUEST\\n* ReadCapacityUnits: (Optional) The maximum number of strongly consistent reads consumed per second before DynamoDB returns a ThrottlingException.\\n* WriteCapacityUnits: (Optional) The maximum number of writes consumed per second before DynamoDB returns a ThrottlingException.\\n* AutomationAssumeRole: (Optional) The ARN of the role that allows Automation to perform the actions on your behalf.\\n\\n## Output Parameters\\n* ChangeDDBRWCapacityMode.SuccessesTables: List of DynamoDB table names where the capacity mode was successfully changed.\\n* ChangeDDBRWCapacityMode.FailedTables: Maplist of DynamoDB table names where changing the capacity mode failed and the reason for the failure.\\n\\n## Minimum Permissions Required\\n* `dynamodb:DescribeTable` on the target DynamoDB table.\\n* `dynamodb:UpdateTable` on the target DynamoDB table.\\n\",\n  \"schemaVersion\" : \"0.3\",\n  \"assumeRole\" : \"{{AutomationAssumeRole}}\",\n  \"parameters\" : {\n    \"TableNames\" : {\n      \"type\" : \"StringList\",\n      \"description\" : \"(Required) Comma separated string list for Dynamo DB table names to change Read/write capacity mode  to on-demand mode or provisioned mode.\",\n      \"allowedPattern\" : \"[a-zA-Z0-9_.-]+\"\n    },\n    \"CapacityMode\" : {\n      \"type\" : \"String\",\n      \"description\" : \"(Required) The desired read/write capacity mode.\",\n      \"allowedValues\" : [ \"PROVISIONED\", \"PAY_PER_REQUEST\" ]\n    },\n    \"ReadCapacityUnits\" : {\n      \"type\" : \"Integer\",\n      \"description\" : \"The maximum number of strongly consistent reads consumed per second before DynamoDB returns a ThrottlingException.\",\n      \"default\" : 0,\n      \"allowedPattern\" : \"^[0-9]\\\\d*$\"\n    },\n    \"WriteCapacityUnits\" : {\n      \"type\" : \"Integer\",\n      \"description\" : \"The maximum number of writes consumed per second before DynamoDB returns a ThrottlingException.\",\n      \"default\" : 0,\n      \"allowedPattern\" : \"^[0-9]\\\\d*$\"\n    },\n    \"AutomationAssumeRole\" : {\n      \"type\" : \"String\",\n      \"description\" : \"(Optional) The ARN of the role that allows Automation to perform the actions on your behalf.\",\n      \"default\" : \"\",\n      \"allowedPattern\" : \"^arn:aws(-cn|-us-gov)?:iam::\\\\d{12}:role\\\\/[\\\\w+=,.@_\\\\/-]+|^$\"\n    }\n  },\n  \"outputs\" : [ \"ChangeDDBRWCapacityMode.SuccessesTables\", \"ChangeDDBRWCapacityMode.FailedTables\" ],\n  \"mainSteps\" : [ {\n    \"name\" : \"ChangeDDBRWCapacityMode\",\n    \"action\" : \"aws:executeScript\",\n    \"onFailure\" : \"Abort\",\n    \"isCritical\" : true,\n    \"isEnd\" : true,\n    \"timeoutSeconds\" : 600,\n    \"description\" : \"## RestrictIncomingTrafficTemplate\\nChanges DynamoDB databases' read/write capacity mode to the desired setting.\\n## Inputs\\n* TableNames: The list of DynamoDB tables to change the read/write capacity mode for.\\n* CapacityMode: The desired read/write capacity mode for the DynamoDB tables\\n* ReadCapacityUnits: The maximum number of strongly consistent reads consumed per second before DynamoDB returns a ThrottlingException.\\n* WriteCapacityUnits: The maximum number of writes consumed per second before DynamoDB returns a ThrottlingException.\\n## Outputs\\n* SuccessesTables: List of DynamoDB table names where the capacity mode was successfully changed.\\n* FailedTables: Maplist of DynamoDB table names where changing the capacity mode failed and the reason for the failure.\\n\",\n    \"inputs\" : {\n      \"Runtime\" : \"python3.7\",\n      \"Handler\" : \"change_DDB_RW_capacity\",\n      \"InputPayload\" : {\n        \"TableNames\" : \"{{TableNames}}\",\n        \"CapacityMode\" : \"{{CapacityMode}}\",\n        \"ReadCapacityUnits\" : \"{{ReadCapacityUnits}}\",\n        \"WriteCapacityUnits\" : \"{{WriteCapacityUnits}}\"\n      },\n      \"Script\" : \"import json\\nimport boto3\\n\\nclient = boto3.client('dynamodb')\\n\\ndef change_DDB_RW_capacity(event, context):\\n    TableNames = event['TableNames']\\n    CapacityMode = event['CapacityMode']\\n    if 'ReadCapacityUnits' in event.keys():\\n        ReadCapacityUnits = event['ReadCapacityUnits']\\n    else:\\n        ReadCapacityUnits = 0\\n\\n    if 'WriteCapacityUnits' in event.keys():\\n        WriteCapacityUnits = event['WriteCapacityUnits']\\n    else:\\n        WriteCapacityUnits = 0\\n    FailedTables = []\\n    SuccessesTable = []\\n    for TableName in TableNames:\\n      try:\\n          currentMode = get_current_capacity_mode(TableName)\\n          if(currentMode.lower() == CapacityMode.lower()):\\n              raise Exception(\\\"Table \\\" + \\\" already in \\\" + currentMode + \\\" mode.\\\")\\n          if CapacityMode.lower() == \\\"PROVISIONED\\\".lower():\\n              if ReadCapacityUnits > 0 and WriteCapacityUnits > 0:\\n                  response = client.update_table(\\n                      TableName = TableName,\\n                      BillingMode = 'PROVISIONED',\\n                      ProvisionedThroughput = {\\n                          'ReadCapacityUnits': ReadCapacityUnits,\\n                          'WriteCapacityUnits': WriteCapacityUnits\\n                      }\\n                  )\\n              else:\\n                  raise Exception(\\\"You must specify Read/Write capacity units in case of provisioned mode.\\\")\\n          elif CapacityMode.lower() == \\\"PAY_PER_REQUEST\\\".lower():\\n              response = client.update_table(\\n                  TableName=TableName,\\n                  BillingMode='PAY_PER_REQUEST'\\n              )\\n          else:\\n              raise Exception(\\\"No capacity mode called: \\\" + CapacityMode)\\n          SuccessesTable.append(TableName)\\n      except Exception as e:\\n          FailedTables.append({\\\"TableName\\\" : TableName , \\\"errorMsg\\\" : str(e)})\\n      out = {\\n          \\\"SuccessesTables\\\":SuccessesTable,\\n          \\\"FailedTables\\\":FailedTables\\n      }\\n    return out\\n\\ndef get_current_capacity_mode(TableName):\\n    TableDetails = client.describe_table(TableName = TableName)\\n    current_RCU = TableDetails.get('Table').get('ProvisionedThroughput').get('ReadCapacityUnits')\\n    current_WCU = TableDetails.get('Table').get('ProvisionedThroughput').get('WriteCapacityUnits')\\n    if current_RCU == 0 or current_WCU == 0 :\\n        return 'PAY_PER_REQUEST'\\n    else :\\n        return 'PROVISIONED'\\n\"\n    },\n    \"outputs\" : [ {\n      \"Name\" : \"SuccessesTables\",\n      \"Selector\" : \"$.Payload.SuccessesTables\",\n      \"Type\" : \"StringList\"\n    }, {\n      \"Name\" : \"FailedTables\",\n      \"Selector\" : \"$.Payload.FailedTables\",\n      \"Type\" : \"MapList\"\n    } ]\n  } ]\n}",
  "CreatedDate": "2021-04-22T18:19:56.316Z",
  "DisplayName": null,
  "DocumentFormat": {
    "Value": "JSON"
  },
  "DocumentType": {
    "Value": "Automation"
  },
  "DocumentVersion": "1",
  "Name": "AWS-ChangeDDBRWCapacityMode",
  "Requires": [],
  "ReviewStatus": null,
  "Status": {
    "Value": "Active"
  },
  "StatusInformation": null,
  "VersionName": null,
  "ResponseMetadata": {
    "RequestId": "2a6645a0-fd0a-487a-9797-fc9797686674",
    "Metadata": {},
    "ChecksumAlgorithm": 0,
    "ChecksumValidationStatus": 0
  },
  "ContentLength": 7694,
  "HttpStatusCode": 200,
  "LoggedAt": "2023-05-27T07:09:37.6723237+00:00"
}
