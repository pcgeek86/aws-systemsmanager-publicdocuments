{
  "AttachmentsContent": [],
  "Content": "{\n  \"description\": \"Copy Snapshot\",\n  \"schemaVersion\": \"0.3\",\n  \"assumeRole\": \"{{ AutomationAssumeRole }}\",\n  \"parameters\": {\n    \"SnapshotId\": {\n      \"type\": \"String\",\n      \"description\": \"(Required) The ID of the EBS snapshot to copy.\"\n    },\n    \"SourceRegion\": {\n      \"type\": \"String\",\n      \"description\": \"(Required) The ID of the region that contains the snapshot to be copied.\"\n    },\n    \"Description\": {\n      \"type\": \"String\",\n      \"description\": \"(Optional) A description for the EBS snapshot.\",\n      \"default\": \"\"\n    },\n    \"LambdaAssumeRole\": {\n      \"type\": \"String\",\n      \"description\": \"(Optional) The ARN of the role assumed by lambda\",\n      \"default\": \"\"\n    },\n    \"AutomationAssumeRole\": {\n      \"default\": \"\",\n      \"type\": \"String\",\n      \"description\": \"(Optional) The ARN of the role that allows Automation to perform the actions on your behalf.\"\n    }\n  },\n  \"mainSteps\": [\n    {\n      \"action\": \"aws:createStack\",\n      \"inputs\": {\n        \"StackName\": \"CopySnapshotStack{{automation:EXECUTION_ID}}\",\n        \"TemplateBody\": \"AWSTemplateFormatVersion: '2010-09-09'\\nConditions:\\n  LambdaAssumeRoleNotSpecified:\\n    Fn::Or:\\n    - Fn::Equals:\\n      - Ref: LambdaRoleArn\\n      - ''\\n    - Fn::Equals:\\n      - Ref: LambdaRoleArn\\n      - undefined\\nParameters:\\n  LambdaName:\\n    Description: The lambda function name\\n    Type: String\\n  LambdaRoleArn:\\n    Default: ''\\n    Description: The ARN of the role that allows Lambda created by Automation to perform\\n      the action on your behalf\\n    Type: String\\nResources:\\n  CopySnapshotLambda:\\n    Properties:\\n      Code:\\n        ZipFile: \\\"#\\\\n# Copyright 2018 Amazon.com, Inc. or its affiliates. All Rights\\\\\\n          \\\\ Reserved.\\\\n#\\\\n# Permission is hereby granted, free of charge, to any person\\\\\\n          \\\\ obtaining a copy of this\\\\n# software and associated documentation files\\\\\\n          \\\\ (the \\\\\\\"Software\\\\\\\"), to deal in the Software\\\\n# without restriction, including\\\\\\n          \\\\ without limitation the rights to use, copy, modify,\\\\n# merge, publish,\\\\\\n          \\\\ distribute, sublicense, and/or sell copies of the Software, and to\\\\n#\\\\\\n          \\\\ permit persons to whom the Software is furnished to do so.\\\\n#\\\\n# THE SOFTWARE\\\\\\n          \\\\ IS PROVIDED \\\\\\\"AS IS\\\\\\\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\\\\n\\\\\\n          # INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\\\\\\n          \\\\ FOR A\\\\n# PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\\\\\n          \\\\ AUTHORS OR COPYRIGHT\\\\n# HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\\\\\n          \\\\ LIABILITY, WHETHER IN AN ACTION\\\\n# OF CONTRACT, TORT OR OTHERWISE, ARISING\\\\\\n          \\\\ FROM, OUT OF OR IN CONNECTION WITH THE\\\\n# SOFTWARE OR THE USE OR OTHER\\\\\\n          \\\\ DEALINGS IN THE SOFTWARE.\\\\n#\\\\nimport boto3\\\\n\\\\n\\\\ndef handler(event, context):\\\\n\\\\\\n          \\\\tec2_client = boto3.client(\\\\\\\"ec2\\\\\\\")\\\\n\\\\n\\\\tsnapshot_id = event[\\\\\\\"SnapshotId\\\\\\\"\\\\\\n          ]\\\\n\\\\tsource_region = event[\\\\\\\"SourceRegion\\\\\\\"]\\\\n\\\\tdescription = event[\\\\\\\"Description\\\\\\\"\\\\\\n          ]\\\\n\\\\tresponse = ec2_client.copy_snapshot(\\\\n\\\\t\\\\tDescription=description,\\\\n\\\\\\n          \\\\t\\\\tSourceRegion=source_region,\\\\n\\\\t\\\\tSourceSnapshotId=snapshot_id\\\\n\\\\t)\\\\n\\\\\\n          \\\\n\\\\treturn {\\\\n\\\\t\\\\t\\\\\\\"SnapshotId\\\\\\\": response[\\\\\\\"SnapshotId\\\\\\\"]\\\\n\\\\t}\\\"\\n      FunctionName:\\n        Ref: LambdaName\\n      Handler: index.handler\\n      MemorySize: 128\\n      Role:\\n        Fn::If:\\n        - LambdaAssumeRoleNotSpecified\\n        - Fn::GetAtt:\\n          - LambdaRole\\n          - Arn\\n        - Ref: LambdaRoleArn\\n      Runtime: python3.7\\n      Timeout: 60\\n    Type: AWS::Lambda::Function\\n  LambdaRole:\\n    Condition: LambdaAssumeRoleNotSpecified\\n    Properties:\\n      AssumeRolePolicyDocument:\\n        Statement:\\n        - Action:\\n          - sts:AssumeRole\\n          Effect: Allow\\n          Principal:\\n            Service:\\n            - lambda.amazonaws.com\\n        Version: '2012-10-17'\\n      Path: /\\n      Policies:\\n      - PolicyDocument:\\n          Statement:\\n            Action:\\n            - ec2:CopySnapshot\\n            Effect: Allow\\n            Resource: '*'\\n          Version: '2012-10-17'\\n        PolicyName: CopySnapshotLambdaPolicy\\n    Type: AWS::IAM::Role\\n\",\n        \"Parameters\": [\n          {\n            \"ParameterValue\": \"{{LambdaAssumeRole}}\",\n            \"ParameterKey\": \"LambdaRoleArn\"\n          },\n          {\n            \"ParameterValue\": \"CopySnapshotLambda-{{automation:EXECUTION_ID}}\",\n            \"ParameterKey\": \"LambdaName\"\n          }\n        ],\n        \"Capabilities\": [\n          \"CAPABILITY_IAM\"\n        ]\n      },\n      \"name\": \"createDocumentStack\"\n    },\n    {\n      \"action\": \"aws:invokeLambdaFunction\",\n      \"inputs\": {\n        \"FunctionName\": \"CopySnapshotLambda-{{automation:EXECUTION_ID}}\",\n        \"Payload\": \"{\\\"SnapshotId\\\": \\\"{{SnapshotId}}\\\", \\\"SourceRegion\\\": \\\"{{SourceRegion}}\\\", \\\"Description\\\": \\\"{{Description}}\\\"}\"\n      },\n      \"name\": \"copySnapshot\"\n    },\n    {\n      \"action\": \"aws:deleteStack\",\n      \"inputs\": {\n        \"StackName\": \"CopySnapshotStack{{automation:EXECUTION_ID}}\"\n      },\n      \"name\": \"deleteCloudFormationTemplate\"\n    }\n  ],\n  \"outputs\": [\n    \"copySnapshot.Payload\"\n  ]\n}\n",
  "CreatedDate": "2022-06-21T21:18:32.91Z",
  "DisplayName": null,
  "DocumentFormat": {
    "Value": "JSON"
  },
  "DocumentType": {
    "Value": "Automation"
  },
  "DocumentVersion": "1",
  "Name": "AWS-CopySnapshot",
  "Requires": [],
  "ReviewStatus": null,
  "Status": {
    "Value": "Active"
  },
  "StatusInformation": null,
  "VersionName": null,
  "ResponseMetadata": {
    "RequestId": "14295f54-8a5f-4f96-89ea-4f31c31e001a",
    "Metadata": {},
    "ChecksumAlgorithm": 0,
    "ChecksumValidationStatus": 0
  },
  "ContentLength": 6036,
  "HttpStatusCode": 200,
  "LoggedAt": "2022-10-05T07:28:30.3363322+00:00"
}
