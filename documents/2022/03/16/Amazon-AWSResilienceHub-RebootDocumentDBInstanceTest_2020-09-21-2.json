{
  "AttachmentsContent": [],
  "Content": "{\n  \"description\" : \"## Id\\nAWSResilienceHub-RebootDocumentDBInstanceTest_2020-09-21\\n\\n## Intent\\nTest DocumentDB cluster availability after rebooting the instance and application can reconnect\\nafter temporary network errors within expected recovery time\\n\\n## Type\\nTEST\\n\\n## Risk\\nSmall\\n\\n## Requirements\\n  * Available DocumentDB Cluster\\n  * There is a [synthetic alarm](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch_Synthetics_Canaries.html) setup for application that alerts when application can't connect\\n\\n## Permissions required for AutomationAssumeRole\\n  * cloudwatch:DescribeAlarms\\n  * rds:RebootDBInstance\\n  * rds:DescribeDBInstances\\n\\n##### In case cluster is encrypted with a KMS key\\n  * kms:DescribeKey\\n\\n## Supports Rollback\\nNo\\n\\n## Cancellation behavior\\nFails\\n\\n## Inputs\\n### (Required) AutomationAssumeRole\\n  * type: String\\n  * description: ARN of the IAM role with permissions listed above\\n\\n### (Required) DBClusterIdentifier\\n  * type: String\\n  * description: DocumentDB Cluster Identifier\\n\\n### (Required) DatabaseConnectionAttemptAlarmName\\n  * type: String\\n  * description: Name of the alarm that indicates that the application can't connect to DocumentDB\\n\\n### (Optional) IsRollback\\n  * type: String\\n  * description: Run the rollback steps of the document. True or False. If True, the parameter PreviousExecutionId should also be specified\\n  * default: false\\n\\n### (Optional) PreviousExecutionId\\n  * type: String\\n  * description: SSM execution ID of the previous execution of this document for which resources need to be cleaned up\\n\\n## Details\\nThe document reboots DocumentDB instance and wait for it to become available. Synthetic alarm should show\\nthat application can connect to the DocumentDB instance.\\n\\n## Steps executed in normal flow\\n  * AssertAlarmToBeGreenBeforeTest\\n  * RebootDbInstance\\n  * WaitUntilInstancesAvailable\\n  * AssertAlarmToBeGreen\\n\\n## Outputs\\nNone\",\n  \"schemaVersion\" : \"0.3\",\n  \"assumeRole\" : \"{{ AutomationAssumeRole }}\",\n  \"parameters\" : {\n    \"DBClusterIdentifier\" : {\n      \"type\" : \"String\",\n      \"description\" : \"(Required) DocDb Cluster Identifier\"\n    },\n    \"DBInstanceIdentifier\" : {\n      \"type\" : \"String\",\n      \"description\" : \"(Required) DocDb Instance Identifier\"\n    },\n    \"AutomationAssumeRole\" : {\n      \"type\" : \"String\",\n      \"description\" : \"(Required) The ARN of the role that allows Automation to perform the actions on your behalf.\"\n    },\n    \"CanaryAlarmName\" : {\n      \"type\" : \"String\",\n      \"description\" : \"(Required) Alarm which should be green after test.\"\n    }\n  },\n  \"mainSteps\" : [ {\n    \"name\" : \"AssertAlarmToBeGreenBeforeTest\",\n    \"description\" : \"Ensure alarm is green before starting test. Fail if alarm is not green within expected time.\",\n    \"action\" : \"aws:waitForAwsResourceProperty\",\n    \"maxAttempts\" : 1,\n    \"timeoutSeconds\" : 1200,\n    \"inputs\" : {\n      \"Service\" : \"cloudwatch\",\n      \"Api\" : \"DescribeAlarms\",\n      \"AlarmNames\" : [ \"{{CanaryAlarmName}}\" ],\n      \"PropertySelector\" : \"$.MetricAlarms[0].StateValue\",\n      \"DesiredValues\" : [ \"OK\" ]\n    }\n  }, {\n    \"name\" : \"RebootDbInstance\",\n    \"description\" : \"Reboot the DocumentDB instance\",\n    \"action\" : \"aws:executeAwsApi\",\n    \"inputs\" : {\n      \"Service\" : \"docdb\",\n      \"Api\" : \"RebootDBInstance\",\n      \"DBInstanceIdentifier\" : \"{{ DBInstanceIdentifier }}\"\n    }\n  }, {\n    \"name\" : \"WaitUntilInstancesAvailable\",\n    \"description\" : \"Wait for instance to be in status available\",\n    \"action\" : \"aws:waitForAwsResourceProperty\",\n    \"timeoutSeconds\" : 1200,\n    \"inputs\" : {\n      \"Service\" : \"docdb\",\n      \"Api\" : \"DescribeDBInstances\",\n      \"Filters\" : [ {\n        \"Name\" : \"db-cluster-id\",\n        \"Values\" : [ \"{{ DBClusterIdentifier }}\" ]\n      } ],\n      \"PropertySelector\" : \"$.DBInstances..DBInstanceStatus\",\n      \"DesiredValues\" : [ \"available\" ]\n    }\n  }, {\n    \"name\" : \"AssertAlarmToBeGreen\",\n    \"description\" : \"Wait for the alarm to be green after test is complete\",\n    \"action\" : \"aws:waitForAwsResourceProperty\",\n    \"maxAttempts\" : 1,\n    \"timeoutSeconds\" : 1200,\n    \"inputs\" : {\n      \"Service\" : \"cloudwatch\",\n      \"Api\" : \"DescribeAlarms\",\n      \"AlarmNames\" : [ \"{{CanaryAlarmName}}\" ],\n      \"PropertySelector\" : \"$.MetricAlarms[0].StateValue\",\n      \"DesiredValues\" : [ \"OK\" ]\n    }\n  } ]\n}",
  "CreatedDate": "2021-11-08T03:45:24.878Z",
  "DisplayName": null,
  "DocumentFormat": {
    "Value": "JSON"
  },
  "DocumentType": {
    "Value": "Automation"
  },
  "DocumentVersion": "2",
  "Name": "AWSResilienceHub-RebootDocumentDBInstanceTest_2020-09-21",
  "Requires": [],
  "ReviewStatus": null,
  "Status": {
    "Value": "Active"
  },
  "StatusInformation": null,
  "VersionName": null,
  "ResponseMetadata": {
    "RequestId": "69fbd830-8d76-4d0a-95e0-0544712d1197",
    "Metadata": {},
    "ChecksumAlgorithm": 0,
    "ChecksumValidationStatus": 0
  },
  "ContentLength": 4908,
  "HttpStatusCode": 200,
  "LoggedAt": "2022-03-16T07:13:09.8630189+00:00"
}
