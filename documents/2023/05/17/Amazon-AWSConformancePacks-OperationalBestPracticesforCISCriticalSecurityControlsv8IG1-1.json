{
  "AttachmentsContent": [],
  "Content": "{\n  \"schemaVersion\" : \"1.0\",\n  \"description\" : \"Operational Best Practices for CIS Critical Security Controls v8 IG1\",\n  \"templateBody\" : {\n    \"Parameters\" : {\n      \"AccessKeysRotatedParamMaxAccessKeyAge\" : {\n        \"Default\" : \"90\",\n        \"Type\" : \"String\"\n      },\n      \"IamCustomerPolicyBlockedKmsActionsParamBlockedActionsPatterns\" : {\n        \"Default\" : \"kms:*, kms:Decrypt, kms:ReEncrypt*\",\n        \"Type\" : \"String\"\n      },\n      \"IamInlinePolicyBlockedKmsActionsParamBlockedActionsPatterns\" : {\n        \"Default\" : \"kms:*, kms:Decrypt, kms:ReEncrypt*\",\n        \"Type\" : \"String\"\n      },\n      \"IamPasswordPolicyParamMaxPasswordAge\" : {\n        \"Default\" : \"90\",\n        \"Type\" : \"String\"\n      },\n      \"IamPasswordPolicyParamMinimumPasswordLength\" : {\n        \"Default\" : \"14\",\n        \"Type\" : \"String\"\n      },\n      \"IamPasswordPolicyParamPasswordReusePrevention\" : {\n        \"Default\" : \"24\",\n        \"Type\" : \"String\"\n      },\n      \"IamPasswordPolicyParamRequireLowercaseCharacters\" : {\n        \"Default\" : \"true\",\n        \"Type\" : \"String\"\n      },\n      \"IamPasswordPolicyParamRequireNumbers\" : {\n        \"Default\" : \"true\",\n        \"Type\" : \"String\"\n      },\n      \"IamPasswordPolicyParamRequireSymbols\" : {\n        \"Default\" : \"true\",\n        \"Type\" : \"String\"\n      },\n      \"IamPasswordPolicyParamRequireUppercaseCharacters\" : {\n        \"Default\" : \"true\",\n        \"Type\" : \"String\"\n      },\n      \"IamUserUnusedCredentialsCheckParamMaxCredentialUsageAge\" : {\n        \"Default\" : \"90\",\n        \"Type\" : \"String\"\n      },\n      \"RedshiftClusterConfigurationCheckParamClusterDbEncrypted\" : {\n        \"Default\" : \"TRUE\",\n        \"Type\" : \"String\"\n      },\n      \"RedshiftClusterConfigurationCheckParamLoggingEnabled\" : {\n        \"Default\" : \"TRUE\",\n        \"Type\" : \"String\"\n      },\n      \"RedshiftClusterMaintenancesettingsCheckParamAllowVersionUpgrade\" : {\n        \"Default\" : \"TRUE\",\n        \"Type\" : \"String\"\n      },\n      \"S3AccountLevelPublicAccessBlocksPeriodicParamBlockPublicAcls\" : {\n        \"Default\" : \"True\",\n        \"Type\" : \"String\"\n      },\n      \"S3AccountLevelPublicAccessBlocksPeriodicParamBlockPublicPolicy\" : {\n        \"Default\" : \"True\",\n        \"Type\" : \"String\"\n      },\n      \"S3AccountLevelPublicAccessBlocksPeriodicParamIgnorePublicAcls\" : {\n        \"Default\" : \"True\",\n        \"Type\" : \"String\"\n      },\n      \"S3AccountLevelPublicAccessBlocksPeriodicParamRestrictPublicBuckets\" : {\n        \"Default\" : \"True\",\n        \"Type\" : \"String\"\n      }\n    },\n    \"Resources\" : {\n      \"AccessKeysRotated\" : {\n        \"Properties\" : {\n          \"ConfigRuleName\" : \"access-keys-rotated\",\n          \"InputParameters\" : {\n            \"maxAccessKeyAge\" : {\n              \"Fn::If\" : [ \"accessKeysRotatedParamMaxAccessKeyAge\", {\n                \"Ref\" : \"AccessKeysRotatedParamMaxAccessKeyAge\"\n              }, {\n                \"Ref\" : \"AWS::NoValue\"\n              } ]\n            }\n          },\n          \"Source\" : {\n            \"Owner\" : \"AWS\",\n            \"SourceIdentifier\" : \"ACCESS_KEYS_ROTATED\"\n          }\n        },\n        \"Type\" : \"AWS::Config::ConfigRule\"\n      },\n      \"AccountPartOfOrganizations\" : {\n        \"Properties\" : {\n          \"ConfigRuleName\" : \"account-part-of-organizations\",\n          \"Source\" : {\n            \"Owner\" : \"AWS\",\n            \"SourceIdentifier\" : \"ACCOUNT_PART_OF_ORGANIZATIONS\"\n          }\n        },\n        \"Type\" : \"AWS::Config::ConfigRule\"\n      },\n      \"AlbHttpToHttpsRedirectionCheck\" : {\n        \"Properties\" : {\n          \"ConfigRuleName\" : \"alb-http-to-https-redirection-check\",\n          \"Source\" : {\n            \"Owner\" : \"AWS\",\n            \"SourceIdentifier\" : \"ALB_HTTP_TO_HTTPS_REDIRECTION_CHECK\"\n          }\n        },\n        \"Type\" : \"AWS::Config::ConfigRule\"\n      },\n      \"ApiGwExecutionLoggingEnabled\" : {\n        \"Properties\" : {\n          \"ConfigRuleName\" : \"api-gw-execution-logging-enabled\",\n          \"Scope\" : {\n            \"ComplianceResourceTypes\" : [ \"AWS::ApiGateway::Stage\", \"AWS::ApiGatewayV2::Stage\" ]\n          },\n          \"Source\" : {\n            \"Owner\" : \"AWS\",\n            \"SourceIdentifier\" : \"API_GW_EXECUTION_LOGGING_ENABLED\"\n          }\n        },\n        \"Type\" : \"AWS::Config::ConfigRule\"\n      },\n      \"ApiGwSslEnabled\" : {\n        \"Properties\" : {\n          \"ConfigRuleName\" : \"api-gw-ssl-enabled\",\n          \"Scope\" : {\n            \"ComplianceResourceTypes\" : [ \"AWS::ApiGateway::Stage\" ]\n          },\n          \"Source\" : {\n            \"Owner\" : \"AWS\",\n            \"SourceIdentifier\" : \"API_GW_SSL_ENABLED\"\n          }\n        },\n        \"Type\" : \"AWS::Config::ConfigRule\"\n      },\n      \"AutoscalingLaunchConfigPublicIpDisabled\" : {\n        \"Properties\" : {\n          \"ConfigRuleName\" : \"autoscaling-launch-config-public-ip-disabled\",\n          \"Scope\" : {\n            \"ComplianceResourceTypes\" : [ \"AWS::AutoScaling::LaunchConfiguration\" ]\n          },\n          \"Source\" : {\n            \"Owner\" : \"AWS\",\n            \"SourceIdentifier\" : \"AUTOSCALING_LAUNCH_CONFIG_PUBLIC_IP_DISABLED\"\n          }\n        },\n        \"Type\" : \"AWS::Config::ConfigRule\"\n      },\n      \"BackupRecoveryPointEncrypted\" : {\n        \"Properties\" : {\n          \"ConfigRuleName\" : \"backup-recovery-point-encrypted\",\n          \"Scope\" : {\n            \"ComplianceResourceTypes\" : [ \"AWS::Backup::RecoveryPoint\" ]\n          },\n          \"Source\" : {\n            \"Owner\" : \"AWS\",\n            \"SourceIdentifier\" : \"BACKUP_RECOVERY_POINT_ENCRYPTED\"\n          }\n        },\n        \"Type\" : \"AWS::Config::ConfigRule\"\n      },\n      \"CloudTrailCloudWatchLogsEnabled\" : {\n        \"Properties\" : {\n          \"ConfigRuleName\" : \"cloud-trail-cloud-watch-logs-enabled\",\n          \"Source\" : {\n            \"Owner\" : \"AWS\",\n            \"SourceIdentifier\" : \"CLOUD_TRAIL_CLOUD_WATCH_LOGS_ENABLED\"\n          }\n        },\n        \"Type\" : \"AWS::Config::ConfigRule\"\n      },\n      \"CloudTrailEnabled\" : {\n        \"Properties\" : {\n          \"ConfigRuleName\" : \"cloudtrail-enabled\",\n          \"Source\" : {\n            \"Owner\" : \"AWS\",\n            \"SourceIdentifier\" : \"CLOUD_TRAIL_ENABLED\"\n          }\n        },\n        \"Type\" : \"AWS::Config::ConfigRule\"\n      },\n      \"CloudtrailS3DataeventsEnabled\" : {\n        \"Properties\" : {\n          \"ConfigRuleName\" : \"cloudtrail-s3-dataevents-enabled\",\n          \"Source\" : {\n            \"Owner\" : \"AWS\",\n            \"SourceIdentifier\" : \"CLOUDTRAIL_S3_DATAEVENTS_ENABLED\"\n          }\n        },\n        \"Type\" : \"AWS::Config::ConfigRule\"\n      },\n      \"CodebuildProjectLoggingEnabled\" : {\n        \"Properties\" : {\n          \"ConfigRuleName\" : \"codebuild-project-logging-enabled\",\n          \"Scope\" : {\n            \"ComplianceResourceTypes\" : [ \"AWS::CodeBuild::Project\" ]\n          },\n          \"Source\" : {\n            \"Owner\" : \"AWS\",\n            \"SourceIdentifier\" : \"CODEBUILD_PROJECT_LOGGING_ENABLED\"\n          }\n        },\n        \"Type\" : \"AWS::Config::ConfigRule\"\n      },\n      \"CwLoggroupRetentionPeriodCheck\" : {\n        \"Properties\" : {\n          \"ConfigRuleName\" : \"cw-loggroup-retention-period-check\",\n          \"Source\" : {\n            \"Owner\" : \"AWS\",\n            \"SourceIdentifier\" : \"CW_LOGGROUP_RETENTION_PERIOD_CHECK\"\n          }\n        },\n        \"Type\" : \"AWS::Config::ConfigRule\"\n      },\n      \"DbInstanceBackupEnabled\" : {\n        \"Properties\" : {\n          \"ConfigRuleName\" : \"db-instance-backup-enabled\",\n          \"Scope\" : {\n            \"ComplianceResourceTypes\" : [ \"AWS::RDS::DBInstance\" ]\n          },\n          \"Source\" : {\n            \"Owner\" : \"AWS\",\n            \"SourceIdentifier\" : \"DB_INSTANCE_BACKUP_ENABLED\"\n          }\n        },\n        \"Type\" : \"AWS::Config::ConfigRule\"\n      },\n      \"DmsReplicationNotPublic\" : {\n        \"Properties\" : {\n          \"ConfigRuleName\" : \"dms-replication-not-public\",\n          \"Scope\" : {\n            \"ComplianceResourceTypes\" : [ ]\n          },\n          \"Source\" : {\n            \"Owner\" : \"AWS\",\n            \"SourceIdentifier\" : \"DMS_REPLICATION_NOT_PUBLIC\"\n          }\n        },\n        \"Type\" : \"AWS::Config::ConfigRule\"\n      },\n      \"DynamodbInBackupPlan\" : {\n        \"Properties\" : {\n          \"ConfigRuleName\" : \"dynamodb-in-backup-plan\",\n          \"Source\" : {\n            \"Owner\" : \"AWS\",\n            \"SourceIdentifier\" : \"DYNAMODB_IN_BACKUP_PLAN\"\n          }\n        },\n        \"Type\" : \"AWS::Config::ConfigRule\"\n      },\n      \"DynamodbPitrEnabled\" : {\n        \"Properties\" : {\n          \"ConfigRuleName\" : \"dynamodb-pitr-enabled\",\n          \"Scope\" : {\n            \"ComplianceResourceTypes\" : [ \"AWS::DynamoDB::Table\" ]\n          },\n          \"Source\" : {\n            \"Owner\" : \"AWS\",\n            \"SourceIdentifier\" : \"DYNAMODB_PITR_ENABLED\"\n          }\n        },\n        \"Type\" : \"AWS::Config::ConfigRule\"\n      },\n      \"EbsInBackupPlan\" : {\n        \"Properties\" : {\n          \"ConfigRuleName\" : \"ebs-in-backup-plan\",\n          \"Source\" : {\n            \"Owner\" : \"AWS\",\n            \"SourceIdentifier\" : \"EBS_IN_BACKUP_PLAN\"\n          }\n        },\n        \"Type\" : \"AWS::Config::ConfigRule\"\n      },\n      \"EbsOptimizedInstance\" : {\n        \"Properties\" : {\n          \"ConfigRuleName\" : \"ebs-optimized-instance\",\n          \"Scope\" : {\n            \"ComplianceResourceTypes\" : [ \"AWS::EC2::Instance\" ]\n          },\n          \"Source\" : {\n            \"Owner\" : \"AWS\",\n            \"SourceIdentifier\" : \"EBS_OPTIMIZED_INSTANCE\"\n          }\n        },\n        \"Type\" : \"AWS::Config::ConfigRule\"\n      },\n      \"EbsSnapshotPublicRestorableCheck\" : {\n        \"Properties\" : {\n          \"ConfigRuleName\" : \"ebs-snapshot-public-restorable-check\",\n          \"Source\" : {\n            \"Owner\" : \"AWS\",\n            \"SourceIdentifier\" : \"EBS_SNAPSHOT_PUBLIC_RESTORABLE_CHECK\"\n          }\n        },\n        \"Type\" : \"AWS::Config::ConfigRule\"\n      },\n      \"Ec2EbsEncryptionByDefault\" : {\n        \"Properties\" : {\n          \"ConfigRuleName\" : \"ec2-ebs-encryption-by-default\",\n          \"Source\" : {\n            \"Owner\" : \"AWS\",\n            \"SourceIdentifier\" : \"EC2_EBS_ENCRYPTION_BY_DEFAULT\"\n          }\n        },\n        \"Type\" : \"AWS::Config::ConfigRule\"\n      },\n      \"Ec2Imdsv2Check\" : {\n        \"Properties\" : {\n          \"ConfigRuleName\" : \"ec2-imdsv2-check\",\n          \"Scope\" : {\n            \"ComplianceResourceTypes\" : [ \"AWS::EC2::Instance\" ]\n          },\n          \"Source\" : {\n            \"Owner\" : \"AWS\",\n            \"SourceIdentifier\" : \"EC2_IMDSV2_CHECK\"\n          }\n        },\n        \"Type\" : \"AWS::Config::ConfigRule\"\n      },\n      \"Ec2InstanceManagedBySsm\" : {\n        \"Properties\" : {\n          \"ConfigRuleName\" : \"ec2-instance-managed-by-systems-manager\",\n          \"Scope\" : {\n            \"ComplianceResourceTypes\" : [ \"AWS::EC2::Instance\", \"AWS::SSM::ManagedInstanceInventory\" ]\n          },\n          \"Source\" : {\n            \"Owner\" : \"AWS\",\n            \"SourceIdentifier\" : \"EC2_INSTANCE_MANAGED_BY_SSM\"\n          }\n        },\n        \"Type\" : \"AWS::Config::ConfigRule\"\n      },\n      \"Ec2InstanceNoPublicIp\" : {\n        \"Properties\" : {\n          \"ConfigRuleName\" : \"ec2-instance-no-public-ip\",\n          \"Scope\" : {\n            \"ComplianceResourceTypes\" : [ \"AWS::EC2::Instance\" ]\n          },\n          \"Source\" : {\n            \"Owner\" : \"AWS\",\n            \"SourceIdentifier\" : \"EC2_INSTANCE_NO_PUBLIC_IP\"\n          }\n        },\n        \"Type\" : \"AWS::Config::ConfigRule\"\n      },\n      \"Ec2InstanceProfileAttached\" : {\n        \"Properties\" : {\n          \"ConfigRuleName\" : \"ec2-instance-profile-attached\",\n          \"Scope\" : {\n            \"ComplianceResourceTypes\" : [ \"AWS::EC2::Instance\" ]\n          },\n          \"Source\" : {\n            \"Owner\" : \"AWS\",\n            \"SourceIdentifier\" : \"EC2_INSTANCE_PROFILE_ATTACHED\"\n          }\n        },\n        \"Type\" : \"AWS::Config::ConfigRule\"\n      },\n      \"Ec2ManagedinstanceAssociationComplianceStatusCheck\" : {\n        \"Properties\" : {\n          \"ConfigRuleName\" : \"ec2-managedinstance-association-compliance-status-check\",\n          \"Scope\" : {\n            \"ComplianceResourceTypes\" : [ \"AWS::SSM::AssociationCompliance\" ]\n          },\n          \"Source\" : {\n            \"Owner\" : \"AWS\",\n            \"SourceIdentifier\" : \"EC2_MANAGEDINSTANCE_ASSOCIATION_COMPLIANCE_STATUS_CHECK\"\n          }\n        },\n        \"Type\" : \"AWS::Config::ConfigRule\"\n      },\n      \"Ec2ManagedinstancePatchComplianceStatusCheck\" : {\n        \"Properties\" : {\n          \"ConfigRuleName\" : \"ec2-managedinstance-patch-compliance-status-check\",\n          \"Scope\" : {\n            \"ComplianceResourceTypes\" : [ \"AWS::SSM::PatchCompliance\" ]\n          },\n          \"Source\" : {\n            \"Owner\" : \"AWS\",\n            \"SourceIdentifier\" : \"EC2_MANAGEDINSTANCE_PATCH_COMPLIANCE_STATUS_CHECK\"\n          }\n        },\n        \"Type\" : \"AWS::Config::ConfigRule\"\n      },\n      \"Ec2SecurityGroupAttachedToEni\" : {\n        \"Properties\" : {\n          \"ConfigRuleName\" : \"ec2-security-group-attached-to-eni\",\n          \"Scope\" : {\n            \"ComplianceResourceTypes\" : [ \"AWS::EC2::SecurityGroup\" ]\n          },\n          \"Source\" : {\n            \"Owner\" : \"AWS\",\n            \"SourceIdentifier\" : \"EC2_SECURITY_GROUP_ATTACHED_TO_ENI\"\n          }\n        },\n        \"Type\" : \"AWS::Config::ConfigRule\"\n      },\n      \"Ec2StoppedInstance\" : {\n        \"Properties\" : {\n          \"ConfigRuleName\" : \"ec2-stopped-instance\",\n          \"Source\" : {\n            \"Owner\" : \"AWS\",\n            \"SourceIdentifier\" : \"EC2_STOPPED_INSTANCE\"\n          }\n        },\n        \"Type\" : \"AWS::Config::ConfigRule\"\n      },\n      \"Ec2VolumeInuseCheck\" : {\n        \"Properties\" : {\n          \"ConfigRuleName\" : \"ec2-volume-inuse-check\",\n          \"Scope\" : {\n            \"ComplianceResourceTypes\" : [ \"AWS::EC2::Volume\" ]\n          },\n          \"Source\" : {\n            \"Owner\" : \"AWS\",\n            \"SourceIdentifier\" : \"EC2_VOLUME_INUSE_CHECK\"\n          }\n        },\n        \"Type\" : \"AWS::Config::ConfigRule\"\n      },\n      \"EcsFargateLatestPlatformVersion\" : {\n        \"Properties\" : {\n          \"ConfigRuleName\" : \"ecs-fargate-latest-platform-version\",\n          \"Scope\" : {\n            \"ComplianceResourceTypes\" : [ \"AWS::ECS::Service\" ]\n          },\n          \"Source\" : {\n            \"Owner\" : \"AWS\",\n            \"SourceIdentifier\" : \"ECS_FARGATE_LATEST_PLATFORM_VERSION\"\n          }\n        },\n        \"Type\" : \"AWS::Config::ConfigRule\"\n      },\n      \"EcsTaskDefinitionNonrootUser\" : {\n        \"Properties\" : {\n          \"ConfigRuleName\" : \"ecs-task-definition-nonroot-user\",\n          \"Scope\" : {\n            \"ComplianceResourceTypes\" : [ \"AWS::ECS::TaskDefinition\" ]\n          },\n          \"Source\" : {\n            \"Owner\" : \"AWS\",\n            \"SourceIdentifier\" : \"ECS_TASK_DEFINITION_NONROOT_USER\"\n          }\n        },\n        \"Type\" : \"AWS::Config::ConfigRule\"\n      },\n      \"EcsTaskDefinitionUserForHostModeCheck\" : {\n        \"Properties\" : {\n          \"ConfigRuleName\" : \"ecs-task-definition-user-for-host-mode-check\",\n          \"Scope\" : {\n            \"ComplianceResourceTypes\" : [ \"AWS::ECS::TaskDefinition\" ]\n          },\n          \"Source\" : {\n            \"Owner\" : \"AWS\",\n            \"SourceIdentifier\" : \"ECS_TASK_DEFINITION_USER_FOR_HOST_MODE_CHECK\"\n          }\n        },\n        \"Type\" : \"AWS::Config::ConfigRule\"\n      },\n      \"EfsAccessPointEnforceRootDirectory\" : {\n        \"Properties\" : {\n          \"ConfigRuleName\" : \"efs-access-point-enforce-root-directory\",\n          \"Scope\" : {\n            \"ComplianceResourceTypes\" : [ \"AWS::EFS::AccessPoint\" ]\n          },\n          \"Source\" : {\n            \"Owner\" : \"AWS\",\n            \"SourceIdentifier\" : \"EFS_ACCESS_POINT_ENFORCE_ROOT_DIRECTORY\"\n          }\n        },\n        \"Type\" : \"AWS::Config::ConfigRule\"\n      },\n      \"EfsInBackupPlan\" : {\n        \"Properties\" : {\n          \"ConfigRuleName\" : \"efs-in-backup-plan\",\n          \"Source\" : {\n            \"Owner\" : \"AWS\",\n            \"SourceIdentifier\" : \"EFS_IN_BACKUP_PLAN\"\n          }\n        },\n        \"Type\" : \"AWS::Config::ConfigRule\"\n      },\n      \"EipAttached\" : {\n        \"Properties\" : {\n          \"ConfigRuleName\" : \"eip-attached\",\n          \"Scope\" : {\n            \"ComplianceResourceTypes\" : [ \"AWS::EC2::EIP\" ]\n          },\n          \"Source\" : {\n            \"Owner\" : \"AWS\",\n            \"SourceIdentifier\" : \"EIP_ATTACHED\"\n          }\n        },\n        \"Type\" : \"AWS::Config::ConfigRule\"\n      },\n      \"ElasticBeanstalkManagedUpdatesEnabled\" : {\n        \"Properties\" : {\n          \"ConfigRuleName\" : \"elastic-beanstalk-managed-updates-enabled\",\n          \"Scope\" : {\n            \"ComplianceResourceTypes\" : [ \"AWS::ElasticBeanstalk::Environment\" ]\n          },\n          \"Source\" : {\n            \"Owner\" : \"AWS\",\n            \"SourceIdentifier\" : \"ELASTIC_BEANSTALK_MANAGED_UPDATES_ENABLED\"\n          }\n        },\n        \"Type\" : \"AWS::Config::ConfigRule\"\n      },\n      \"ElasticacheRedisClusterAutomaticBackupCheck\" : {\n        \"Properties\" : {\n          \"ConfigRuleName\" : \"elasticache-redis-cluster-automatic-backup-check\",\n          \"Source\" : {\n            \"Owner\" : \"AWS\",\n            \"SourceIdentifier\" : \"ELASTICACHE_REDIS_CLUSTER_AUTOMATIC_BACKUP_CHECK\"\n          }\n        },\n        \"Type\" : \"AWS::Config::ConfigRule\"\n      },\n      \"ElasticsearchInVpcOnly\" : {\n        \"Properties\" : {\n          \"ConfigRuleName\" : \"elasticsearch-in-vpc-only\",\n          \"Source\" : {\n            \"Owner\" : \"AWS\",\n            \"SourceIdentifier\" : \"ELASTICSEARCH_IN_VPC_ONLY\"\n          }\n        },\n        \"Type\" : \"AWS::Config::ConfigRule\"\n      },\n      \"ElasticsearchLogsToCloudwatch\" : {\n        \"Properties\" : {\n          \"ConfigRuleName\" : \"elasticsearch-logs-to-cloudwatch\",\n          \"Scope\" : {\n            \"ComplianceResourceTypes\" : [ \"AWS::Elasticsearch::Domain\" ]\n          },\n          \"Source\" : {\n            \"Owner\" : \"AWS\",\n            \"SourceIdentifier\" : \"ELASTICSEARCH_LOGS_TO_CLOUDWATCH\"\n          }\n        },\n        \"Type\" : \"AWS::Config::ConfigRule\"\n      },\n      \"ElbLoggingEnabled\" : {\n        \"Properties\" : {\n          \"ConfigRuleName\" : \"elb-logging-enabled\",\n          \"Scope\" : {\n            \"ComplianceResourceTypes\" : [ \"AWS::ElasticLoadBalancing::LoadBalancer\", \"AWS::ElasticLoadBalancingV2::LoadBalancer\" ]\n          },\n          \"Source\" : {\n            \"Owner\" : \"AWS\",\n            \"SourceIdentifier\" : \"ELB_LOGGING_ENABLED\"\n          }\n        },\n        \"Type\" : \"AWS::Config::ConfigRule\"\n      },\n      \"ElbTlsHttpsListenersOnly\" : {\n        \"Properties\" : {\n          \"ConfigRuleName\" : \"elb-tls-https-listeners-only\",\n          \"Scope\" : {\n            \"ComplianceResourceTypes\" : [ \"AWS::ElasticLoadBalancing::LoadBalancer\" ]\n          },\n          \"Source\" : {\n            \"Owner\" : \"AWS\",\n            \"SourceIdentifier\" : \"ELB_TLS_HTTPS_LISTENERS_ONLY\"\n          }\n        },\n        \"Type\" : \"AWS::Config::ConfigRule\"\n      },\n      \"EmrKerberosEnabled\" : {\n        \"Properties\" : {\n          \"ConfigRuleName\" : \"emr-kerberos-enabled\",\n          \"Source\" : {\n            \"Owner\" : \"AWS\",\n            \"SourceIdentifier\" : \"EMR_KERBEROS_ENABLED\"\n          }\n        },\n        \"Type\" : \"AWS::Config::ConfigRule\"\n      },\n      \"EmrMasterNoPublicIp\" : {\n        \"Properties\" : {\n          \"ConfigRuleName\" : \"emr-master-no-public-ip\",\n          \"Scope\" : {\n            \"ComplianceResourceTypes\" : [ ]\n          },\n          \"Source\" : {\n            \"Owner\" : \"AWS\",\n            \"SourceIdentifier\" : \"EMR_MASTER_NO_PUBLIC_IP\"\n          }\n        },\n        \"Type\" : \"AWS::Config::ConfigRule\"\n      },\n      \"EncryptedVolumes\" : {\n        \"Properties\" : {\n          \"ConfigRuleName\" : \"encrypted-volumes\",\n          \"Scope\" : {\n            \"ComplianceResourceTypes\" : [ \"AWS::EC2::Volume\" ]\n          },\n          \"Source\" : {\n            \"Owner\" : \"AWS\",\n            \"SourceIdentifier\" : \"ENCRYPTED_VOLUMES\"\n          }\n        },\n        \"Type\" : \"AWS::Config::ConfigRule\"\n      },\n      \"GuarddutyEnabledCentralized\" : {\n        \"Properties\" : {\n          \"ConfigRuleName\" : \"guardduty-enabled-centralized\",\n          \"Source\" : {\n            \"Owner\" : \"AWS\",\n            \"SourceIdentifier\" : \"GUARDDUTY_ENABLED_CENTRALIZED\"\n          }\n        },\n        \"Type\" : \"AWS::Config::ConfigRule\"\n      },\n      \"IamCustomerPolicyBlockedKmsActions\" : {\n        \"Properties\" : {\n          \"ConfigRuleName\" : \"iam-customer-policy-blocked-kms-actions\",\n          \"InputParameters\" : {\n            \"blockedActionsPatterns\" : {\n              \"Fn::If\" : [ \"iamCustomerPolicyBlockedKmsActionsParamBlockedActionsPatterns\", {\n                \"Ref\" : \"IamCustomerPolicyBlockedKmsActionsParamBlockedActionsPatterns\"\n              }, {\n                \"Ref\" : \"AWS::NoValue\"\n              } ]\n            }\n          },\n          \"Scope\" : {\n            \"ComplianceResourceTypes\" : [ \"AWS::IAM::Policy\" ]\n          },\n          \"Source\" : {\n            \"Owner\" : \"AWS\",\n            \"SourceIdentifier\" : \"IAM_CUSTOMER_POLICY_BLOCKED_KMS_ACTIONS\"\n          }\n        },\n        \"Type\" : \"AWS::Config::ConfigRule\"\n      },\n      \"IamGroupHasUsersCheck\" : {\n        \"Properties\" : {\n          \"ConfigRuleName\" : \"iam-group-has-users-check\",\n          \"Scope\" : {\n            \"ComplianceResourceTypes\" : [ \"AWS::IAM::Group\" ]\n          },\n          \"Source\" : {\n            \"Owner\" : \"AWS\",\n            \"SourceIdentifier\" : \"IAM_GROUP_HAS_USERS_CHECK\"\n          }\n        },\n        \"Type\" : \"AWS::Config::ConfigRule\"\n      },\n      \"IamInlinePolicyBlockedKmsActions\" : {\n        \"Properties\" : {\n          \"ConfigRuleName\" : \"iam-inline-policy-blocked-kms-actions\",\n          \"InputParameters\" : {\n            \"blockedActionsPatterns\" : {\n              \"Fn::If\" : [ \"iamInlinePolicyBlockedKmsActionsParamBlockedActionsPatterns\", {\n                \"Ref\" : \"IamInlinePolicyBlockedKmsActionsParamBlockedActionsPatterns\"\n              }, {\n                \"Ref\" : \"AWS::NoValue\"\n              } ]\n            }\n          },\n          \"Scope\" : {\n            \"ComplianceResourceTypes\" : [ \"AWS::IAM::Group\", \"AWS::IAM::Role\", \"AWS::IAM::User\" ]\n          },\n          \"Source\" : {\n            \"Owner\" : \"AWS\",\n            \"SourceIdentifier\" : \"IAM_INLINE_POLICY_BLOCKED_KMS_ACTIONS\"\n          }\n        },\n        \"Type\" : \"AWS::Config::ConfigRule\"\n      },\n      \"IamNoInlinePolicyCheck\" : {\n        \"Properties\" : {\n          \"ConfigRuleName\" : \"iam-no-inline-policy-check\",\n          \"Scope\" : {\n            \"ComplianceResourceTypes\" : [ \"AWS::IAM::User\", \"AWS::IAM::Role\", \"AWS::IAM::Group\" ]\n          },\n          \"Source\" : {\n            \"Owner\" : \"AWS\",\n            \"SourceIdentifier\" : \"IAM_NO_INLINE_POLICY_CHECK\"\n          }\n        },\n        \"Type\" : \"AWS::Config::ConfigRule\"\n      },\n      \"IamPasswordPolicy\" : {\n        \"Properties\" : {\n          \"ConfigRuleName\" : \"iam-password-policy\",\n          \"InputParameters\" : {\n            \"MaxPasswordAge\" : {\n              \"Fn::If\" : [ \"iamPasswordPolicyParamMaxPasswordAge\", {\n                \"Ref\" : \"IamPasswordPolicyParamMaxPasswordAge\"\n              }, {\n                \"Ref\" : \"AWS::NoValue\"\n              } ]\n            },\n            \"MinimumPasswordLength\" : {\n              \"Fn::If\" : [ \"iamPasswordPolicyParamMinimumPasswordLength\", {\n                \"Ref\" : \"IamPasswordPolicyParamMinimumPasswordLength\"\n              }, {\n                \"Ref\" : \"AWS::NoValue\"\n              } ]\n            },\n            \"PasswordReusePrevention\" : {\n              \"Fn::If\" : [ \"iamPasswordPolicyParamPasswordReusePrevention\", {\n                \"Ref\" : \"IamPasswordPolicyParamPasswordReusePrevention\"\n              }, {\n                \"Ref\" : \"AWS::NoValue\"\n              } ]\n            },\n            \"RequireLowercaseCharacters\" : {\n              \"Fn::If\" : [ \"iamPasswordPolicyParamRequireLowercaseCharacters\", {\n                \"Ref\" : \"IamPasswordPolicyParamRequireLowercaseCharacters\"\n              }, {\n                \"Ref\" : \"AWS::NoValue\"\n              } ]\n            },\n            \"RequireNumbers\" : {\n              \"Fn::If\" : [ \"iamPasswordPolicyParamRequireNumbers\", {\n                \"Ref\" : \"IamPasswordPolicyParamRequireNumbers\"\n              }, {\n                \"Ref\" : \"AWS::NoValue\"\n              } ]\n            },\n            \"RequireSymbols\" : {\n              \"Fn::If\" : [ \"iamPasswordPolicyParamRequireSymbols\", {\n                \"Ref\" : \"IamPasswordPolicyParamRequireSymbols\"\n              }, {\n                \"Ref\" : \"AWS::NoValue\"\n              } ]\n            },\n            \"RequireUppercaseCharacters\" : {\n              \"Fn::If\" : [ \"iamPasswordPolicyParamRequireUppercaseCharacters\", {\n                \"Ref\" : \"IamPasswordPolicyParamRequireUppercaseCharacters\"\n              }, {\n                \"Ref\" : \"AWS::NoValue\"\n              } ]\n            }\n          },\n          \"Source\" : {\n            \"Owner\" : \"AWS\",\n            \"SourceIdentifier\" : \"IAM_PASSWORD_POLICY\"\n          }\n        },\n        \"Type\" : \"AWS::Config::ConfigRule\"\n      },\n      \"IamPolicyNoStatementsWithAdminAccess\" : {\n        \"Properties\" : {\n          \"ConfigRuleName\" : \"iam-policy-no-statements-with-admin-access\",\n          \"Scope\" : {\n            \"ComplianceResourceTypes\" : [ \"AWS::IAM::Policy\" ]\n          },\n          \"Source\" : {\n            \"Owner\" : \"AWS\",\n            \"SourceIdentifier\" : \"IAM_POLICY_NO_STATEMENTS_WITH_ADMIN_ACCESS\"\n          }\n        },\n        \"Type\" : \"AWS::Config::ConfigRule\"\n      },\n      \"IamPolicyNoStatementsWithFullAccess\" : {\n        \"Properties\" : {\n          \"ConfigRuleName\" : \"iam-policy-no-statements-with-full-access\",\n          \"Scope\" : {\n            \"ComplianceResourceTypes\" : [ \"AWS::IAM::Policy\" ]\n          },\n          \"Source\" : {\n            \"Owner\" : \"AWS\",\n            \"SourceIdentifier\" : \"IAM_POLICY_NO_STATEMENTS_WITH_FULL_ACCESS\"\n          }\n        },\n        \"Type\" : \"AWS::Config::ConfigRule\"\n      },\n      \"IamRootAccessKeyCheck\" : {\n        \"Properties\" : {\n          \"ConfigRuleName\" : \"iam-root-access-key-check\",\n          \"Source\" : {\n            \"Owner\" : \"AWS\",\n            \"SourceIdentifier\" : \"IAM_ROOT_ACCESS_KEY_CHECK\"\n          }\n        },\n        \"Type\" : \"AWS::Config::ConfigRule\"\n      },\n      \"IamUserGroupMembershipCheck\" : {\n        \"Properties\" : {\n          \"ConfigRuleName\" : \"iam-user-group-membership-check\",\n          \"Scope\" : {\n            \"ComplianceResourceTypes\" : [ \"AWS::IAM::User\" ]\n          },\n          \"Source\" : {\n            \"Owner\" : \"AWS\",\n            \"SourceIdentifier\" : \"IAM_USER_GROUP_MEMBERSHIP_CHECK\"\n          }\n        },\n        \"Type\" : \"AWS::Config::ConfigRule\"\n      },\n      \"IamUserMfaEnabled\" : {\n        \"Properties\" : {\n          \"ConfigRuleName\" : \"iam-user-mfa-enabled\",\n          \"Source\" : {\n            \"Owner\" : \"AWS\",\n            \"SourceIdentifier\" : \"IAM_USER_MFA_ENABLED\"\n          }\n        },\n        \"Type\" : \"AWS::Config::ConfigRule\"\n      },\n      \"IamUserNoPoliciesCheck\" : {\n        \"Properties\" : {\n          \"ConfigRuleName\" : \"iam-user-no-policies-check\",\n          \"Scope\" : {\n            \"ComplianceResourceTypes\" : [ \"AWS::IAM::User\" ]\n          },\n          \"Source\" : {\n            \"Owner\" : \"AWS\",\n            \"SourceIdentifier\" : \"IAM_USER_NO_POLICIES_CHECK\"\n          }\n        },\n        \"Type\" : \"AWS::Config::ConfigRule\"\n      },\n      \"IamUserUnusedCredentialsCheck\" : {\n        \"Properties\" : {\n          \"ConfigRuleName\" : \"iam-user-unused-credentials-check\",\n          \"InputParameters\" : {\n            \"maxCredentialUsageAge\" : {\n              \"Fn::If\" : [ \"iamUserUnusedCredentialsCheckParamMaxCredentialUsageAge\", {\n                \"Ref\" : \"IamUserUnusedCredentialsCheckParamMaxCredentialUsageAge\"\n              }, {\n                \"Ref\" : \"AWS::NoValue\"\n              } ]\n            }\n          },\n          \"Source\" : {\n            \"Owner\" : \"AWS\",\n            \"SourceIdentifier\" : \"IAM_USER_UNUSED_CREDENTIALS_CHECK\"\n          }\n        },\n        \"Type\" : \"AWS::Config::ConfigRule\"\n      },\n      \"InstancesInVpc\" : {\n        \"Properties\" : {\n          \"ConfigRuleName\" : \"ec2-instances-in-vpc\",\n          \"Scope\" : {\n            \"ComplianceResourceTypes\" : [ \"AWS::EC2::Instance\" ]\n          },\n          \"Source\" : {\n            \"Owner\" : \"AWS\",\n            \"SourceIdentifier\" : \"INSTANCES_IN_VPC\"\n          }\n        },\n        \"Type\" : \"AWS::Config::ConfigRule\"\n      },\n      \"LambdaFunctionPublicAccessProhibited\" : {\n        \"Properties\" : {\n          \"ConfigRuleName\" : \"lambda-function-public-access-prohibited\",\n          \"Scope\" : {\n            \"ComplianceResourceTypes\" : [ \"AWS::Lambda::Function\" ]\n          },\n          \"Source\" : {\n            \"Owner\" : \"AWS\",\n            \"SourceIdentifier\" : \"LAMBDA_FUNCTION_PUBLIC_ACCESS_PROHIBITED\"\n          }\n        },\n        \"Type\" : \"AWS::Config::ConfigRule\"\n      },\n      \"LambdaInsideVpc\" : {\n        \"Properties\" : {\n          \"ConfigRuleName\" : \"lambda-inside-vpc\",\n          \"Scope\" : {\n            \"ComplianceResourceTypes\" : [ \"AWS::Lambda::Function\" ]\n          },\n          \"Source\" : {\n            \"Owner\" : \"AWS\",\n            \"SourceIdentifier\" : \"LAMBDA_INSIDE_VPC\"\n          }\n        },\n        \"Type\" : \"AWS::Config::ConfigRule\"\n      },\n      \"MfaEnabledForIamConsoleAccess\" : {\n        \"Properties\" : {\n          \"ConfigRuleName\" : \"mfa-enabled-for-iam-console-access\",\n          \"Source\" : {\n            \"Owner\" : \"AWS\",\n            \"SourceIdentifier\" : \"MFA_ENABLED_FOR_IAM_CONSOLE_ACCESS\"\n          }\n        },\n        \"Type\" : \"AWS::Config::ConfigRule\"\n      },\n      \"MultiRegionCloudTrailEnabled\" : {\n        \"Properties\" : {\n          \"ConfigRuleName\" : \"multi-region-cloudtrail-enabled\",\n          \"Source\" : {\n            \"Owner\" : \"AWS\",\n            \"SourceIdentifier\" : \"MULTI_REGION_CLOUD_TRAIL_ENABLED\"\n          }\n        },\n        \"Type\" : \"AWS::Config::ConfigRule\"\n      },\n      \"OpensearchHttpsRequired\" : {\n        \"Properties\" : {\n          \"ConfigRuleName\" : \"opensearch-https-required\",\n          \"Scope\" : {\n            \"ComplianceResourceTypes\" : [ \"AWS::OpenSearch::Domain\" ]\n          },\n          \"Source\" : {\n            \"Owner\" : \"AWS\",\n            \"SourceIdentifier\" : \"OPENSEARCH_HTTPS_REQUIRED\"\n          }\n        },\n        \"Type\" : \"AWS::Config::ConfigRule\"\n      },\n      \"OpensearchInVpcOnly\" : {\n        \"Properties\" : {\n          \"ConfigRuleName\" : \"opensearch-in-vpc-only\",\n          \"Scope\" : {\n            \"ComplianceResourceTypes\" : [ \"AWS::OpenSearch::Domain\" ]\n          },\n          \"Source\" : {\n            \"Owner\" : \"AWS\",\n            \"SourceIdentifier\" : \"OPENSEARCH_IN_VPC_ONLY\"\n          }\n        },\n        \"Type\" : \"AWS::Config::ConfigRule\"\n      },\n      \"RdsInstancePublicAccessCheck\" : {\n        \"Properties\" : {\n          \"ConfigRuleName\" : \"rds-instance-public-access-check\",\n          \"Scope\" : {\n            \"ComplianceResourceTypes\" : [ \"AWS::RDS::DBInstance\" ]\n          },\n          \"Source\" : {\n            \"Owner\" : \"AWS\",\n            \"SourceIdentifier\" : \"RDS_INSTANCE_PUBLIC_ACCESS_CHECK\"\n          }\n        },\n        \"Type\" : \"AWS::Config::ConfigRule\"\n      },\n      \"RdsLoggingEnabled\" : {\n        \"Properties\" : {\n          \"ConfigRuleName\" : \"rds-logging-enabled\",\n          \"Scope\" : {\n            \"ComplianceResourceTypes\" : [ \"AWS::RDS::DBInstance\" ]\n          },\n          \"Source\" : {\n            \"Owner\" : \"AWS\",\n            \"SourceIdentifier\" : \"RDS_LOGGING_ENABLED\"\n          }\n        },\n        \"Type\" : \"AWS::Config::ConfigRule\"\n      },\n      \"RdsSnapshotsPublicProhibited\" : {\n        \"Properties\" : {\n          \"ConfigRuleName\" : \"rds-snapshots-public-prohibited\",\n          \"Scope\" : {\n            \"ComplianceResourceTypes\" : [ \"AWS::RDS::DBSnapshot\", \"AWS::RDS::DBClusterSnapshot\" ]\n          },\n          \"Source\" : {\n            \"Owner\" : \"AWS\",\n            \"SourceIdentifier\" : \"RDS_SNAPSHOTS_PUBLIC_PROHIBITED\"\n          }\n        },\n        \"Type\" : \"AWS::Config::ConfigRule\"\n      },\n      \"RdsStorageEncrypted\" : {\n        \"Properties\" : {\n          \"ConfigRuleName\" : \"rds-storage-encrypted\",\n          \"Scope\" : {\n            \"ComplianceResourceTypes\" : [ \"AWS::RDS::DBInstance\" ]\n          },\n          \"Source\" : {\n            \"Owner\" : \"AWS\",\n            \"SourceIdentifier\" : \"RDS_STORAGE_ENCRYPTED\"\n          }\n        },\n        \"Type\" : \"AWS::Config::ConfigRule\"\n      },\n      \"RedshiftBackupEnabled\" : {\n        \"Properties\" : {\n          \"ConfigRuleName\" : \"redshift-backup-enabled\",\n          \"Scope\" : {\n            \"ComplianceResourceTypes\" : [ \"AWS::Redshift::Cluster\" ]\n          },\n          \"Source\" : {\n            \"Owner\" : \"AWS\",\n            \"SourceIdentifier\" : \"REDSHIFT_BACKUP_ENABLED\"\n          }\n        },\n        \"Type\" : \"AWS::Config::ConfigRule\"\n      },\n      \"RedshiftClusterConfigurationCheck\" : {\n        \"Properties\" : {\n          \"ConfigRuleName\" : \"redshift-cluster-configuration-check\",\n          \"InputParameters\" : {\n            \"clusterDbEncrypted\" : {\n              \"Fn::If\" : [ \"redshiftClusterConfigurationCheckParamClusterDbEncrypted\", {\n                \"Ref\" : \"RedshiftClusterConfigurationCheckParamClusterDbEncrypted\"\n              }, {\n                \"Ref\" : \"AWS::NoValue\"\n              } ]\n            },\n            \"loggingEnabled\" : {\n              \"Fn::If\" : [ \"redshiftClusterConfigurationCheckParamLoggingEnabled\", {\n                \"Ref\" : \"RedshiftClusterConfigurationCheckParamLoggingEnabled\"\n              }, {\n                \"Ref\" : \"AWS::NoValue\"\n              } ]\n            }\n          },\n          \"Scope\" : {\n            \"ComplianceResourceTypes\" : [ \"AWS::Redshift::Cluster\" ]\n          },\n          \"Source\" : {\n            \"Owner\" : \"AWS\",\n            \"SourceIdentifier\" : \"REDSHIFT_CLUSTER_CONFIGURATION_CHECK\"\n          }\n        },\n        \"Type\" : \"AWS::Config::ConfigRule\"\n      },\n      \"RedshiftClusterMaintenancesettingsCheck\" : {\n        \"Properties\" : {\n          \"ConfigRuleName\" : \"redshift-cluster-maintenancesettings-check\",\n          \"InputParameters\" : {\n            \"allowVersionUpgrade\" : {\n              \"Fn::If\" : [ \"redshiftClusterMaintenancesettingsCheckParamAllowVersionUpgrade\", {\n                \"Ref\" : \"RedshiftClusterMaintenancesettingsCheckParamAllowVersionUpgrade\"\n              }, {\n                \"Ref\" : \"AWS::NoValue\"\n              } ]\n            }\n          },\n          \"Scope\" : {\n            \"ComplianceResourceTypes\" : [ \"AWS::Redshift::Cluster\" ]\n          },\n          \"Source\" : {\n            \"Owner\" : \"AWS\",\n            \"SourceIdentifier\" : \"REDSHIFT_CLUSTER_MAINTENANCESETTINGS_CHECK\"\n          }\n        },\n        \"Type\" : \"AWS::Config::ConfigRule\"\n      },\n      \"RedshiftClusterPublicAccessCheck\" : {\n        \"Properties\" : {\n          \"ConfigRuleName\" : \"redshift-cluster-public-access-check\",\n          \"Scope\" : {\n            \"ComplianceResourceTypes\" : [ \"AWS::Redshift::Cluster\" ]\n          },\n          \"Source\" : {\n            \"Owner\" : \"AWS\",\n            \"SourceIdentifier\" : \"REDSHIFT_CLUSTER_PUBLIC_ACCESS_CHECK\"\n          }\n        },\n        \"Type\" : \"AWS::Config::ConfigRule\"\n      },\n      \"RedshiftRequireTlsSsl\" : {\n        \"Properties\" : {\n          \"ConfigRuleName\" : \"redshift-require-tls-ssl\",\n          \"Scope\" : {\n            \"ComplianceResourceTypes\" : [ \"AWS::Redshift::Cluster\" ]\n          },\n          \"Source\" : {\n            \"Owner\" : \"AWS\",\n            \"SourceIdentifier\" : \"REDSHIFT_REQUIRE_TLS_SSL\"\n          }\n        },\n        \"Type\" : \"AWS::Config::ConfigRule\"\n      },\n      \"RootAccountHardwareMfaEnabled\" : {\n        \"Properties\" : {\n          \"ConfigRuleName\" : \"root-account-hardware-mfa-enabled\",\n          \"Source\" : {\n            \"Owner\" : \"AWS\",\n            \"SourceIdentifier\" : \"ROOT_ACCOUNT_HARDWARE_MFA_ENABLED\"\n          }\n        },\n        \"Type\" : \"AWS::Config::ConfigRule\"\n      },\n      \"RootAccountMfaEnabled\" : {\n        \"Properties\" : {\n          \"ConfigRuleName\" : \"root-account-mfa-enabled\",\n          \"Source\" : {\n            \"Owner\" : \"AWS\",\n            \"SourceIdentifier\" : \"ROOT_ACCOUNT_MFA_ENABLED\"\n          }\n        },\n        \"Type\" : \"AWS::Config::ConfigRule\"\n      },\n      \"S3AccountLevelPublicAccessBlocksPeriodic\" : {\n        \"Properties\" : {\n          \"ConfigRuleName\" : \"s3-account-level-public-access-blocks-periodic\",\n          \"InputParameters\" : {\n            \"BlockPublicAcls\" : {\n              \"Fn::If\" : [ \"s3AccountLevelPublicAccessBlocksPeriodicParamBlockPublicAcls\", {\n                \"Ref\" : \"S3AccountLevelPublicAccessBlocksPeriodicParamBlockPublicAcls\"\n              }, {\n                \"Ref\" : \"AWS::NoValue\"\n              } ]\n            },\n            \"BlockPublicPolicy\" : {\n              \"Fn::If\" : [ \"s3AccountLevelPublicAccessBlocksPeriodicParamBlockPublicPolicy\", {\n                \"Ref\" : \"S3AccountLevelPublicAccessBlocksPeriodicParamBlockPublicPolicy\"\n              }, {\n                \"Ref\" : \"AWS::NoValue\"\n              } ]\n            },\n            \"IgnorePublicAcls\" : {\n              \"Fn::If\" : [ \"s3AccountLevelPublicAccessBlocksPeriodicParamIgnorePublicAcls\", {\n                \"Ref\" : \"S3AccountLevelPublicAccessBlocksPeriodicParamIgnorePublicAcls\"\n              }, {\n                \"Ref\" : \"AWS::NoValue\"\n              } ]\n            },\n            \"RestrictPublicBuckets\" : {\n              \"Fn::If\" : [ \"s3AccountLevelPublicAccessBlocksPeriodicParamRestrictPublicBuckets\", {\n                \"Ref\" : \"S3AccountLevelPublicAccessBlocksPeriodicParamRestrictPublicBuckets\"\n              }, {\n                \"Ref\" : \"AWS::NoValue\"\n              } ]\n            }\n          },\n          \"Source\" : {\n            \"Owner\" : \"AWS\",\n            \"SourceIdentifier\" : \"S3_ACCOUNT_LEVEL_PUBLIC_ACCESS_BLOCKS_PERIODIC\"\n          }\n        },\n        \"Type\" : \"AWS::Config::ConfigRule\"\n      },\n      \"S3BucketLevelPublicAccessProhibited\" : {\n        \"Properties\" : {\n          \"ConfigRuleName\" : \"s3-bucket-level-public-access-prohibited\",\n          \"Scope\" : {\n            \"ComplianceResourceTypes\" : [ \"AWS::S3::Bucket\" ]\n          },\n          \"Source\" : {\n            \"Owner\" : \"AWS\",\n            \"SourceIdentifier\" : \"S3_BUCKET_LEVEL_PUBLIC_ACCESS_PROHIBITED\"\n          }\n        },\n        \"Type\" : \"AWS::Config::ConfigRule\"\n      },\n      \"S3BucketLoggingEnabled\" : {\n        \"Properties\" : {\n          \"ConfigRuleName\" : \"s3-bucket-logging-enabled\",\n          \"Scope\" : {\n            \"ComplianceResourceTypes\" : [ \"AWS::S3::Bucket\" ]\n          },\n          \"Source\" : {\n            \"Owner\" : \"AWS\",\n            \"SourceIdentifier\" : \"S3_BUCKET_LOGGING_ENABLED\"\n          }\n        },\n        \"Type\" : \"AWS::Config::ConfigRule\"\n      },\n      \"S3BucketPublicReadProhibited\" : {\n        \"Properties\" : {\n          \"ConfigRuleName\" : \"s3-bucket-public-read-prohibited\",\n          \"Scope\" : {\n            \"ComplianceResourceTypes\" : [ \"AWS::S3::Bucket\" ]\n          },\n          \"Source\" : {\n            \"Owner\" : \"AWS\",\n            \"SourceIdentifier\" : \"S3_BUCKET_PUBLIC_READ_PROHIBITED\"\n          }\n        },\n        \"Type\" : \"AWS::Config::ConfigRule\"\n      },\n      \"S3BucketPublicWriteProhibited\" : {\n        \"Properties\" : {\n          \"ConfigRuleName\" : \"s3-bucket-public-write-prohibited\",\n          \"Scope\" : {\n            \"ComplianceResourceTypes\" : [ \"AWS::S3::Bucket\" ]\n          },\n          \"Source\" : {\n            \"Owner\" : \"AWS\",\n            \"SourceIdentifier\" : \"S3_BUCKET_PUBLIC_WRITE_PROHIBITED\"\n          }\n        },\n        \"Type\" : \"AWS::Config::ConfigRule\"\n      },\n      \"S3BucketReplicationEnabled\" : {\n        \"Properties\" : {\n          \"ConfigRuleName\" : \"s3-bucket-replication-enabled\",\n          \"Scope\" : {\n            \"ComplianceResourceTypes\" : [ \"AWS::S3::Bucket\" ]\n          },\n          \"Source\" : {\n            \"Owner\" : \"AWS\",\n            \"SourceIdentifier\" : \"S3_BUCKET_REPLICATION_ENABLED\"\n          }\n        },\n        \"Type\" : \"AWS::Config::ConfigRule\"\n      },\n      \"S3BucketSslRequestsOnly\" : {\n        \"Properties\" : {\n          \"ConfigRuleName\" : \"s3-bucket-ssl-requests-only\",\n          \"Scope\" : {\n            \"ComplianceResourceTypes\" : [ \"AWS::S3::Bucket\" ]\n          },\n          \"Source\" : {\n            \"Owner\" : \"AWS\",\n            \"SourceIdentifier\" : \"S3_BUCKET_SSL_REQUESTS_ONLY\"\n          }\n        },\n        \"Type\" : \"AWS::Config::ConfigRule\"\n      },\n      \"S3BucketVersioningEnabled\" : {\n        \"Properties\" : {\n          \"ConfigRuleName\" : \"s3-bucket-versioning-enabled\",\n          \"Scope\" : {\n            \"ComplianceResourceTypes\" : [ \"AWS::S3::Bucket\" ]\n          },\n          \"Source\" : {\n            \"Owner\" : \"AWS\",\n            \"SourceIdentifier\" : \"S3_BUCKET_VERSIONING_ENABLED\"\n          }\n        },\n        \"Type\" : \"AWS::Config::ConfigRule\"\n      },\n      \"S3VersionLifecyclePolicyCheck\" : {\n        \"Properties\" : {\n          \"ConfigRuleName\" : \"s3-version-lifecycle-policy-check\",\n          \"Scope\" : {\n            \"ComplianceResourceTypes\" : [ \"AWS::S3::Bucket\" ]\n          },\n          \"Source\" : {\n            \"Owner\" : \"AWS\",\n            \"SourceIdentifier\" : \"S3_VERSION_LIFECYCLE_POLICY_CHECK\"\n          }\n        },\n        \"Type\" : \"AWS::Config::ConfigRule\"\n      },\n      \"SagemakerNotebookNoDirectInternetAccess\" : {\n        \"Properties\" : {\n          \"ConfigRuleName\" : \"sagemaker-notebook-no-direct-internet-access\",\n          \"Source\" : {\n            \"Owner\" : \"AWS\",\n            \"SourceIdentifier\" : \"SAGEMAKER_NOTEBOOK_NO_DIRECT_INTERNET_ACCESS\"\n          }\n        },\n        \"Type\" : \"AWS::Config::ConfigRule\"\n      },\n      \"SecretsmanagerRotationEnabledCheck\" : {\n        \"Properties\" : {\n          \"ConfigRuleName\" : \"secretsmanager-rotation-enabled-check\",\n          \"Scope\" : {\n            \"ComplianceResourceTypes\" : [ \"AWS::SecretsManager::Secret\" ]\n          },\n          \"Source\" : {\n            \"Owner\" : \"AWS\",\n            \"SourceIdentifier\" : \"SECRETSMANAGER_ROTATION_ENABLED_CHECK\"\n          }\n        },\n        \"Type\" : \"AWS::Config::ConfigRule\"\n      },\n      \"SecurityhubEnabled\" : {\n        \"Properties\" : {\n          \"ConfigRuleName\" : \"securityhub-enabled\",\n          \"Source\" : {\n            \"Owner\" : \"AWS\",\n            \"SourceIdentifier\" : \"SECURITYHUB_ENABLED\"\n          }\n        },\n        \"Type\" : \"AWS::Config::ConfigRule\"\n      },\n      \"SsmDocumentNotPublic\" : {\n        \"Properties\" : {\n          \"ConfigRuleName\" : \"ssm-document-not-public\",\n          \"Source\" : {\n            \"Owner\" : \"AWS\",\n            \"SourceIdentifier\" : \"SSM_DOCUMENT_NOT_PUBLIC\"\n          }\n        },\n        \"Type\" : \"AWS::Config::ConfigRule\"\n      },\n      \"SubnetAutoAssignPublicIpDisabled\" : {\n        \"Properties\" : {\n          \"ConfigRuleName\" : \"subnet-auto-assign-public-ip-disabled\",\n          \"Scope\" : {\n            \"ComplianceResourceTypes\" : [ \"AWS::EC2::Subnet\" ]\n          },\n          \"Source\" : {\n            \"Owner\" : \"AWS\",\n            \"SourceIdentifier\" : \"SUBNET_AUTO_ASSIGN_PUBLIC_IP_DISABLED\"\n          }\n        },\n        \"Type\" : \"AWS::Config::ConfigRule\"\n      },\n      \"VpcFlowLogsEnabled\" : {\n        \"Properties\" : {\n          \"ConfigRuleName\" : \"vpc-flow-logs-enabled\",\n          \"Source\" : {\n            \"Owner\" : \"AWS\",\n            \"SourceIdentifier\" : \"VPC_FLOW_LOGS_ENABLED\"\n          }\n        },\n        \"Type\" : \"AWS::Config::ConfigRule\"\n      },\n      \"VpcNetworkAclUnusedCheck\" : {\n        \"Properties\" : {\n          \"ConfigRuleName\" : \"vpc-network-acl-unused-check\",\n          \"Scope\" : {\n            \"ComplianceResourceTypes\" : [ \"AWS::EC2::NetworkAcl\" ]\n          },\n          \"Source\" : {\n            \"Owner\" : \"AWS\",\n            \"SourceIdentifier\" : \"VPC_NETWORK_ACL_UNUSED_CHECK\"\n          }\n        },\n        \"Type\" : \"AWS::Config::ConfigRule\"\n      },\n      \"Wafv2LoggingEnabled\" : {\n        \"Properties\" : {\n          \"ConfigRuleName\" : \"wafv2-logging-enabled\",\n          \"Source\" : {\n            \"Owner\" : \"AWS\",\n            \"SourceIdentifier\" : \"WAFV2_LOGGING_ENABLED\"\n          }\n        },\n        \"Type\" : \"AWS::Config::ConfigRule\"\n      },\n      \"AuditLogPolicyExists\" : {\n        \"Properties\" : {\n          \"ConfigRuleName\" : \"audit-log-policy-exists\",\n          \"Description\" : \"Establish and maintain an audit log management policy that defines your organization's logging requirements. This includes, but is not limited to, review and retention of audit logs.\",\n          \"Source\" : {\n            \"Owner\" : \"AWS\",\n            \"SourceIdentifier\" : \"AWS_CONFIG_PROCESS_CHECK\"\n          }\n        },\n        \"Type\" : \"AWS::Config::ConfigRule\"\n      }\n    },\n    \"Conditions\" : {\n      \"accessKeysRotatedParamMaxAccessKeyAge\" : {\n        \"Fn::Not\" : [ {\n          \"Fn::Equals\" : [ \"\", {\n            \"Ref\" : \"AccessKeysRotatedParamMaxAccessKeyAge\"\n          } ]\n        } ]\n      },\n      \"iamCustomerPolicyBlockedKmsActionsParamBlockedActionsPatterns\" : {\n        \"Fn::Not\" : [ {\n          \"Fn::Equals\" : [ \"\", {\n            \"Ref\" : \"IamCustomerPolicyBlockedKmsActionsParamBlockedActionsPatterns\"\n          } ]\n        } ]\n      },\n      \"iamInlinePolicyBlockedKmsActionsParamBlockedActionsPatterns\" : {\n        \"Fn::Not\" : [ {\n          \"Fn::Equals\" : [ \"\", {\n            \"Ref\" : \"IamInlinePolicyBlockedKmsActionsParamBlockedActionsPatterns\"\n          } ]\n        } ]\n      },\n      \"iamPasswordPolicyParamMaxPasswordAge\" : {\n        \"Fn::Not\" : [ {\n          \"Fn::Equals\" : [ \"\", {\n            \"Ref\" : \"IamPasswordPolicyParamMaxPasswordAge\"\n          } ]\n        } ]\n      },\n      \"iamPasswordPolicyParamMinimumPasswordLength\" : {\n        \"Fn::Not\" : [ {\n          \"Fn::Equals\" : [ \"\", {\n            \"Ref\" : \"IamPasswordPolicyParamMinimumPasswordLength\"\n          } ]\n        } ]\n      },\n      \"iamPasswordPolicyParamPasswordReusePrevention\" : {\n        \"Fn::Not\" : [ {\n          \"Fn::Equals\" : [ \"\", {\n            \"Ref\" : \"IamPasswordPolicyParamPasswordReusePrevention\"\n          } ]\n        } ]\n      },\n      \"iamPasswordPolicyParamRequireLowercaseCharacters\" : {\n        \"Fn::Not\" : [ {\n          \"Fn::Equals\" : [ \"\", {\n            \"Ref\" : \"IamPasswordPolicyParamRequireLowercaseCharacters\"\n          } ]\n        } ]\n      },\n      \"iamPasswordPolicyParamRequireNumbers\" : {\n        \"Fn::Not\" : [ {\n          \"Fn::Equals\" : [ \"\", {\n            \"Ref\" : \"IamPasswordPolicyParamRequireNumbers\"\n          } ]\n        } ]\n      },\n      \"iamPasswordPolicyParamRequireSymbols\" : {\n        \"Fn::Not\" : [ {\n          \"Fn::Equals\" : [ \"\", {\n            \"Ref\" : \"IamPasswordPolicyParamRequireSymbols\"\n          } ]\n        } ]\n      },\n      \"iamPasswordPolicyParamRequireUppercaseCharacters\" : {\n        \"Fn::Not\" : [ {\n          \"Fn::Equals\" : [ \"\", {\n            \"Ref\" : \"IamPasswordPolicyParamRequireUppercaseCharacters\"\n          } ]\n        } ]\n      },\n      \"iamUserUnusedCredentialsCheckParamMaxCredentialUsageAge\" : {\n        \"Fn::Not\" : [ {\n          \"Fn::Equals\" : [ \"\", {\n            \"Ref\" : \"IamUserUnusedCredentialsCheckParamMaxCredentialUsageAge\"\n          } ]\n        } ]\n      },\n      \"redshiftClusterConfigurationCheckParamClusterDbEncrypted\" : {\n        \"Fn::Not\" : [ {\n          \"Fn::Equals\" : [ \"\", {\n            \"Ref\" : \"RedshiftClusterConfigurationCheckParamClusterDbEncrypted\"\n          } ]\n        } ]\n      },\n      \"redshiftClusterConfigurationCheckParamLoggingEnabled\" : {\n        \"Fn::Not\" : [ {\n          \"Fn::Equals\" : [ \"\", {\n            \"Ref\" : \"RedshiftClusterConfigurationCheckParamLoggingEnabled\"\n          } ]\n        } ]\n      },\n      \"redshiftClusterMaintenancesettingsCheckParamAllowVersionUpgrade\" : {\n        \"Fn::Not\" : [ {\n          \"Fn::Equals\" : [ \"\", {\n            \"Ref\" : \"RedshiftClusterMaintenancesettingsCheckParamAllowVersionUpgrade\"\n          } ]\n        } ]\n      },\n      \"s3AccountLevelPublicAccessBlocksPeriodicParamBlockPublicAcls\" : {\n        \"Fn::Not\" : [ {\n          \"Fn::Equals\" : [ \"\", {\n            \"Ref\" : \"S3AccountLevelPublicAccessBlocksPeriodicParamBlockPublicAcls\"\n          } ]\n        } ]\n      },\n      \"s3AccountLevelPublicAccessBlocksPeriodicParamBlockPublicPolicy\" : {\n        \"Fn::Not\" : [ {\n          \"Fn::Equals\" : [ \"\", {\n            \"Ref\" : \"S3AccountLevelPublicAccessBlocksPeriodicParamBlockPublicPolicy\"\n          } ]\n        } ]\n      },\n      \"s3AccountLevelPublicAccessBlocksPeriodicParamIgnorePublicAcls\" : {\n        \"Fn::Not\" : [ {\n          \"Fn::Equals\" : [ \"\", {\n            \"Ref\" : \"S3AccountLevelPublicAccessBlocksPeriodicParamIgnorePublicAcls\"\n          } ]\n        } ]\n      },\n      \"s3AccountLevelPublicAccessBlocksPeriodicParamRestrictPublicBuckets\" : {\n        \"Fn::Not\" : [ {\n          \"Fn::Equals\" : [ \"\", {\n            \"Ref\" : \"S3AccountLevelPublicAccessBlocksPeriodicParamRestrictPublicBuckets\"\n          } ]\n        } ]\n      }\n    }\n  }\n}",
  "CreatedDate": "2022-08-25T22:46:27.436Z",
  "DisplayName": null,
  "DocumentFormat": {
    "Value": "JSON"
  },
  "DocumentType": {
    "Value": "ConformancePackTemplate"
  },
  "DocumentVersion": "1",
  "Name": "AWSConformancePacks-OperationalBestPracticesforCISCriticalSecurityControlsv8IG1",
  "Requires": [],
  "ReviewStatus": null,
  "Status": {
    "Value": "Active"
  },
  "StatusInformation": null,
  "VersionName": null,
  "ResponseMetadata": {
    "RequestId": "db65d339-e726-4138-98c6-776650b739ad",
    "Metadata": {},
    "ChecksumAlgorithm": 0,
    "ChecksumValidationStatus": 0
  },
  "ContentLength": 53368,
  "HttpStatusCode": 200,
  "LoggedAt": "2023-05-17T07:11:04.1812666+00:00"
}
