{
  "AttachmentsContent": [],
  "Content": "{\n  \"schemaVersion\" : \"1.0\",\n  \"description\" : \"SO0109 Live Streaming on AWS with MediaStore Solution v1.2.0\",\n  \"templateBody\" : {\n    \"Description\" : \"SO0109 Live Streaming on AWS with MediaStore Solution v1.2.0\",\n    \"Metadata\" : {\n      \"AWS::CloudFormation::Interface\" : {\n        \"ParameterGroups\" : [ {\n          \"Label\" : {\n            \"default\" : \"LIVE STREAM SOURCE\"\n          },\n          \"Parameters\" : [ \"InputType\" ]\n        }, {\n          \"Label\" : {\n            \"default\" : \"URL_PULL CONFIGURATION\"\n          },\n          \"Parameters\" : [ \"PullUrl\", \"PullUser\", \"PullPass\" ]\n        }, {\n          \"Label\" : {\n            \"default\" : \"RTP_PUSH / RTMP_PUSH CONFIGURATION\"\n          },\n          \"Parameters\" : [ \"InputCIDR\" ]\n        }, {\n          \"Label\" : {\n            \"default\" : \"INPUT_DEVICE CONFIGURATION\"\n          },\n          \"Parameters\" : [ \"InputDeviceId\" ]\n        }, {\n          \"Label\" : {\n            \"default\" : \"ENCODING OPTIONS\"\n          },\n          \"Parameters\" : [ \"EncodingProfile\", \"ChannelStart\" ]\n        } ],\n        \"ParameterLabels\" : {\n          \"InputType\" : {\n            \"default\" : \"Source Input Type\"\n          },\n          \"EncodingProfile\" : {\n            \"default\" : \"Encoding Profile\"\n          },\n          \"InputDeviceId\" : {\n            \"default\" : \"Elemental Link Input Device ID\"\n          },\n          \"InputCIDR\" : {\n            \"default\" : \"Input Security Group CIDR Block (REQUIRED)\"\n          },\n          \"PullUrl\" : {\n            \"default\" : \"Source URL (REQUIRED)\"\n          },\n          \"PullUser\" : {\n            \"default\" : \"Source Username (OPTIONAL)\"\n          },\n          \"pullPass\" : {\n            \"default\" : \"Source Password (REQUIRED)\"\n          },\n          \"ChannelStart\" : {\n            \"default\" : \"Start MediaLive Channel\"\n          }\n        }\n      }\n    },\n    \"Parameters\" : {\n      \"InputType\" : {\n        \"Type\" : \"String\",\n        \"Default\" : \"URL_PULL\",\n        \"AllowedValues\" : [ \"RTP_PUSH\", \"RTMP_PUSH\", \"URL_PULL\", \"INPUT_DEVICE\" ],\n        \"Description\" : \"Specify the input type for MediaLive (default parameters are for the demo video).  For details on setting up each input type, see https://docs.aws.amazon.com/solutions/latest/live-streaming-on-aws-with-mediastore/appendix-a.html.\"\n      },\n      \"InputDeviceId\" : {\n        \"Type\" : \"String\",\n        \"Default\" : \"\",\n        \"Description\" : \"Specify the ID for your Elemental Link Input device (please note a Link device can only be attached to one input at a time)\"\n      },\n      \"InputCIDR\" : {\n        \"Type\" : \"String\",\n        \"Default\" : \"\",\n        \"Description\" : \"For RTP and RTMP PUSH input types ONLY, specify the CIDR Block for the MediaLive SecurityGroup. Input security group restricts access to the input and prevents unauthorized third parties from pushing content into a channel that is associated with that input.\"\n      },\n      \"PullUrl\" : {\n        \"Type\" : \"String\",\n        \"Default\" : \"https://d15an60oaeed9r.cloudfront.net/live_stream_v2/sports_reel_with_markers.m3u8\",\n        \"Description\" : \"For URL PULL input type ONLY, specify the primary source URL, this should be a HTTP or HTTPS link to the stream manifest file.\"\n      },\n      \"PullUser\" : {\n        \"Type\" : \"String\",\n        \"Default\" : \"\",\n        \"Description\" : \"For URL PULL input type ONLY, if basic authentication is enabled on the source stream enter the username\"\n      },\n      \"PullPass\" : {\n        \"Type\" : \"String\",\n        \"Default\" : \"\",\n        \"Description\" : \"For URL PULL input type ONLY, if basic authentication is enabled on the source stream enter the password\"\n      },\n      \"EncodingProfile\" : {\n        \"Type\" : \"String\",\n        \"Default\" : \"HD-720p\",\n        \"AllowedValues\" : [ \"HD-1080p\", \"HD-720p\", \"SD-540p\" ],\n        \"Description\" : \"Select an encoding profile. HD 1080p [1920x1080, 1280x720, 960x540, 768x432, 640x360, 512x288] HD 720p [1280x720, 960x540, 768x432, 640x360, 512x288] SD 540p [960x540, 768x432, 640x360, 512x288]  See the implementation guide for details https://docs.aws.amazon.com/solutions/latest/live-streaming/considerations.html\"\n      },\n      \"ChannelStart\" : {\n        \"Type\" : \"String\",\n        \"Default\" : \"Yes\",\n        \"AllowedValues\" : [ \"Yes\", \"No\" ],\n        \"Description\" : \"If your source is ready to stream select true, this wil start the MediaLive Channel as part of the deployment. If you select false you will need to manually start the MediaLive Channel when your source is ready.\"\n      }\n    },\n    \"Mappings\" : {\n      \"AnonymousData\" : {\n        \"SendAnonymousData\" : {\n          \"Data\" : \"Yes\"\n        }\n      }\n    },\n    \"Resources\" : {\n      \"CloudFrontToMediaStoreCloudFrontOriginAccessIdentityD026F5B3\" : {\n        \"Type\" : \"AWS::CloudFront::CloudFrontOriginAccessIdentity\",\n        \"Properties\" : {\n          \"CloudFrontOriginAccessIdentityConfig\" : {\n            \"Comment\" : {\n              \"Fn::Join\" : [ \"\", [ \"access-identity-\", {\n                \"Ref\" : \"AWS::Region\"\n              }, \"-\", {\n                \"Ref\" : \"AWS::StackName\"\n              } ] ]\n            }\n          }\n        },\n        \"Metadata\" : {\n          \"aws:cdk:path\" : \"LiveStreaming/CloudFrontToMediaStore/CloudFrontOriginAccessIdentity/Resource\"\n        }\n      },\n      \"CloudFrontToMediaStoreMediaStoreContainer2EAAC53A\" : {\n        \"Type\" : \"AWS::MediaStore::Container\",\n        \"Properties\" : {\n          \"ContainerName\" : {\n            \"Ref\" : \"AWS::StackName\"\n          },\n          \"AccessLoggingEnabled\" : true,\n          \"CorsPolicy\" : [ {\n            \"AllowedHeaders\" : [ \"*\" ],\n            \"AllowedMethods\" : [ \"GET\" ],\n            \"AllowedOrigins\" : [ \"*\" ],\n            \"ExposeHeaders\" : [ \"*\" ],\n            \"MaxAgeSeconds\" : 3000\n          } ],\n          \"LifecyclePolicy\" : \"{\\\"rules\\\":[{\\\"definition\\\":{\\\"path\\\":[{\\\"wildcard\\\":\\\"stream/*.ts\\\"}],\\\"seconds_since_create\\\":[{\\\"numeric\\\":[\\\">\\\",300]}]},\\\"action\\\":\\\"EXPIRE\\\"}]}\",\n          \"MetricPolicy\" : {\n            \"ContainerLevelMetrics\" : \"ENABLED\"\n          },\n          \"Policy\" : {\n            \"Fn::Join\" : [ \"\", [ \"{\\\"Version\\\":\\\"2012-10-17\\\",\\\"Statement\\\":[{\\\"Sid\\\":\\\"MediaStoreDefaultPolicy\\\",\\\"Effect\\\":\\\"Allow\\\",\\\"Principal\\\":\\\"*\\\",\\\"Action\\\":[\\\"mediastore:GetObject\\\",\\\"mediastore:DescribeObject\\\"],\\\"Resource\\\":\\\"arn:\", {\n              \"Ref\" : \"AWS::Partition\"\n            }, \":mediastore:\", {\n              \"Ref\" : \"AWS::Region\"\n            }, \":\", {\n              \"Ref\" : \"AWS::AccountId\"\n            }, \":container/\", {\n              \"Ref\" : \"AWS::StackName\"\n            }, \"/*\\\",\\\"Condition\\\":{\\\"Bool\\\":{\\\"aws:UserAgent\\\":\\\"\", {\n              \"Ref\" : \"CloudFrontToMediaStoreCloudFrontOriginAccessIdentityD026F5B3\"\n            }, \"\\\",\\\"aws:SecureTransport\\\":\\\"true\\\"}}}]}\" ] ]\n          }\n        },\n        \"DeletionPolicy\" : \"Retain\",\n        \"Metadata\" : {\n          \"aws:cdk:path\" : \"LiveStreaming/CloudFrontToMediaStore/MediaStoreContainer\"\n        }\n      },\n      \"CloudFrontToMediaStoreCloudfrontLoggingBucketDF6F6E4B\" : {\n        \"Type\" : \"AWS::S3::Bucket\",\n        \"Properties\" : {\n          \"AccessControl\" : \"LogDeliveryWrite\",\n          \"BucketEncryption\" : {\n            \"ServerSideEncryptionConfiguration\" : [ {\n              \"ServerSideEncryptionByDefault\" : {\n                \"SSEAlgorithm\" : \"AES256\"\n              }\n            } ]\n          },\n          \"PublicAccessBlockConfiguration\" : {\n            \"BlockPublicAcls\" : true,\n            \"BlockPublicPolicy\" : true,\n            \"IgnorePublicAcls\" : true,\n            \"RestrictPublicBuckets\" : true\n          }\n        },\n        \"UpdateReplacePolicy\" : \"Retain\",\n        \"DeletionPolicy\" : \"Retain\",\n        \"Metadata\" : {\n          \"cfn_nag\" : {\n            \"rules_to_suppress\" : [ {\n              \"id\" : \"W35\",\n              \"reason\" : \"This S3 bucket is used as the access logging bucket for CloudFront Distribution\"\n            } ]\n          }\n        }\n      },\n      \"CloudFrontToMediaStoreCloudfrontLoggingBucketPolicy9AB02183\" : {\n        \"Type\" : \"AWS::S3::BucketPolicy\",\n        \"Properties\" : {\n          \"Bucket\" : {\n            \"Ref\" : \"CloudFrontToMediaStoreCloudfrontLoggingBucketDF6F6E4B\"\n          },\n          \"PolicyDocument\" : {\n            \"Statement\" : [ {\n              \"Action\" : \"*\",\n              \"Condition\" : {\n                \"Bool\" : {\n                  \"aws:SecureTransport\" : \"false\"\n                }\n              },\n              \"Effect\" : \"Deny\",\n              \"Principal\" : \"*\",\n              \"Resource\" : {\n                \"Fn::Join\" : [ \"\", [ {\n                  \"Fn::GetAtt\" : [ \"CloudFrontToMediaStoreCloudfrontLoggingBucketDF6F6E4B\", \"Arn\" ]\n                }, \"/*\" ] ]\n              },\n              \"Sid\" : \"HttpsOnly\"\n            } ],\n            \"Version\" : \"2012-10-17\"\n          }\n        },\n        \"Metadata\" : {\n          \"aws:cdk:path\" : \"LiveStreaming/CloudFrontToMediaStore/CloudfrontLoggingBucket/Policy/Resource\"\n        }\n      },\n      \"CloudFrontToMediaStoreCloudfrontOriginRequestPolicyE5B13E44\" : {\n        \"Type\" : \"AWS::CloudFront::OriginRequestPolicy\",\n        \"Properties\" : {\n          \"OriginRequestPolicyConfig\" : {\n            \"Comment\" : \"Policy for Constructs CloudFrontDistributionForMediaStore\",\n            \"CookiesConfig\" : {\n              \"CookieBehavior\" : \"none\"\n            },\n            \"HeadersConfig\" : {\n              \"HeaderBehavior\" : \"whitelist\",\n              \"Headers\" : [ \"Access-Control-Allow-Origin\", \"Access-Control-Request-Method\", \"Access-Control-Request-Header\", \"Origin\" ]\n            },\n            \"Name\" : {\n              \"Fn::Join\" : [ \"\", [ {\n                \"Ref\" : \"AWS::StackName\"\n              }, \"-\", {\n                \"Ref\" : \"AWS::Region\"\n              }, \"-CloudFrontDistributionForMediaStore\" ] ]\n            },\n            \"QueryStringsConfig\" : {\n              \"QueryStringBehavior\" : \"all\"\n            }\n          }\n        },\n        \"Metadata\" : {\n          \"aws:cdk:path\" : \"LiveStreaming/CloudFrontToMediaStore/CloudfrontOriginRequestPolicy/Resource\"\n        }\n      },\n      \"CloudFrontToMediaStoreCloudFrontDistribution36D55136\" : {\n        \"Type\" : \"AWS::CloudFront::Distribution\",\n        \"Properties\" : {\n          \"DistributionConfig\" : {\n            \"DefaultCacheBehavior\" : {\n              \"AllowedMethods\" : [ \"GET\", \"HEAD\", \"OPTIONS\" ],\n              \"CachePolicyId\" : \"658327ea-f89d-4fab-a63d-7e88639e58f6\",\n              \"CachedMethods\" : [ \"GET\", \"HEAD\", \"OPTIONS\" ],\n              \"Compress\" : true,\n              \"OriginRequestPolicyId\" : {\n                \"Ref\" : \"CloudFrontToMediaStoreCloudfrontOriginRequestPolicyE5B13E44\"\n              },\n              \"TargetOriginId\" : \"LiveStreamingCloudFrontToMediaStoreCloudFrontDistributionOrigin1A3A57054\",\n              \"ViewerProtocolPolicy\" : \"redirect-to-https\"\n            },\n            \"Enabled\" : true,\n            \"HttpVersion\" : \"http2\",\n            \"IPV6Enabled\" : true,\n            \"Logging\" : {\n              \"Bucket\" : {\n                \"Fn::GetAtt\" : [ \"CloudFrontToMediaStoreCloudfrontLoggingBucketDF6F6E4B\", \"RegionalDomainName\" ]\n              }\n            },\n            \"Origins\" : [ {\n              \"CustomOriginConfig\" : {\n                \"OriginProtocolPolicy\" : \"https-only\"\n              },\n              \"DomainName\" : {\n                \"Fn::Select\" : [ 0, {\n                  \"Fn::Split\" : [ \"/\", {\n                    \"Fn::Select\" : [ 1, {\n                      \"Fn::Split\" : [ \"://\", {\n                        \"Fn::GetAtt\" : [ \"CloudFrontToMediaStoreMediaStoreContainer2EAAC53A\", \"Endpoint\" ]\n                      } ]\n                    } ]\n                  } ]\n                } ]\n              },\n              \"Id\" : \"LiveStreamingCloudFrontToMediaStoreCloudFrontDistributionOrigin1A3A57054\",\n              \"OriginCustomHeaders\" : [ {\n                \"HeaderName\" : \"User-Agent\",\n                \"HeaderValue\" : {\n                  \"Ref\" : \"CloudFrontToMediaStoreCloudFrontOriginAccessIdentityD026F5B3\"\n                }\n              } ]\n            } ]\n          }\n        },\n        \"Metadata\" : {\n          \"cfn_nag\" : {\n            \"rules_to_suppress\" : [ {\n              \"id\" : \"W70\",\n              \"reason\" : \"Since the distribution uses the CloudFront domain name, CloudFront automatically sets the security policy to TLSv1 regardless of the value of MinimumProtocolVersion\"\n            } ]\n          }\n        }\n      },\n      \"MediaLiveRole1149D189\" : {\n        \"Type\" : \"AWS::IAM::Role\",\n        \"Properties\" : {\n          \"AssumeRolePolicyDocument\" : {\n            \"Statement\" : [ {\n              \"Action\" : \"sts:AssumeRole\",\n              \"Effect\" : \"Allow\",\n              \"Principal\" : {\n                \"Service\" : \"medialive.amazonaws.com\"\n              }\n            } ],\n            \"Version\" : \"2012-10-17\"\n          }\n        },\n        \"Metadata\" : {\n          \"aws:cdk:path\" : \"LiveStreaming/MediaLiveRole/Resource\"\n        }\n      },\n      \"mediaLivePolicyA0AA0DF7\" : {\n        \"Type\" : \"AWS::IAM::Policy\",\n        \"Properties\" : {\n          \"PolicyDocument\" : {\n            \"Statement\" : [ {\n              \"Action\" : [ \"mediastore:DeleteObject\", \"mediastore:DescribeObject\", \"mediastore:GetObject\", \"mediastore:ListItems\", \"mediastore:PutObject\" ],\n              \"Effect\" : \"Allow\",\n              \"Resource\" : {\n                \"Fn::Join\" : [ \"\", [ \"arn:\", {\n                  \"Ref\" : \"AWS::Partition\"\n                }, \":mediastore:\", {\n                  \"Ref\" : \"AWS::Region\"\n                }, \":\", {\n                  \"Ref\" : \"AWS::AccountId\"\n                }, \":*\" ] ]\n              }\n            }, {\n              \"Action\" : [ \"ssm:DescribeParameters\", \"ssm:GetParameter\", \"ssm:GetParameters\", \"ssm:PutParameter\" ],\n              \"Effect\" : \"Allow\",\n              \"Resource\" : {\n                \"Fn::Join\" : [ \"\", [ \"arn:\", {\n                  \"Ref\" : \"AWS::Partition\"\n                }, \":ssm:\", {\n                  \"Ref\" : \"AWS::Region\"\n                }, \":\", {\n                  \"Ref\" : \"AWS::AccountId\"\n                }, \":parameter/*\" ] ]\n              }\n            } ],\n            \"Version\" : \"2012-10-17\"\n          },\n          \"PolicyName\" : \"mediaLivePolicyA0AA0DF7\",\n          \"Roles\" : [ {\n            \"Ref\" : \"MediaLiveRole1149D189\"\n          } ]\n        },\n        \"Metadata\" : {\n          \"aws:cdk:path\" : \"LiveStreaming/mediaLivePolicy/Resource\"\n        }\n      },\n      \"CustomResourceServiceRoleE774390D\" : {\n        \"Type\" : \"AWS::IAM::Role\",\n        \"Properties\" : {\n          \"AssumeRolePolicyDocument\" : {\n            \"Statement\" : [ {\n              \"Action\" : \"sts:AssumeRole\",\n              \"Effect\" : \"Allow\",\n              \"Principal\" : {\n                \"Service\" : \"lambda.amazonaws.com\"\n              }\n            } ],\n            \"Version\" : \"2012-10-17\"\n          },\n          \"ManagedPolicyArns\" : [ {\n            \"Fn::Join\" : [ \"\", [ \"arn:\", {\n              \"Ref\" : \"AWS::Partition\"\n            }, \":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole\" ] ]\n          } ]\n        },\n        \"Metadata\" : {\n          \"aws:cdk:path\" : \"LiveStreaming/CustomResource/ServiceRole/Resource\"\n        }\n      },\n      \"CustomResourceServiceRoleDefaultPolicy62213138\" : {\n        \"Type\" : \"AWS::IAM::Policy\",\n        \"Properties\" : {\n          \"PolicyDocument\" : {\n            \"Statement\" : [ {\n              \"Action\" : [ \"medialive:DescribeInputSecurityGroup\", \"medialive:createInputSecurityGroup\", \"medialive:describeInput\", \"medialive:createInput\", \"medialive:deleteInput\", \"medialive:stopChannel\", \"medialive:createChannel\", \"medialive:deleteChannel\", \"medialive:deleteInputSecurityGroup\", \"medialive:describeChannel\", \"medialive:startChannel\", \"medialive:tagResource\" ],\n              \"Effect\" : \"Allow\",\n              \"Resource\" : {\n                \"Fn::Join\" : [ \"\", [ \"arn:\", {\n                  \"Ref\" : \"AWS::Partition\"\n                }, \":medialive:\", {\n                  \"Ref\" : \"AWS::Region\"\n                }, \":\", {\n                  \"Ref\" : \"AWS::AccountId\"\n                }, \":*\" ] ]\n              }\n            }, {\n              \"Action\" : \"ssm:PutParameter\",\n              \"Effect\" : \"Allow\",\n              \"Resource\" : {\n                \"Fn::Join\" : [ \"\", [ \"arn:\", {\n                  \"Ref\" : \"AWS::Partition\"\n                }, \":ssm:\", {\n                  \"Ref\" : \"AWS::Region\"\n                }, \":\", {\n                  \"Ref\" : \"AWS::AccountId\"\n                }, \":parameter/*\" ] ]\n              }\n            }, {\n              \"Action\" : \"iam:PassRole\",\n              \"Effect\" : \"Allow\",\n              \"Resource\" : {\n                \"Fn::GetAtt\" : [ \"MediaLiveRole1149D189\", \"Arn\" ]\n              }\n            } ],\n            \"Version\" : \"2012-10-17\"\n          },\n          \"PolicyName\" : \"CustomResourceServiceRoleDefaultPolicy62213138\",\n          \"Roles\" : [ {\n            \"Ref\" : \"CustomResourceServiceRoleE774390D\"\n          } ]\n        },\n        \"Metadata\" : {\n          \"aws:cdk:path\" : \"LiveStreaming/CustomResource/ServiceRole/DefaultPolicy/Resource\"\n        }\n      },\n      \"CustomResource8CDCD7A7\" : {\n        \"Type\" : \"AWS::Lambda::Function\",\n        \"Properties\" : {\n          \"Code\" : {\n            \"S3Bucket\" : {\n              \"Fn::Sub\" : \"solutions-${AWS::Region}\"\n            },\n            \"S3Key\" : \"live-streaming-on-aws-with-mediastore/v1.2.0/asset3421bcdd1cd4d21cd28cf599699ae0f2fb3b1878c2434614a1994fb970722e73.zip\"\n          },\n          \"Handler\" : \"index.handler\",\n          \"Role\" : {\n            \"Fn::GetAtt\" : [ \"CustomResourceServiceRoleE774390D\", \"Arn\" ]\n          },\n          \"Runtime\" : \"nodejs12.x\",\n          \"Description\" : \"CFN Custom resource to copy assets to S3 and get the MediaConvert endpoint\",\n          \"Timeout\" : 30\n        },\n        \"DependsOn\" : [ \"CustomResourceServiceRoleDefaultPolicy62213138\", \"CustomResourceServiceRoleE774390D\" ],\n        \"Metadata\" : {\n          \"cfn_nag\" : {\n            \"rules_to_suppress\" : [ {\n              \"id\" : \"W58\",\n              \"reason\" : \"Invalid warning: function has access to cloudwatch\"\n            } ]\n          }\n        }\n      },\n      \"MediaLiveInput\" : {\n        \"Type\" : \"AWS::CloudFormation::CustomResource\",\n        \"Properties\" : {\n          \"ServiceToken\" : {\n            \"Fn::GetAtt\" : [ \"CustomResource8CDCD7A7\", \"Arn\" ]\n          },\n          \"StreamName\" : {\n            \"Ref\" : \"AWS::StackName\"\n          },\n          \"Type\" : {\n            \"Ref\" : \"InputType\"\n          },\n          \"InputDeviceId\" : {\n            \"Ref\" : \"InputDeviceId\"\n          },\n          \"Cidr\" : {\n            \"Ref\" : \"InputCIDR\"\n          },\n          \"PullUrl\" : {\n            \"Ref\" : \"PullUrl\"\n          },\n          \"PullUser\" : {\n            \"Ref\" : \"PullUser\"\n          },\n          \"PullPass\" : {\n            \"Ref\" : \"PullPass\"\n          }\n        },\n        \"UpdateReplacePolicy\" : \"Delete\",\n        \"DeletionPolicy\" : \"Delete\",\n        \"Metadata\" : {\n          \"aws:cdk:path\" : \"LiveStreaming/MediaLiveInput/Default\"\n        }\n      },\n      \"MediaLiveChannel\" : {\n        \"Type\" : \"AWS::CloudFormation::CustomResource\",\n        \"Properties\" : {\n          \"ServiceToken\" : {\n            \"Fn::GetAtt\" : [ \"CustomResource8CDCD7A7\", \"Arn\" ]\n          },\n          \"StreamName\" : {\n            \"Ref\" : \"AWS::StackName\"\n          },\n          \"EncodingProfile\" : {\n            \"Ref\" : \"EncodingProfile\"\n          },\n          \"Codec\" : \"AVC\",\n          \"Role\" : {\n            \"Fn::GetAtt\" : [ \"MediaLiveRole1149D189\", \"Arn\" ]\n          },\n          \"InputId\" : {\n            \"Fn::GetAtt\" : [ \"MediaLiveInput\", \"Id\" ]\n          },\n          \"Type\" : {\n            \"Ref\" : \"InputType\"\n          },\n          \"MediaStoreEndpoint\" : {\n            \"Fn::GetAtt\" : [ \"CloudFrontToMediaStoreMediaStoreContainer2EAAC53A\", \"Endpoint\" ]\n          }\n        },\n        \"UpdateReplacePolicy\" : \"Delete\",\n        \"DeletionPolicy\" : \"Delete\",\n        \"Metadata\" : {\n          \"aws:cdk:path\" : \"LiveStreaming/MediaLiveChannel/Default\"\n        }\n      },\n      \"MediaLiveChannelStart\" : {\n        \"Type\" : \"AWS::CloudFormation::CustomResource\",\n        \"Properties\" : {\n          \"ServiceToken\" : {\n            \"Fn::GetAtt\" : [ \"CustomResource8CDCD7A7\", \"Arn\" ]\n          },\n          \"ChannelId\" : {\n            \"Fn::GetAtt\" : [ \"MediaLiveChannel\", \"ChannelId\" ]\n          },\n          \"ChannelStart\" : {\n            \"Ref\" : \"ChannelStart\"\n          }\n        },\n        \"DependsOn\" : [ \"CloudFrontToMediaStoreCloudFrontDistribution36D55136\" ],\n        \"UpdateReplacePolicy\" : \"Delete\",\n        \"DeletionPolicy\" : \"Delete\",\n        \"Metadata\" : {\n          \"aws:cdk:path\" : \"LiveStreaming/MediaLiveChannelStart/Default\"\n        }\n      },\n      \"UUID\" : {\n        \"Type\" : \"AWS::CloudFormation::CustomResource\",\n        \"Properties\" : {\n          \"ServiceToken\" : {\n            \"Fn::GetAtt\" : [ \"CustomResource8CDCD7A7\", \"Arn\" ]\n          }\n        },\n        \"UpdateReplacePolicy\" : \"Delete\",\n        \"DeletionPolicy\" : \"Delete\",\n        \"Metadata\" : {\n          \"aws:cdk:path\" : \"LiveStreaming/UUID/Default\"\n        }\n      },\n      \"AnonymousMetric\" : {\n        \"Type\" : \"AWS::CloudFormation::CustomResource\",\n        \"Properties\" : {\n          \"ServiceToken\" : {\n            \"Fn::GetAtt\" : [ \"CustomResource8CDCD7A7\", \"Arn\" ]\n          },\n          \"SolutionId\" : \"SO0109\",\n          \"UUID\" : {\n            \"Fn::GetAtt\" : [ \"UUID\", \"UUID\" ]\n          },\n          \"Version\" : \"v1.2.0\",\n          \"Type\" : {\n            \"Ref\" : \"InputType\"\n          },\n          \"Cidr\" : {\n            \"Ref\" : \"InputCIDR\"\n          },\n          \"EncodingProfile\" : {\n            \"Ref\" : \"EncodingProfile\"\n          },\n          \"ChannelStart\" : {\n            \"Ref\" : \"ChannelStart\"\n          },\n          \"SendAnonymousMetric\" : {\n            \"Fn::FindInMap\" : [ \"AnonymousData\", \"SendAnonymousData\", \"Data\" ]\n          }\n        },\n        \"UpdateReplacePolicy\" : \"Delete\",\n        \"DeletionPolicy\" : \"Delete\",\n        \"Metadata\" : {\n          \"aws:cdk:path\" : \"LiveStreaming/AnonymousMetric/Default\"\n        }\n      },\n      \"Dashboard9E4231ED\" : {\n        \"Type\" : \"AWS::CloudWatch::Dashboard\",\n        \"Properties\" : {\n          \"DashboardBody\" : {\n            \"Fn::Join\" : [ \"\", [ \"{\\\"widgets\\\":[{\\\"type\\\":\\\"text\\\",\\\"width\\\":24,\\\"height\\\":2,\\\"x\\\":0,\\\"y\\\":0,\\\"properties\\\":{\\\"markdown\\\":\\\"\\\\nThis dashboard monitors the CloudWatch Logs for the MediaStore container and shows data points for                     both ingress and egress operations while the live stream is running. This dashboard monitors the CloudWatch                     Logs for the MediaStore container and shows data points for both ingress and egress operations while the live stream is running.                     An IAM Role is required to allow MediaStore to write to CloudWatch Logs. If you do not see any data points on this dashboard, please follow                     [these instructions to create the Role](https://docs.aws.amazon.com/mediastore/latest/ug/monitoring-cloudwatch-permissions.html).\\\\n\\\"}},{\\\"type\\\":\\\"log\\\",\\\"width\\\":12,\\\"height\\\":6,\\\"x\\\":0,\\\"y\\\":2,\\\"properties\\\":{\\\"view\\\":\\\"timeSeries\\\",\\\"title\\\":\\\"Ingress Transaction Per Minute\\\",\\\"region\\\":\\\"\", {\n              \"Ref\" : \"AWS::Region\"\n            }, \"\\\",\\\"query\\\":\\\"SOURCE '/aws/mediastore/\", {\n              \"Ref\" : \"AWS::StackName\"\n            }, \"' | fields @message\\\\n| filter (Path like \\\\\\\"/stream/index\\\\\\\") and (Operation=\\\\\\\"PutObject\\\\\\\")\\\\n| stats count(*) as TPM by bin(1m)\\\",\\\"stacked\\\":false}},{\\\"type\\\":\\\"log\\\",\\\"width\\\":12,\\\"height\\\":6,\\\"x\\\":12,\\\"y\\\":2,\\\"properties\\\":{\\\"view\\\":\\\"timeSeries\\\",\\\"title\\\":\\\"Egress Transaction Per Minute\\\",\\\"region\\\":\\\"\", {\n              \"Ref\" : \"AWS::Region\"\n            }, \"\\\",\\\"query\\\":\\\"SOURCE '/aws/mediastore/\", {\n              \"Ref\" : \"AWS::StackName\"\n            }, \"' | fields @message\\\\n| filter (Path like \\\\\\\"/stream/index\\\\\\\") and (Operation=\\\\\\\"GetObject\\\\\\\")\\\\n| stats count(*) as TPM by bin(1m)\\\",\\\"stacked\\\":false}},{\\\"type\\\":\\\"log\\\",\\\"width\\\":12,\\\"height\\\":6,\\\"x\\\":0,\\\"y\\\":8,\\\"properties\\\":{\\\"view\\\":\\\"timeSeries\\\",\\\"title\\\":\\\"Ingress PutObject Latencies (Successful Requests)\\\",\\\"region\\\":\\\"\", {\n              \"Ref\" : \"AWS::Region\"\n            }, \"\\\",\\\"query\\\":\\\"SOURCE '/aws/mediastore/\", {\n              \"Ref\" : \"AWS::StackName\"\n            }, \"' | filter HTTPStatus like /2\\\\\\\\d{2}/ and Operation=\\\\\\\"PutObject\\\\\\\" | stats avg(TurnAroundTime), avg(TotalTime), percentile(TurnAroundTime, 99), percentile(TotalTime, 99) by bin(1m)\\\",\\\"stacked\\\":false}},{\\\"type\\\":\\\"log\\\",\\\"width\\\":12,\\\"height\\\":6,\\\"x\\\":12,\\\"y\\\":8,\\\"properties\\\":{\\\"view\\\":\\\"timeSeries\\\",\\\"title\\\":\\\"Egress GetObject Latencies (Successful Requests)\\\",\\\"region\\\":\\\"\", {\n              \"Ref\" : \"AWS::Region\"\n            }, \"\\\",\\\"query\\\":\\\"SOURCE '/aws/mediastore/\", {\n              \"Ref\" : \"AWS::StackName\"\n            }, \"' | filter HTTPStatus like /2\\\\\\\\d{2}/ and Operation=\\\\\\\"GetObject\\\\\\\" | stats avg(TurnAroundTime), avg(TotalTime), percentile(TurnAroundTime, 99), percentile(TotalTime, 99) by bin(1m)\\\",\\\"stacked\\\":false}},{\\\"type\\\":\\\"log\\\",\\\"width\\\":12,\\\"height\\\":6,\\\"x\\\":0,\\\"y\\\":14,\\\"properties\\\":{\\\"view\\\":\\\"table\\\",\\\"title\\\":\\\"Ingress 2xx Status Count by Operation\\\",\\\"region\\\":\\\"\", {\n              \"Ref\" : \"AWS::Region\"\n            }, \"\\\",\\\"query\\\":\\\"SOURCE '/aws/mediastore/\", {\n              \"Ref\" : \"AWS::StackName\"\n            }, \"' | filter (Path like \\\\\\\"/stream/index\\\\\\\") | filter HTTPStatus like /2\\\\\\\\d{2}/ \\\\n| filter Operation = \\\\\\\"PutObject\\\\\\\" or Operation=\\\\\\\"DeleteObject\\\\\\\"\\\\n| stats count() as '2xx Count' by Operation | sort '2xx Count' desc\\\"}},{\\\"type\\\":\\\"log\\\",\\\"width\\\":12,\\\"height\\\":6,\\\"x\\\":12,\\\"y\\\":14,\\\"properties\\\":{\\\"view\\\":\\\"table\\\",\\\"title\\\":\\\"Egress 2xx Status Count by Operation\\\",\\\"region\\\":\\\"\", {\n              \"Ref\" : \"AWS::Region\"\n            }, \"\\\",\\\"query\\\":\\\"SOURCE '/aws/mediastore/\", {\n              \"Ref\" : \"AWS::StackName\"\n            }, \"' | filter (Path like \\\\\\\"/stream/index\\\\\\\") | filter HTTPStatus like /2\\\\\\\\d{2}/ \\\\n| filter Operation = \\\\\\\"GetObject\\\\\\\" \\\\n| stats count() as '2xx Count' by Operation | sort '2xx Count' desc\\\"}},{\\\"type\\\":\\\"log\\\",\\\"width\\\":6,\\\"height\\\":6,\\\"x\\\":0,\\\"y\\\":20,\\\"properties\\\":{\\\"view\\\":\\\"table\\\",\\\"title\\\":\\\"Ingress 4xx Status Count\\\",\\\"region\\\":\\\"\", {\n              \"Ref\" : \"AWS::Region\"\n            }, \"\\\",\\\"query\\\":\\\"SOURCE '/aws/mediastore/\", {\n              \"Ref\" : \"AWS::StackName\"\n            }, \"' | filter (Path like \\\\\\\"/stream/index\\\\\\\")\\\\n| filter HTTPStatus like /4\\\\\\\\d{2}/ \\\\n| filter Operation = \\\\\\\"PutObject\\\\\\\"\\\\n| stats count() as '4xx Count' by Operation\\\"}},{\\\"type\\\":\\\"log\\\",\\\"width\\\":6,\\\"height\\\":6,\\\"x\\\":6,\\\"y\\\":20,\\\"properties\\\":{\\\"view\\\":\\\"table\\\",\\\"title\\\":\\\"Ingress 5xx Status Count\\\",\\\"region\\\":\\\"\", {\n              \"Ref\" : \"AWS::Region\"\n            }, \"\\\",\\\"query\\\":\\\"SOURCE '/aws/mediastore/\", {\n              \"Ref\" : \"AWS::StackName\"\n            }, \"' | filter (Path like \\\\\\\"/stream/index\\\\\\\")\\\\n| filter HTTPStatus like /5\\\\\\\\d{2}/ \\\\n| filter Operation = \\\\\\\"PutObject\\\\\\\"\\\\n| stats count() as '5xx Count' by Operation\\\"}},{\\\"type\\\":\\\"log\\\",\\\"width\\\":6,\\\"height\\\":6,\\\"x\\\":12,\\\"y\\\":20,\\\"properties\\\":{\\\"view\\\":\\\"table\\\",\\\"title\\\":\\\"Egress 4xx Status Count\\\",\\\"region\\\":\\\"\", {\n              \"Ref\" : \"AWS::Region\"\n            }, \"\\\",\\\"query\\\":\\\"SOURCE '/aws/mediastore/\", {\n              \"Ref\" : \"AWS::StackName\"\n            }, \"' | filter (Path like \\\\\\\"/stream/index\\\\\\\")\\\\n| filter HTTPStatus like /4\\\\\\\\d{2}/ \\\\n| filter Operation = \\\\\\\"GetObject\\\\\\\"\\\\n| stats count() as '4xx Count' by Operation\\\"}},{\\\"type\\\":\\\"log\\\",\\\"width\\\":6,\\\"height\\\":6,\\\"x\\\":18,\\\"y\\\":20,\\\"properties\\\":{\\\"view\\\":\\\"table\\\",\\\"title\\\":\\\"Egress 5xx Status Count\\\",\\\"region\\\":\\\"\", {\n              \"Ref\" : \"AWS::Region\"\n            }, \"\\\",\\\"query\\\":\\\"SOURCE '/aws/mediastore/\", {\n              \"Ref\" : \"AWS::StackName\"\n            }, \"' | filter (Path like \\\\\\\"/stream/index\\\\\\\")\\\\n| filter HTTPStatus like /5\\\\\\\\d{2}/ \\\\n| filter Operation = \\\\\\\"GetObject\\\\\\\"\\\\n| stats count() as '5xx Count' by Operation\\\"}}]}\" ] ]\n          },\n          \"DashboardName\" : {\n            \"Fn::Join\" : [ \"\", [ {\n              \"Ref\" : \"AWS::StackName\"\n            }, \"-\", {\n              \"Ref\" : \"AWS::Region\"\n            } ] ]\n          }\n        },\n        \"Metadata\" : {\n          \"aws:cdk:path\" : \"LiveStreaming/Dashboard/Resource\"\n        }\n      },\n      \"CDKMetadata\" : {\n        \"Type\" : \"AWS::CDK::Metadata\",\n        \"Properties\" : {\n          \"Modules\" : \"aws-cdk=1.73.0,@aws-cdk/assets=1.77.0,@aws-cdk/aws-apigateway=1.77.0,@aws-cdk/aws-applicationautoscaling=1.77.0,@aws-cdk/aws-autoscaling-common=1.77.0,@aws-cdk/aws-certificatemanager=1.77.0,@aws-cdk/aws-cloudfront=1.77.0,@aws-cdk/aws-cloudfront-origins=1.77.0,@aws-cdk/aws-cloudwatch=1.77.0,@aws-cdk/aws-codeguruprofiler=1.77.0,@aws-cdk/aws-cognito=1.77.0,@aws-cdk/aws-dynamodb=1.77.0,@aws-cdk/aws-ec2=1.77.0,@aws-cdk/aws-ecr=1.77.0,@aws-cdk/aws-ecr-assets=1.77.0,@aws-cdk/aws-elasticsearch=1.77.0,@aws-cdk/aws-events=1.77.0,@aws-cdk/aws-iam=1.77.0,@aws-cdk/aws-kinesis=1.77.0,@aws-cdk/aws-kinesisanalytics=1.77.0,@aws-cdk/aws-kms=1.77.0,@aws-cdk/aws-lambda=1.77.0,@aws-cdk/aws-lambda-event-sources=1.77.0,@aws-cdk/aws-logs=1.77.0,@aws-cdk/aws-mediastore=1.77.0,@aws-cdk/aws-s3=1.77.0,@aws-cdk/aws-s3-assets=1.77.0,@aws-cdk/aws-s3-notifications=1.77.0,@aws-cdk/aws-sagemaker=1.77.0,@aws-cdk/aws-sam=1.77.0,@aws-cdk/aws-secretsmanager=1.77.0,@aws-cdk/aws-sns=1.77.0,@aws-cdk/aws-sns-subscriptions=1.77.0,@aws-cdk/aws-sqs=1.77.0,@aws-cdk/aws-ssm=1.77.0,@aws-cdk/aws-stepfunctions=1.77.0,@aws-cdk/cloud-assembly-schema=1.77.0,@aws-cdk/core=1.77.0,@aws-cdk/custom-resources=1.77.0,@aws-cdk/cx-api=1.77.0,@aws-cdk/region-info=1.77.0,@aws-solutions-constructs/aws-cloudfront-mediastore=1.77.0,@aws-solutions-constructs/core=1.77.0,jsii-runtime=node.js/v12.16.1\"\n        },\n        \"Metadata\" : {\n          \"aws:cdk:path\" : \"LiveStreaming/CDKMetadata/Default\"\n        },\n        \"Condition\" : \"CDKMetadataAvailable\"\n      }\n    },\n    \"Outputs\" : {\n      \"LiveStreamUrl\" : {\n        \"Description\" : \"CloudFront Live Stream URL\",\n        \"Value\" : {\n          \"Fn::Join\" : [ \"\", [ \"https://\", {\n            \"Fn::GetAtt\" : [ \"CloudFrontToMediaStoreCloudFrontDistribution36D55136\", \"DomainName\" ]\n          }, \"/stream/index.m3u8\" ] ]\n        },\n        \"Export\" : {\n          \"Name\" : {\n            \"Fn::Join\" : [ \"\", [ {\n              \"Ref\" : \"AWS::StackName\"\n            }, \"-LiveStreamUrl\" ] ]\n          }\n        }\n      },\n      \"MediaLiveConsole\" : {\n        \"Description\" : \"MediaLive Channel\",\n        \"Value\" : {\n          \"Fn::Join\" : [ \"\", [ \"https://\", {\n            \"Ref\" : \"AWS::Region\"\n          }, \".console.aws.amazon.com/medialive/home?region=\", {\n            \"Ref\" : \"AWS::Region\"\n          }, \"#!/channels\" ] ]\n        },\n        \"Export\" : {\n          \"Name\" : {\n            \"Fn::Join\" : [ \"\", [ {\n              \"Ref\" : \"AWS::StackName\"\n            }, \"-MediaLiveConsole\" ] ]\n          }\n        }\n      },\n      \"MediaStoreConsole\" : {\n        \"Description\" : \"MediaStore Container\",\n        \"Value\" : {\n          \"Fn::Join\" : [ \"\", [ \"https://\", {\n            \"Ref\" : \"AWS::Region\"\n          }, \".console.aws.amazon.com/mediastore/home/containers/\" ] ]\n        },\n        \"Export\" : {\n          \"Name\" : {\n            \"Fn::Join\" : [ \"\", [ {\n              \"Ref\" : \"AWS::StackName\"\n            }, \"-MediaStoreConsole\" ] ]\n          }\n        }\n      },\n      \"CloudWatchDashboard\" : {\n        \"Description\" : \"CloudWatch Dashboard for MediaStore Ingress and Egress\",\n        \"Value\" : {\n          \"Fn::Join\" : [ \"\", [ \"https://\", {\n            \"Ref\" : \"AWS::Region\"\n          }, \".console.aws.amazon.com/cloudwatch/home?region=\", {\n            \"Ref\" : \"AWS::Region\"\n          }, \"#dashboards:name=\", {\n            \"Ref\" : \"AWS::StackName\"\n          }, \"-MediaStore-Live-Streaming\" ] ]\n        },\n        \"Export\" : {\n          \"Name\" : {\n            \"Fn::Join\" : [ \"\", [ {\n              \"Ref\" : \"AWS::StackName\"\n            }, \"-CloudWatchDashboard\" ] ]\n          }\n        }\n      },\n      \"MediaLivePushEndpoint\" : {\n        \"Description\" : \"The MediaLive Input ingress endpoint for push input types\",\n        \"Value\" : {\n          \"Fn::GetAtt\" : [ \"MediaLiveInput\", \"EndPoint\" ]\n        },\n        \"Export\" : {\n          \"Name\" : {\n            \"Fn::Join\" : [ \"\", [ {\n              \"Ref\" : \"AWS::StackName\"\n            }, \"-MediaLiveEndpoint\" ] ]\n          }\n        }\n      }\n    },\n    \"Conditions\" : {\n      \"CDKMetadataAvailable\" : {\n        \"Fn::Or\" : [ {\n          \"Fn::Or\" : [ {\n            \"Fn::Equals\" : [ {\n              \"Ref\" : \"AWS::Region\"\n            }, \"ap-east-1\" ]\n          }, {\n            \"Fn::Equals\" : [ {\n              \"Ref\" : \"AWS::Region\"\n            }, \"ap-northeast-1\" ]\n          }, {\n            \"Fn::Equals\" : [ {\n              \"Ref\" : \"AWS::Region\"\n            }, \"ap-northeast-2\" ]\n          }, {\n            \"Fn::Equals\" : [ {\n              \"Ref\" : \"AWS::Region\"\n            }, \"ap-south-1\" ]\n          }, {\n            \"Fn::Equals\" : [ {\n              \"Ref\" : \"AWS::Region\"\n            }, \"ap-southeast-1\" ]\n          }, {\n            \"Fn::Equals\" : [ {\n              \"Ref\" : \"AWS::Region\"\n            }, \"ap-southeast-2\" ]\n          }, {\n            \"Fn::Equals\" : [ {\n              \"Ref\" : \"AWS::Region\"\n            }, \"ca-central-1\" ]\n          }, {\n            \"Fn::Equals\" : [ {\n              \"Ref\" : \"AWS::Region\"\n            }, \"cn-north-1\" ]\n          }, {\n            \"Fn::Equals\" : [ {\n              \"Ref\" : \"AWS::Region\"\n            }, \"cn-northwest-1\" ]\n          }, {\n            \"Fn::Equals\" : [ {\n              \"Ref\" : \"AWS::Region\"\n            }, \"eu-central-1\" ]\n          } ]\n        }, {\n          \"Fn::Or\" : [ {\n            \"Fn::Equals\" : [ {\n              \"Ref\" : \"AWS::Region\"\n            }, \"eu-north-1\" ]\n          }, {\n            \"Fn::Equals\" : [ {\n              \"Ref\" : \"AWS::Region\"\n            }, \"eu-west-1\" ]\n          }, {\n            \"Fn::Equals\" : [ {\n              \"Ref\" : \"AWS::Region\"\n            }, \"eu-west-2\" ]\n          }, {\n            \"Fn::Equals\" : [ {\n              \"Ref\" : \"AWS::Region\"\n            }, \"eu-west-3\" ]\n          }, {\n            \"Fn::Equals\" : [ {\n              \"Ref\" : \"AWS::Region\"\n            }, \"me-south-1\" ]\n          }, {\n            \"Fn::Equals\" : [ {\n              \"Ref\" : \"AWS::Region\"\n            }, \"sa-east-1\" ]\n          }, {\n            \"Fn::Equals\" : [ {\n              \"Ref\" : \"AWS::Region\"\n            }, \"us-east-1\" ]\n          }, {\n            \"Fn::Equals\" : [ {\n              \"Ref\" : \"AWS::Region\"\n            }, \"us-east-2\" ]\n          }, {\n            \"Fn::Equals\" : [ {\n              \"Ref\" : \"AWS::Region\"\n            }, \"us-west-1\" ]\n          }, {\n            \"Fn::Equals\" : [ {\n              \"Ref\" : \"AWS::Region\"\n            }, \"us-west-2\" ]\n          } ]\n        } ]\n      }\n    }\n  }\n}",
  "CreatedDate": "2021-07-01T21:21:19.04Z",
  "DisplayName": null,
  "DocumentFormat": {
    "Value": "JSON"
  },
  "DocumentType": {
    "Value": "CloudFormation"
  },
  "DocumentVersion": "1",
  "Name": "AWSSolutions-LiveStreamingOnAWS",
  "Requires": [],
  "ReviewStatus": null,
  "Status": {
    "Value": "Active"
  },
  "StatusInformation": null,
  "VersionName": null,
  "ResponseMetadata": {
    "RequestId": "7f4e2d6c-dff9-4086-8bde-4b667e07bf0a",
    "Metadata": {},
    "ChecksumAlgorithm": 0,
    "ChecksumValidationStatus": 0
  },
  "ContentLength": 38870,
  "HttpStatusCode": 200,
  "LoggedAt": "2022-06-17T07:13:18.5830066+00:00"
}
