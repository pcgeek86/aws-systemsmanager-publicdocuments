{
  "AttachmentsContent": [],
  "Content": "{\n  \"schemaVersion\" : \"0.3\",\n  \"description\" : \"### Document name - AWSConfigRemediation-RotateSecret\\n\\n## What does this document do?\\nThis document attempts to rotate a secret stored in AWS Secrets Manager by making the [RotateSecret](https://docs.aws.amazon.com/secretsmanager/latest/apireference/API_RotateSecret.html) API.\\n\\nMore information:\\n[RotatingSecrets](https://docs.aws.amazon.com/secretsmanager/latest/userguide/rotating-secrets.html)\\n[RotateSecretPermissionsRequired](https://docs.aws.amazon.com/secretsmanager/latest/userguide/rotating-secrets-required-permissions.html)\\n\\n## Input Parameters\\n* AutomationAssumeRole: (Required) The ARN of the role that allows Automation to perform the actions on your behalf.\\n* SecretId: (Required) The Amazon Resource Name (ARN) of the secret.\\n* RotationLambdaArn: (Required) The ARN of the AWS Lambda function that can rotate the secret.\\n* RotationInterval: (Required) Specifies the number of days between automatic scheduled rotations of the secret. Must be a value between 1 and 365 days.\\n\\n## Output Parameters\\n* RotateSecret.Output: The standard HTTP response from the RotateSecret API.\\n\",\n  \"assumeRole\" : \"{{ AutomationAssumeRole }}\",\n  \"parameters\" : {\n    \"AutomationAssumeRole\" : {\n      \"type\" : \"String\",\n      \"description\" : \"(Required) The ARN of the role that allows Automation to perform the actions on your behalf.\",\n      \"allowedPattern\" : \"^arn:(aws[a-zA-Z-]*)?:iam::\\\\d{12}:role/[\\\\w+=,.@/-]+$\"\n    },\n    \"SecretId\" : {\n      \"type\" : \"String\",\n      \"description\" : \"(Required) The Amazon Resource Name (ARN) of the secret.\",\n      \"allowedPattern\" : \"(arn:(aws[a-zA-Z-]*)?:secretsmanager:)?([a-z]{2}(-gov)?-[a-z]+-\\\\d{1}:)?(\\\\d{12}:)?(secret:)?([\\\\w/+=.@-]+)?\"\n    },\n    \"RotationLambdaArn\" : {\n      \"type\" : \"String\",\n      \"description\" : \"(Required) The ARN of the AWS Lambda function that can rotate the secret.\",\n      \"allowedPattern\" : \"^arn:(aws[a-zA-Z-]*)?:lambda:[a-z0-9-]*:\\\\d{12}:function:[\\\\w-]+\"\n    },\n    \"RotationInterval\" : {\n      \"type\" : \"Integer\",\n      \"description\" : \"(Required) Specifies the number of days between automatic scheduled rotations of the secret. Must be a value between 1 and 365 days.\",\n      \"allowedPattern\" : \"^[0]?[1-9][0-9]?$|^1[0-9][0-9]$|^2[0-9][0-9]$|^3[0-5][0-9]$|^36[0-5]$\"\n    }\n  },\n  \"outputs\" : [ \"RotateSecret.Output\" ],\n  \"mainSteps\" : [ {\n    \"name\" : \"RotateSecret\",\n    \"action\" : \"aws:executeAwsApi\",\n    \"description\" : \"## RotateSecret\\nRotates a secret with a specified value of days.\\n## Outputs\\n* Output: The standard HTTP response from the RotateSecret API.\\n\",\n    \"timeoutSeconds\" : 600,\n    \"isEnd\" : false,\n    \"inputs\" : {\n      \"Service\" : \"secretsmanager\",\n      \"Api\" : \"RotateSecret\",\n      \"SecretId\" : \"{{ SecretId }}\",\n      \"RotationLambdaARN\" : \"{{ RotationLambdaArn }}\",\n      \"RotationRules\" : {\n        \"AutomaticallyAfterDays\" : \"{{ RotationInterval }}\"\n      }\n    },\n    \"outputs\" : [ {\n      \"Name\" : \"Output\",\n      \"Selector\" : \"$\",\n      \"Type\" : \"StringMap\"\n    } ]\n  }, {\n    \"name\" : \"VerifyRotateSecret\",\n    \"action\" : \"aws:executeScript\",\n    \"timeoutSeconds\" : 600,\n    \"isEnd\" : true,\n    \"description\" : \"## VerifyRotateSecret\\nVerifies the secret has a rotation enabled of the specified value.\\n\",\n    \"inputs\" : {\n      \"Runtime\" : \"python3.7\",\n      \"Handler\" : \"handler\",\n      \"InputPayload\" : {\n        \"SecretId\" : \"{{ SecretId }}\",\n        \"RotationInterval\" : \"{{ RotationInterval }}\",\n        \"RotationLambdaArn\" : \"{{ RotationLambdaArn }}\"\n      },\n      \"Script\" : \"import boto3\\n\\ndef handler(event,context):\\n    secret_id = event[\\\"SecretId\\\"]\\n    rotation_interval = event[\\\"RotationInterval\\\"]\\n    rotation_lambda = event[\\\"RotationLambdaArn\\\"]\\n\\n    secrets_manager_client = boto3.client(\\\"secretsmanager\\\")\\n    response = secrets_manager_client.describe_secret(SecretId=secret_id)\\n    configured_interval = response[\\\"RotationRules\\\"][\\\"AutomaticallyAfterDays\\\"]\\n    configured_lambda = response[\\\"RotationLambdaARN\\\"]\\n    if response[\\\"RotationEnabled\\\"] and configured_interval == rotation_interval and configured_lambda == rotation_lambda:\\n        return {\\n            \\\"Message\\\": \\\"Verification of RotateSecret is successful.\\\",\\n            \\\"HTTPResponse\\\": response[\\\"ResponseMetadata\\\"]\\n        }\\n    raise Exception(\\\"VERIFICATION OF ROTATE SECRET FAILED.\\\")\"\n    },\n    \"outputs\" : [ {\n      \"Name\" : \"Output\",\n      \"Selector\" : \"$\",\n      \"Type\" : \"StringMap\"\n    } ]\n  } ]\n}",
  "CreatedDate": "2021-01-28T16:07:24.441Z",
  "DisplayName": null,
  "DocumentFormat": {
    "Value": "JSON"
  },
  "DocumentType": {
    "Value": "Automation"
  },
  "DocumentVersion": "1",
  "Name": "AWSConfigRemediation-RotateSecret",
  "Requires": [],
  "ReviewStatus": null,
  "Status": {
    "Value": "Active"
  },
  "StatusInformation": null,
  "VersionName": null,
  "ResponseMetadata": {
    "RequestId": "2a5eea6d-bdbe-4278-a407-503b691c8121",
    "Metadata": {},
    "ChecksumAlgorithm": 0,
    "ChecksumValidationStatus": 0
  },
  "ContentLength": 5051,
  "HttpStatusCode": 200,
  "LoggedAt": "2022-07-16T07:11:56.8628376+00:00"
}
