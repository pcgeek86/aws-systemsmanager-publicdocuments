{
  "AttachmentsContent": [],
  "Content": "{\n  \"schemaVersion\" : \"0.3\",\n  \"description\" : \"Upgrade and patch minor version of an instance(Windows/Linux) attached to any load balancer (classic load balancer/ALB/NLB).  It will use the default connection draintime to wait before patching the instance. You can override the wait time by entering into ConnectionDrainTime in minutes(1-59).\",\n  \"parameters\" : {\n    \"InstanceId\" : {\n      \"type\" : \"String\",\n      \"description\" : \"(Required) ID of the Instance to patch.\",\n      \"allowedPattern\" : \"^i-[a-z0-9]{8,17}$\"\n    },\n    \"ConnectionDrainTime\" : {\n      \"type\" : \"String\",\n      \"description\" : \"(Optional) Override load balancer's connection drain time in Minutes(1-59).\",\n      \"allowedPattern\" : \"^([1-5][0-9]|[1-9]||null|empty)$\",\n      \"default\" : \"\"\n    }\n  },\n  \"mainSteps\" : [ {\n    \"name\" : \"assertSSMAgentOnline\",\n    \"action\" : \"aws:assertAwsResourceProperty\",\n    \"maxAttempts\" : 3,\n    \"timeoutSeconds\" : 300,\n    \"onFailure\" : \"Abort\",\n    \"inputs\" : {\n      \"Service\" : \"ssm\",\n      \"Api\" : \"DescribeInstanceInformation\",\n      \"InstanceInformationFilterList\" : [ {\n        \"key\" : \"InstanceIds\",\n        \"valueSet\" : [ \"{{ InstanceId }}\" ]\n      } ],\n      \"PropertySelector\" : \"$.InstanceInformationList[0].PingStatus\",\n      \"DesiredValues\" : [ \"Online\" ]\n    },\n    \"isCritical\" : \"true\",\n    \"nextStep\" : \"deployChangeStateLambda\"\n  }, {\n    \"name\" : \"deployChangeStateLambda\",\n    \"action\" : \"aws:createStack\",\n    \"inputs\" : {\n      \"StackName\" : \"lb-instance-change-lambda-cfn-stack-{{automation:EXECUTION_ID}}\",\n      \"TemplateURL\" : \"https://s3.us-west-2.amazonaws.com/aws.portingassistant.dotnet.datastore/cf_launch_lambda_for_rotating_instance.yaml\",\n      \"Parameters\" : [ {\n        \"ParameterValue\" : \"lb-instance-change-lambda-{{automation:EXECUTION_ID}}\",\n        \"ParameterKey\" : \"FunctionName\"\n      } ],\n      \"Capabilities\" : [ \"CAPABILITY_IAM\" ]\n    },\n    \"onFailure\" : \"Abort\"\n  }, {\n    \"name\" : \"invokeLambdaToDeregister\",\n    \"action\" : \"aws:invokeLambdaFunction\",\n    \"inputs\" : {\n      \"FunctionName\" : \"lb-instance-change-lambda-{{automation:EXECUTION_ID}}\",\n      \"Payload\" : \"{\\\"instance_id\\\": \\\"{{InstanceId}}\\\", \\\"drain_time\\\": \\\"{{ConnectionDrainTime}}\\\", \\\"to_remove\\\": true}\"\n    },\n    \"outputs\" : [ {\n      \"Name\" : \"PayLoad\",\n      \"Selector\" : \"$.PayLoad\",\n      \"Type\" : \"StringMap\"\n    }, {\n      \"Name\" : \"TimeToDrain\",\n      \"Selector\" : \"$.max_drain_time\",\n      \"Type\" : \"String\"\n    }, {\n      \"Name\" : \"LambdaError\",\n      \"Selector\" : \"$.is_error\",\n      \"Type\" : \"String\"\n    }, {\n      \"Name\" : \"TargetGroupArns\",\n      \"Selector\" : \"$.target_group_details\",\n      \"Type\" : \"MapList\"\n    }, {\n      \"Name\" : \"ClassicELBNames\",\n      \"Selector\" : \"$.elb_names\",\n      \"Type\" : \"StringList\"\n    } ],\n    \"maxAttempts\" : 1,\n    \"onFailure\" : \"step:deleteStack\",\n    \"isCritical\" : \"true\"\n  }, {\n    \"name\" : \"branchToSleepForPatchingOrAddBackInstance\",\n    \"action\" : \"aws:branch\",\n    \"onFailure\" : \"step:deleteStack\",\n    \"inputs\" : {\n      \"Choices\" : [ {\n        \"NextStep\" : \"registerInstanceToElbAndTargetGroup\",\n        \"Variable\" : \"{{ invokeLambdaToDeregister.LambdaError }}\",\n        \"StringEquals\" : \"true\"\n      } ],\n      \"Default\" : \"SleepForConnectionDraining\"\n    },\n    \"isCritical\" : \"true\"\n  }, {\n    \"name\" : \"SleepForConnectionDraining\",\n    \"action\" : \"aws:sleep\",\n    \"inputs\" : {\n      \"Duration\" : \"{{invokeLambdaToDeregister.TimeToDrain}}\"\n    },\n    \"onFailure\" : \"step:deleteStack\",\n    \"nextStep\" : \"installMissingOSUpdates\"\n  }, {\n    \"name\" : \"installMissingOSUpdates\",\n    \"action\" : \"aws:runCommand\",\n    \"maxAttempts\" : 1,\n    \"onFailure\" : \"Continue\",\n    \"inputs\" : {\n      \"DocumentName\" : \"AWS-RunPatchBaseline\",\n      \"InstanceIds\" : [ \"{{ InstanceId }}\" ],\n      \"Parameters\" : {\n        \"Operation\" : \"Install\"\n      }\n    },\n    \"nextStep\" : \"SleepToCompleteInstall\"\n  }, {\n    \"name\" : \"SleepToCompleteInstall\",\n    \"action\" : \"aws:sleep\",\n    \"inputs\" : {\n      \"Duration\" : \"PT2M\"\n    },\n    \"nextStep\" : \"registerInstanceToElbAndTargetGroup\"\n  }, {\n    \"name\" : \"registerInstanceToElbAndTargetGroup\",\n    \"action\" : \"aws:invokeLambdaFunction\",\n    \"inputs\" : {\n      \"FunctionName\" : \"lb-instance-change-lambda-{{automation:EXECUTION_ID}}\",\n      \"Payload\" : \"{\\\"instance_id\\\": \\\"{{InstanceId}}\\\", \\\"lb_map\\\": {{invokeLambdaToDeregister.Payload}}, \\\"to_remove\\\": false}\"\n    },\n    \"outputs\" : [ {\n      \"Name\" : \"Status\",\n      \"Selector\" : \"$.status\",\n      \"Type\" : \"String\"\n    } ],\n    \"maxAttempts\" : 3,\n    \"onFailure\" : \"step:deleteStack\",\n    \"isCritical\" : \"true\"\n  }, {\n    \"name\" : \"waitForInstanceToBeRegistered\",\n    \"action\" : \"aws:sleep\",\n    \"inputs\" : {\n      \"Duration\" : \"PT1M\"\n    }\n  }, {\n    \"name\" : \"deleteStack\",\n    \"action\" : \"aws:deleteStack\",\n    \"maxAttempts\" : 3,\n    \"inputs\" : {\n      \"StackName\" : \"lb-instance-change-lambda-cfn-stack-{{automation:EXECUTION_ID}}\"\n    },\n    \"isEnd\" : true\n  } ],\n  \"outputs\" : [ \"registerInstanceToElbAndTargetGroup.Status\", \"invokeLambdaToDeregister.LambdaError\", \"invokeLambdaToDeregister.TargetGroupArns\", \"invokeLambdaToDeregister.ClassicELBNames\" ]\n}",
  "CreatedDate": "2022-05-25T18:03:27.777Z",
  "DisplayName": null,
  "DocumentFormat": {
    "Value": "JSON"
  },
  "DocumentType": {
    "Value": "Automation"
  },
  "DocumentVersion": "1",
  "Name": "AWSEC2-PatchLoadBalancerInstance",
  "Requires": [],
  "ReviewStatus": null,
  "Status": {
    "Value": "Active"
  },
  "StatusInformation": null,
  "VersionName": null,
  "ResponseMetadata": {
    "RequestId": "45464e6c-7abd-4702-819a-b922ac11c622",
    "Metadata": {},
    "ChecksumAlgorithm": 0,
    "ChecksumValidationStatus": 0
  },
  "ContentLength": 5924,
  "HttpStatusCode": 200,
  "LoggedAt": "2023-02-20T07:12:34.3754436+00:00"
}
