{
  "AttachmentsContent": [],
  "Content": "{\n  \"schemaVersion\": \"0.3\",\n  \"description\": \"AWSSupport-TerminateIPMonitoringFromVPC terminates an IP monitoring test previously started by AWSSupport-SetupIPMonitoringFromVPC. Data related to the specified test ID will be deleted.\",\n  \"assumeRole\": \"{{ AutomationAssumeRole }}\",\n  \"parameters\": {\n    \"AutomationExecutionId\": {\n      \"type\": \"String\",\n      \"description\": \"(Required) AWSSupport-SetupIPMonitoringFromVPC automation execution ID of the test you want to terminate.\"\n    },\n    \"SubnetId\": {\n      \"type\": \"String\",\n      \"description\": \"(Required) The subnet ID for the monitor instance.\",\n      \"allowedPattern\": \"^subnet-[a-z0-9]{8,17}$\"\n    },\n    \"InstanceId\": {\n      \"type\": \"String\",\n      \"description\": \"(Required) The instance ID for the monitor instance.\",\n      \"allowedPattern\": \"^i-[a-z0-9]{8,17}$\"\n    },\n    \"AutomationAssumeRole\": {\n      \"type\": \"AWS::IAM::Role::Arn\",\n      \"description\": \"(Optional) The Amazon Resource Name (ARN) of the AWS Identity and Access Management (IAM) role that allows Systems Manager Automation to perform the actions on your behalf. If no role is specified, Systems Manager Automation uses the permissions of the user that starts this runbook.\",\n      \"default\": \"\"\n    }\n  },\n  \"mainSteps\": [\n    {\n      \"name\": \"assertInstanceIdIsAssociatedToTest\",\n      \"description\": \"Checks AutomationExecutionId and InstanceId are related to the same test\",\n      \"action\": \"aws:assertAwsResourceProperty\",\n      \"onFailure\": \"Abort\",\n      \"inputs\": {\n        \"Service\": \"ec2\",\n        \"Api\": \"DescribeTags\",\n        \"Filters\": [\n          {\n            \"Name\": \"tag:AutomationExecutionId\",\n            \"Values\": [\n              \"{{ AutomationExecutionId }}\"\n            ]\n          }\n        ],\n        \"PropertySelector\": \"$.Tags[0].ResourceId\",\n        \"DesiredValues\": [\n          \"{{ InstanceId }}\"\n        ]\n      },\n      \"isCritical\": \"true\",\n      \"nextStep\": \"assertSubnetIdIsAssociatedToTest\"\n    },\n    {\n      \"name\": \"assertSubnetIdIsAssociatedToTest\",\n      \"description\": \"Checks SubnetId and InstanceId are related to the same test\",\n      \"action\": \"aws:assertAwsResourceProperty\",\n      \"onFailure\": \"Abort\",\n      \"inputs\": {\n        \"Service\": \"ec2\",\n        \"Api\": \"DescribeInstances\",\n        \"InstanceIds\": [\n          \"{{ InstanceId }}\"\n        ],\n        \"PropertySelector\": \"$.Reservations[0].Instances[0].SubnetId\",\n        \"DesiredValues\": [\n          \"{{ SubnetId }}\"\n        ]\n      },\n      \"isCritical\": \"true\",\n      \"nextStep\": \"describeTestSecurityGroup\"\n    },\n    {\n      \"name\": \"describeTestSecurityGroup\",\n      \"description\": \"Retrieves the test security group\",\n      \"action\": \"aws:executeAwsApi\",\n      \"onFailure\": \"Continue\",\n      \"inputs\": {\n        \"Service\": \"ec2\",\n        \"Api\": \"DescribeSecurityGroups\",\n        \"Filters\": [\n          {\n            \"Name\": \"group-name\",\n            \"Values\": [\n              \"SetupIPMonitoringFromVPC_{{ AutomationExecutionId }}\"\n            ]\n          }\n        ]\n      },\n      \"outputs\": [\n        {\n          \"Name\": \"GroupId\",\n          \"Selector\": \"$.SecurityGroups[0].GroupId\"\n        }\n      ],\n      \"isCritical\": \"true\",\n      \"nextStep\": \"deleteDashboard\"\n    },\n    {\n      \"name\": \"deleteDashboard\",\n      \"description\": \"Deletes the CloudWatch dashboard\",\n      \"action\": \"aws:executeAwsApi\",\n      \"onFailure\": \"Continue\",\n      \"inputs\": {\n        \"Service\": \"cloudwatch\",\n        \"Api\": \"DeleteDashboards\",\n        \"DashboardNames\": [\n          \"{{ SubnetId }}_{{ InstanceId }}\"\n        ]\n      },\n      \"isCritical\": \"true\",\n      \"nextStep\": \"terminateInstance\"\n    },\n    {\n      \"name\": \"terminateInstance\",\n      \"description\": \"Terminates the test instance\",\n      \"action\": \"aws:changeInstanceState\",\n      \"onFailure\": \"Continue\",\n      \"inputs\": {\n        \"InstanceIds\": [\n          \"{{ InstanceId }}\"\n        ],\n        \"CheckStateOnly\": false,\n        \"DesiredState\": \"terminated\"\n      },\n      \"isCritical\": \"true\",\n      \"nextStep\": \"removeIAMRoleFromInstanceProfile\"\n    },\n    {\n      \"name\": \"removeIAMRoleFromInstanceProfile\",\n      \"description\": \"Removes the IAM instance profile from the role\",\n      \"action\": \"aws:executeAwsApi\",\n      \"onFailure\": \"Continue\",\n      \"inputs\": {\n        \"Service\": \"iam\",\n        \"Api\": \"RemoveRoleFromInstanceProfile\",\n        \"RoleName\": \"SetupIPMonitoringFromVPC_{{ AutomationExecutionId }}\",\n        \"InstanceProfileName\": \"SetupIPMonitoringFromVPC_{{ AutomationExecutionId }}\"\n      },\n      \"isCritical\": \"true\",\n      \"nextStep\": \"deleteIAMInstanceProfile\"\n    },\n    {\n      \"name\": \"deleteIAMInstanceProfile\",\n      \"description\": \"Deletes the IAM instance profile created by the automation\",\n      \"action\": \"aws:executeAwsApi\",\n      \"onFailure\": \"Continue\",\n      \"inputs\": {\n        \"Service\": \"iam\",\n        \"Api\": \"DeleteInstanceProfile\",\n        \"InstanceProfileName\": \"SetupIPMonitoringFromVPC_{{ AutomationExecutionId }}\"\n      },\n      \"isCritical\": \"true\",\n      \"nextStep\": \"removeCloudWatchInlinePolicyFromEC2Role\"\n    },\n    {\n      \"name\": \"removeCloudWatchInlinePolicyFromEC2Role\",\n      \"description\": \"Deletes the CloudWatch inline policy from the role created by the automation\",\n      \"action\": \"aws:executeAwsApi\",\n      \"onFailure\": \"Continue\",\n      \"inputs\": {\n        \"Service\": \"iam\",\n        \"Api\": \"DeleteRolePolicy\",\n        \"RoleName\": \"SetupIPMonitoringFromVPC_{{ AutomationExecutionId }}\",\n        \"PolicyName\": \"SetupIPMonitoringFromVPC_CWPermissions\"\n      },\n      \"isCritical\": \"true\",\n      \"nextStep\": \"detachSSMManagedPolicyFromEC2Role\"\n    },\n    {\n      \"name\": \"detachSSMManagedPolicyFromEC2Role\",\n      \"description\": \"Detaches the AmazonSSMManagedInstanceCore managed policy from the role created by the automation\",\n      \"action\": \"aws:executeAwsApi\",\n      \"onFailure\": \"Continue\",\n      \"inputs\": {\n        \"Service\": \"iam\",\n        \"Api\": \"DetachRolePolicy\",\n        \"PolicyArn\": \"arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore\",\n        \"RoleName\": \"SetupIPMonitoringFromVPC_{{ AutomationExecutionId }}\"\n      },\n      \"isCritical\": \"true\",\n      \"nextStep\": \"deleteEC2Role\"\n    },\n    {\n      \"name\": \"deleteEC2Role\",\n      \"description\": \"Deletes the IAM role created by the automation\",\n      \"action\": \"aws:executeAwsApi\",\n      \"onFailure\": \"Continue\",\n      \"inputs\": {\n        \"Service\": \"iam\",\n        \"Api\": \"DeleteRole\",\n        \"RoleName\": \"SetupIPMonitoringFromVPC_{{ AutomationExecutionId }}\"\n      },\n      \"isCritical\": \"true\",\n      \"nextStep\": \"deleteSecurityGroup\"\n    },\n    {\n      \"name\": \"deleteSecurityGroup\",\n      \"description\": \"Deletes the security group created by the automation, if it exists.\",\n      \"action\": \"aws:executeAwsApi\",\n      \"onFailure\": \"Continue\",\n      \"inputs\": {\n        \"Service\": \"ec2\",\n        \"Api\": \"DeleteSecurityGroup\",\n        \"GroupId\": \"{{ describeTestSecurityGroup.GroupId }}\"\n      },\n      \"isCritical\": \"true\",\n      \"isEnd\": \"true\"\n    }\n  ]\n}",
  "CreatedDate": "2023-02-01T09:21:46.684Z",
  "DisplayName": null,
  "DocumentFormat": {
    "Value": "JSON"
  },
  "DocumentType": {
    "Value": "Automation"
  },
  "DocumentVersion": "3",
  "Name": "AWSSupport-TerminateIPMonitoringFromVPC",
  "Requires": [],
  "ReviewStatus": null,
  "Status": {
    "Value": "Active"
  },
  "StatusInformation": null,
  "VersionName": null,
  "ResponseMetadata": {
    "RequestId": "513e5097-bc43-4c7a-90ae-3755301b66e4",
    "Metadata": {},
    "ChecksumAlgorithm": 0,
    "ChecksumValidationStatus": 0
  },
  "ContentLength": 7918,
  "HttpStatusCode": 200,
  "LoggedAt": "2023-02-18T07:11:33.6113152+00:00"
}
