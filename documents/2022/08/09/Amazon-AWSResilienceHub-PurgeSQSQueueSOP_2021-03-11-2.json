{
  "AttachmentsContent": [],
  "Content": "{\n  \"description\" : \"## Id\\nAWSResilienceHub-PurgeSQSQueueSOP_2021-03-11\\n\\n## Intent\\nCleans up the given queue\\n\\n## Type\\nSOP\\n\\n## Risk\\nHigh\\n\\n## Requirements:\\n  * SQS Queue\\n\\n## Permissions required for AutomationAssumeRole\\n  * sqs:PurgeQueue\\n\\n## Cancellation behavior\\nFail\\n\\n## Inputs\\n### (Required) AutomationAssumeRole\\n  * type: String\\n  * description: ARN of the IAM role with permissions listed above\\n\\n### (Required) QueueUrl\\n  * type: String\\n  * description: The URL of the SQS Queue\\n\\n## Details\\nThe document purges the queue using API and waits one minute for purge to complete\\n\\n## Steps executed in normal flow\\n  * RecordStartTime\\n  * PurgeQueue\\n  * SleepUntilCompletionOfPurgeQueue\\n  * OutputRecoveryTime\\n\\n## Outputs\\n### OutputRecoveryTime.RecoveryTime\\n  * type: Integer\\n  * description: SOP execution time in seconds\",\n  \"schemaVersion\" : \"0.3\",\n  \"assumeRole\" : \"{{AutomationAssumeRole}}\",\n  \"parameters\" : {\n    \"QueueUrl\" : {\n      \"type\" : \"String\",\n      \"description\" : \"(Required) The URL of the SQS Queue\"\n    },\n    \"AutomationAssumeRole\" : {\n      \"type\" : \"String\",\n      \"description\" : \"(Required) The ARN of the role that allows Automation to perform the actions on your behalf.\"\n    }\n  },\n  \"outputs\" : [ \"OutputRecoveryTime.RecoveryTime\" ],\n  \"mainSteps\" : [ {\n    \"name\" : \"RecordStartTime\",\n    \"description\" : \"Start recording execution time\",\n    \"action\" : \"aws:executeScript\",\n    \"outputs\" : [ {\n      \"Name\" : \"StartTime\",\n      \"Selector\" : \"$.Payload\",\n      \"Type\" : \"String\"\n    } ],\n    \"inputs\" : {\n      \"Runtime\" : \"python3.8\",\n      \"Handler\" : \"start_time\",\n      \"Script\" : \"import boto3\\nimport logging\\nfrom datetime import datetime, timezone\\nimport time\\n\\nfrom botocore.exceptions import ClientError\\nfrom dateutil import parser\\n\\nlogger = logging.getLogger()\\nlogger.setLevel(logging.INFO)\\n\\n\\n\\ndef start_time(events, context):\\n    return datetime.now(timezone.utc).isoformat()\"\n    }\n  }, {\n    \"name\" : \"PurgeQueue\",\n    \"description\" : \"Call SQS API to purge SQS queue\",\n    \"action\" : \"aws:executeAwsApi\",\n    \"maxAttempts\" : 3,\n    \"inputs\" : {\n      \"Service\" : \"sqs\",\n      \"Api\" : \"PurgeQueue\",\n      \"QueueUrl\" : \"{{QueueUrl}}\"\n    }\n  }, {\n    \"name\" : \"SleepUntilCompletionOfPurgeQueue\",\n    \"description\" : \"Sleep as the message deletion process takes up to 60 seconds\",\n    \"action\" : \"aws:sleep\",\n    \"inputs\" : {\n      \"Duration\" : \"PT60S\"\n    }\n  }, {\n    \"name\" : \"OutputRecoveryTime\",\n    \"description\" : \"Calculate execution time\",\n    \"action\" : \"aws:executeScript\",\n    \"outputs\" : [ {\n      \"Name\" : \"RecoveryTime\",\n      \"Selector\" : \"$.Payload\",\n      \"Type\" : \"Integer\"\n    } ],\n    \"inputs\" : {\n      \"Runtime\" : \"python3.8\",\n      \"Handler\" : \"recovery_time\",\n      \"Script\" : \"import boto3\\nimport logging\\nfrom datetime import datetime, timezone\\nimport time\\n\\nfrom botocore.exceptions import ClientError\\nfrom dateutil import parser\\n\\nlogger = logging.getLogger()\\nlogger.setLevel(logging.INFO)\\n\\n\\n\\ndef recovery_time(events, context):\\n    return (datetime.now(timezone.utc) - parser.parse(events['StartTime'])).seconds\",\n      \"InputPayload\" : {\n        \"StartTime\" : \"{{ RecordStartTime.StartTime }}\"\n      }\n    }\n  } ]\n}",
  "CreatedDate": "2022-04-25T18:43:54.314Z",
  "DisplayName": null,
  "DocumentFormat": {
    "Value": "JSON"
  },
  "DocumentType": {
    "Value": "Automation"
  },
  "DocumentVersion": "2",
  "Name": "AWSResilienceHub-PurgeSQSQueueSOP_2021-03-11",
  "Requires": [],
  "ReviewStatus": null,
  "Status": {
    "Value": "Active"
  },
  "StatusInformation": null,
  "VersionName": null,
  "ResponseMetadata": {
    "RequestId": "816b8c0e-1501-4e1d-9fe1-564bc39f38cd",
    "Metadata": {},
    "ChecksumAlgorithm": 0,
    "ChecksumValidationStatus": 0
  },
  "ContentLength": 3747,
  "HttpStatusCode": 200,
  "LoggedAt": "2022-08-09T07:12:26.4093946+00:00"
}
