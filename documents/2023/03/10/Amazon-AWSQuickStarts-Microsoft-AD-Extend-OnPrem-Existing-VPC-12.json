{
  "AttachmentsContent": [],
  "Content": "{\n  \"schemaVersion\" : \"1.0\",\n  \"description\" : \"This template creates 2 Windows Server instances into private subnets in separate Availability Zones inside a VPC. After extending your on-premises network to the VPC, you can promote the Windows Server instances to Domain Controllers in your AD forest. Or optionally you can choose to have automation join and promote them to an existing domain. **WARNING** This template creates Amazon EC2 Windows instance and related resources. You will be billed for the AWS resources used if you create a stack from this template. (qs-1qup6radg)\",\n  \"templateBody\" : {\n    \"AWSTemplateFormatVersion\" : \"2010-09-09\",\n    \"Description\" : \"This template creates 2 Windows Server instances into private subnets in separate Availability Zones inside a VPC. After extending your on-premises network to the VPC, you can promote the Windows Server instances to Domain Controllers in your AD forest. Or optionally you can choose to have automation join and promote them to an existing domain. **WARNING** This template creates Amazon EC2 Windows instance and related resources. You will be billed for the AWS resources used if you create a stack from this template. (qs-1qup6radg)\",\n    \"Metadata\" : {\n      \"cfn-lint\" : {\n        \"config\" : {\n          \"ignore_checks\" : [ \"W9006\", \"E9101\" ]\n        }\n      },\n      \"QuickStartDocumentation\" : {\n        \"EntrypointName\" : \"Parameters for extending on-premises AD into an existing VPC\",\n        \"Order\" : \"4\"\n      },\n      \"AWS::CloudFormation::Interface\" : {\n        \"ParameterGroups\" : [ {\n          \"Label\" : {\n            \"default\" : \"Network configuration\"\n          },\n          \"Parameters\" : [ \"VPCCIDR\", \"VPCID\", \"Subnet1ID\", \"Subnet2ID\", \"ExistingDomainControllersSG\" ]\n        }, {\n          \"Label\" : {\n            \"default\" : \"Amazon EC2 configuration\"\n          },\n          \"Parameters\" : [ \"ADServerInstanceType\", \"ADServer1NetBIOSName\", \"ADServer1PrivateIP\", \"ADServer2NetBIOSName\", \"ADServer2PrivateIP\", \"DataDriveSizeGiB\", \"EbsEncryptionKmsKeyId\", \"EnableAdvancedAudtingandMetrics\", \"KeyPairName\", \"LatestAmiId\" ]\n        }, {\n          \"Label\" : {\n            \"default\" : \"Microsoft Active Directory Domain Services configuration\"\n          },\n          \"Parameters\" : [ \"JoinAndPromote\", \"AdministratorSecret\", \"RestoreModeSecret\", \"ExistingDomainController1IP\", \"ExistingDomainController2IP\", \"DomainDNSName\", \"DomainNetBIOSName\", \"SetupAppInsightsMonitoring\", \"AppInsightsApplicationName\" ]\n        }, {\n          \"Label\" : {\n            \"default\" : \"AWS Quick Start configuration\"\n          },\n          \"Parameters\" : [ \"QSS3BucketName\", \"QSS3BucketRegion\", \"QSS3KeyPrefix\" ]\n        } ],\n        \"ParameterLabels\" : {\n          \"ADServer1NetBIOSName\" : {\n            \"default\" : \"Domain Controller 1 NetBIOS Name\"\n          },\n          \"ADServer1PrivateIP\" : {\n            \"default\" : \"Domain Controller 1 Private IP Address\"\n          },\n          \"ADServer2NetBIOSName\" : {\n            \"default\" : \"Domain Controller 2 NetBIOS Name\"\n          },\n          \"ADServer2PrivateIP\" : {\n            \"default\" : \"Domain Controller 2 Private IP Address\"\n          },\n          \"ADServerInstanceType\" : {\n            \"default\" : \"Domain Controllers Instance Type\"\n          },\n          \"AdministratorSecret\" : {\n            \"default\" : \"Secret ARN Containing Administrator Credentials\"\n          },\n          \"AppInsightsApplicationName\" : {\n            \"default\" : \"Registered Application Name\"\n          },\n          \"DataDriveSizeGiB\" : {\n            \"default\" : \"SYSVOL and NTDS Data Drive Size\"\n          },\n          \"DomainDNSName\" : {\n            \"default\" : \"Domain DNS Name\"\n          },\n          \"DomainNetBIOSName\" : {\n            \"default\" : \"Domain NetBIOS Name\"\n          },\n          \"EbsEncryptionKmsKeyId\" : {\n            \"default\" : \"KMS Key for EBS Encryption\"\n          },\n          \"EnableAdvancedAudtingandMetrics\" : {\n            \"default\" : \"Advanced Auditing and Metrics\"\n          },\n          \"ExistingDomainController1IP\" : {\n            \"default\" : \"IP used for DNS (Must be accessible)\"\n          },\n          \"ExistingDomainController2IP\" : {\n            \"default\" : \"IP used for DNS (Must be accessible)\"\n          },\n          \"ExistingDomainControllersSG\" : {\n            \"default\" : \"Exiting Domain Controllers Security Group ID\"\n          },\n          \"JoinAndPromote\" : {\n            \"default\" : \"Join and Promote to Domain Controllers\"\n          },\n          \"KeyPairName\" : {\n            \"default\" : \"Key Pair Name\"\n          },\n          \"LatestAmiId\" : {\n            \"default\" : \"SSM Parameter Value for latest AMI ID\"\n          },\n          \"QSS3BucketName\" : {\n            \"default\" : \"Quick Start S3 Bucket Name\"\n          },\n          \"QSS3BucketRegion\" : {\n            \"default\" : \"Quick Start S3 Bucket Region\"\n          },\n          \"QSS3KeyPrefix\" : {\n            \"default\" : \"Quick Start S3 Key Prefix\"\n          },\n          \"RestoreModeSecret\" : {\n            \"default\" : \"Secret ARN Containing Restore Mode Credentials\"\n          },\n          \"Subnet1ID\" : {\n            \"default\" : \"Subnet 1 ID\"\n          },\n          \"Subnet2ID\" : {\n            \"default\" : \"Subnet 2 ID\"\n          },\n          \"SetupAppInsightsMonitoring\" : {\n            \"default\" : \"Setup Application Insights Monitoring\"\n          },\n          \"VPCCIDR\" : {\n            \"default\" : \"VPC CIDR\"\n          },\n          \"VPCID\" : {\n            \"default\" : \"VPC ID\"\n          }\n        }\n      }\n    },\n    \"Parameters\" : {\n      \"ADServer1NetBIOSName\" : {\n        \"AllowedPattern\" : \"^[a-zA-Z0-9]+$\",\n        \"Default\" : \"DC3\",\n        \"Description\" : \"NetBIOS name of the first additional Active Directory Domain Controller (up to 15 characters)\",\n        \"MaxLength\" : \"15\",\n        \"MinLength\" : \"1\",\n        \"Type\" : \"String\"\n      },\n      \"ADServer1PrivateIP\" : {\n        \"AllowedPattern\" : \"^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$\",\n        \"Default\" : \"10.0.0.11\",\n        \"Description\" : \"Fixed private IP for the first additional Active Directory Domain Controller located in subnet 1\",\n        \"Type\" : \"String\"\n      },\n      \"ADServer2NetBIOSName\" : {\n        \"AllowedPattern\" : \"^[a-zA-Z0-9]+$\",\n        \"Default\" : \"DC4\",\n        \"Description\" : \"NetBIOS name of the second additional Active Directory Domain Controller (up to 15 characters)\",\n        \"MaxLength\" : \"15\",\n        \"MinLength\" : \"1\",\n        \"Type\" : \"String\"\n      },\n      \"ADServer2PrivateIP\" : {\n        \"AllowedPattern\" : \"^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$\",\n        \"Default\" : \"10.0.32.11\",\n        \"Description\" : \"Fixed private IP for the second additional Active Directory Domain Controller located in subnet 2\",\n        \"Type\" : \"String\"\n      },\n      \"ADServerInstanceType\" : {\n        \"AllowedValues\" : [ \"t3.medium\", \"t3.large\", \"t3.xlarge\", \"t3.2xlarge\", \"m5.large\", \"m5.xlarge\", \"m5.2xlarge\", \"m5.4xlarge\" ],\n        \"Default\" : \"m5.large\",\n        \"Description\" : \"Amazon EC2 instance type for Active Directory Controller instances\",\n        \"Type\" : \"String\"\n      },\n      \"AdministratorSecret\" : {\n        \"AllowedPattern\" : \"(^arn:[^:]+:secretsmanager:[^:]+:\\\\d{12}:secret:[\\\\w\\\\/+=.@-]{1,512})?$\",\n        \"Description\" : \"ARN for the Administrator credentials Secret used to join and promote domain controllers (Only used if JoinAndPromote is Yes)\",\n        \"Type\" : \"String\",\n        \"Default\" : \"\"\n      },\n      \"AppInsightsApplicationName\" : {\n        \"Description\" : \"Application name to be used with AppInsights monitoring\",\n        \"Type\" : \"String\",\n        \"Default\" : \"\",\n        \"MaxLength\" : \"300\",\n        \"AllowedPattern\" : \"^[a-zA-Z0-9\\\\-]*$\"\n      },\n      \"DataDriveSizeGiB\" : {\n        \"Default\" : \"10\",\n        \"Description\" : \"Size of SYSVOL and NTDS data drive in GiB\",\n        \"Type\" : \"Number\",\n        \"MinValue\" : \"1\",\n        \"MaxValue\" : \"16384\"\n      },\n      \"DomainDNSName\" : {\n        \"AllowedPattern\" : \"^([a-zA-Z0-9]+[\\\\.\\\\-])+([a-zA-Z0-9])+$\",\n        \"Default\" : \"example.com\",\n        \"Description\" : \"Fully qualified domain name (FQDN) of the domain you would like to join and promote to e.g. example.com\",\n        \"MaxLength\" : \"64\",\n        \"MinLength\" : \"2\",\n        \"Type\" : \"String\"\n      },\n      \"DomainNetBIOSName\" : {\n        \"AllowedPattern\" : \"^[a-zA-Z0-9]+$\",\n        \"Default\" : \"example\",\n        \"Description\" : \"NetBIOS name of the domain (up to 15 characters) you would like to join and promote to for users of earlier versions of Windows e.g. EXAMPLE\",\n        \"MaxLength\" : \"15\",\n        \"MinLength\" : \"1\",\n        \"Type\" : \"String\"\n      },\n      \"EbsEncryptionKmsKeyId\" : {\n        \"AllowedPattern\" : \"^(arn:[^:]+:kms:[^:]+:\\\\d{12}:(key|alias)\\\\/[\\\\w\\\\-\\\\/]+)$|^(alias\\\\/)?[\\\\w\\\\-\\\\/]+$\",\n        \"Default\" : \"alias/aws/ebs\",\n        \"Description\" : \"The identifier of the AWS KMS key to use for Amazon EBS encryption. You can specify the KMS key using any of the following; Key ID, Key alias, Key ARN, Alias ARN\",\n        \"Type\" : \"String\"\n      },\n      \"EnableAdvancedAudtingandMetrics\" : {\n        \"Description\" : \"Enable advanced auditing and metrics and upload them to CloudWatch using the Amazon Kinesis Agent for Microsoft Windows\",\n        \"AllowedValues\" : [ \"true\", \"false\" ],\n        \"Type\" : \"String\",\n        \"Default\" : \"false\"\n      },\n      \"ExistingDomainController1IP\" : {\n        \"AllowedPattern\" : \"^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$\",\n        \"Default\" : \"10.0.0.10\",\n        \"Description\" : \"IP of DNS server that can resolve domain (Must be accessible)\",\n        \"Type\" : \"String\"\n      },\n      \"ExistingDomainController2IP\" : {\n        \"AllowedPattern\" : \"^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$\",\n        \"Default\" : \"10.0.32.10\",\n        \"Description\" : \"IP of DNS server that can resolve domain (Must be accessible)\",\n        \"Type\" : \"String\"\n      },\n      \"ExistingDomainControllersSG\" : {\n        \"AllowedPattern\" : \"^sg-[a-f0-9]{8}(?:[a-f0-9]{9})?$\",\n        \"Description\" : \"Security Group ID for existing Domain Controllers Security Group. (Only used when JoinAndPromote equals Yes)\",\n        \"Type\" : \"String\",\n        \"Default\" : \"sg-1234567890abcdef0\"\n      },\n      \"JoinAndPromote\" : {\n        \"AllowedValues\" : [ \"Yes\", \"No\" ],\n        \"Default\" : \"No\",\n        \"Description\" : \"Do you want to join and promote these instances to be Active Directory Domain Controllers\",\n        \"Type\" : \"String\"\n      },\n      \"KeyPairName\" : {\n        \"Description\" : \"Public/private key pairs allow you to securely connect to your instance after it launches\",\n        \"Type\" : \"AWS::EC2::KeyPair::KeyName\"\n      },\n      \"LatestAmiId\" : {\n        \"Default\" : \"/aws/service/ami-windows-latest/Windows_Server-2022-English-Full-Base\",\n        \"Description\" : \"Systems Manager parameter value for latest Windows Server AMI\",\n        \"Type\" : \"AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>\"\n      },\n      \"QSS3BucketName\" : {\n        \"AllowedPattern\" : \"^[a-z0-9]+[a-z0-9\\\\.\\\\-]*[a-z0-9]+$\",\n        \"ConstraintDescription\" : \"Quick Start bucket name can include numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen (-).\",\n        \"Default\" : \"aws-quickstart\",\n        \"Description\" : \"S3 bucket name for CA CRL storage. Bucket name can include numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen (-)\",\n        \"Type\" : \"String\"\n      },\n      \"QSS3BucketRegion\" : {\n        \"AllowedPattern\" : \"^[a-z]+\\\\-[a-z\\\\-]+\\\\-[0-9]{1}$\",\n        \"Default\" : \"us-east-1\",\n        \"Description\" : \"The AWS Region where the Quick Start S3 bucket (QSS3BucketName) is hosted. When using your own bucket, you must specify this value\",\n        \"Type\" : \"String\"\n      },\n      \"QSS3KeyPrefix\" : {\n        \"AllowedPattern\" : \"^[a-zA-Z0-9\\\\-\\\\/]+$\",\n        \"ConstraintDescription\" : \"Quick Start key prefix can include numbers, lowercase letters, uppercase letters, hyphens (-), and forward slash (/)\",\n        \"Default\" : \"quickstart-microsoft-activedirectory/\",\n        \"Description\" : \"S3 key prefix for the Quick Start assets. Quick Start key prefix can include numbers, lowercase letters, uppercase letters, hyphens (-), and forward slash (/)\",\n        \"Type\" : \"String\"\n      },\n      \"RestoreModeSecret\" : {\n        \"AllowedPattern\" : \"(^arn:[^:]+:secretsmanager:[^:]+:\\\\d{12}:secret:[\\\\w\\\\/+=.@-]{1,512})?$\",\n        \"Description\" : \"ARN for the Restore Mode credentials Secret used to join and promote domain controllers (Only used if JoinAndPromote is Yes)\",\n        \"Type\" : \"String\",\n        \"Default\" : \"\"\n      },\n      \"Subnet1ID\" : {\n        \"Description\" : \"ID of subnet 1 in Availability Zone 1 (e.g., subnet-a0246dcd)\",\n        \"Type\" : \"AWS::EC2::Subnet::Id\"\n      },\n      \"Subnet2ID\" : {\n        \"Description\" : \"ID of subnet 2 in Availability Zone 2 (e.g., subnet-a0246dcd)\",\n        \"Type\" : \"AWS::EC2::Subnet::Id\"\n      },\n      \"SetupAppInsightsMonitoring\" : {\n        \"AllowedValues\" : [ \"true\", \"false\" ],\n        \"Default\" : \"false\",\n        \"Type\" : \"String\"\n      },\n      \"VPCCIDR\" : {\n        \"AllowedPattern\" : \"^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\\\/(1[6-9]|2[0-8]))$\",\n        \"ConstraintDescription\" : \"CIDR block parameter must be in the form x.x.x.x/16-28\",\n        \"Default\" : \"10.0.0.0/16\",\n        \"Description\" : \"CIDR Block for the VPC\",\n        \"Type\" : \"String\"\n      },\n      \"VPCID\" : {\n        \"Description\" : \"ID of the VPC (e.g., vpc-0343606e)\",\n        \"Type\" : \"AWS::EC2::VPC::Id\"\n      }\n    },\n    \"Rules\" : {\n      \"SubnetsInVPC\" : {\n        \"Assertions\" : [ {\n          \"Assert\" : {\n            \"Fn::EachMemberIn\" : [ {\n              \"Fn::ValueOfAll\" : [ \"AWS::EC2::Subnet::Id\", \"VpcId\" ]\n            }, {\n              \"Fn::RefAll\" : \"AWS::EC2::VPC::Id\"\n            } ]\n          },\n          \"AssertDescription\" : \"All subnets must in the VPC\"\n        } ]\n      },\n      \"SecretValidation\" : {\n        \"RuleCondition\" : {\n          \"Fn::Equals\" : [ {\n            \"Ref\" : \"JoinAndPromote\"\n          }, \"Yes\" ]\n        },\n        \"Assertions\" : [ {\n          \"AssertDescription\" : \"The Administrator Secret must be valid\",\n          \"Assert\" : {\n            \"Fn::Not\" : [ {\n              \"Fn::Equals\" : [ {\n                \"Ref\" : \"AdministratorSecret\"\n              }, \"\" ]\n            } ]\n          }\n        }, {\n          \"AssertDescription\" : \"The Restore Mode Secret must be valid\",\n          \"Assert\" : {\n            \"Fn::Not\" : [ {\n              \"Fn::Equals\" : [ {\n                \"Ref\" : \"RestoreModeSecret\"\n              }, \"\" ]\n            } ]\n          }\n        } ]\n      }\n    },\n    \"Conditions\" : {\n      \"DoJoinAndPromote\" : {\n        \"Fn::Equals\" : [ {\n          \"Ref\" : \"JoinAndPromote\"\n        }, \"Yes\" ]\n      },\n      \"DoNOTJoinAndPromote\" : {\n        \"Fn::Equals\" : [ {\n          \"Ref\" : \"JoinAndPromote\"\n        }, \"No\" ]\n      },\n      \"UsingDefaultBucket\" : {\n        \"Fn::Equals\" : [ {\n          \"Ref\" : \"QSS3BucketName\"\n        }, \"aws-quickstart\" ]\n      },\n      \"AppInsightsEnabled\" : {\n        \"Fn::Equals\" : [ {\n          \"Ref\" : \"SetupAppInsightsMonitoring\"\n        }, \"true\" ]\n      },\n      \"UsingDefaultAppName\" : {\n        \"Fn::Equals\" : [ {\n          \"Ref\" : \"AppInsightsApplicationName\"\n        }, \"\" ]\n      }\n    },\n    \"Resources\" : {\n      \"AWSQuickstartActiveDirectoryDS\" : {\n        \"Condition\" : \"DoNOTJoinAndPromote\",\n        \"Type\" : \"AWS::SSM::Document\",\n        \"Properties\" : {\n          \"DocumentType\" : \"Automation\",\n          \"Tags\" : [ {\n            \"Key\" : \"StackName\",\n            \"Value\" : {\n              \"Ref\" : \"AWS::StackName\"\n            }\n          } ],\n          \"Content\" : {\n            \"schemaVersion\" : \"0.3\",\n            \"description\" : \"Deploy non-promoted domain contollers with SSM Automation\",\n            \"parameters\" : {\n              \"ADServer1NetBIOSName\" : {\n                \"allowedPattern\" : \"^[a-zA-Z0-9]+$\",\n                \"description\" : \"NetBIOS name of the first Active Directory Domain Controller (up to 15 characters)\",\n                \"type\" : \"String\",\n                \"maxChars\" : \"15\",\n                \"minChars\" : \"1\"\n              },\n              \"ADServer2NetBIOSName\" : {\n                \"allowedPattern\" : \"^[a-zA-Z0-9]+$\",\n                \"description\" : \"NetBIOS name of the first Active Directory Domain Controller (up to 15 characters)\",\n                \"type\" : \"String\",\n                \"maxChars\" : \"15\",\n                \"minChars\" : \"1\"\n              },\n              \"DomainDNSName\" : {\n                \"allowedPattern\" : \"^[a-zA-Z0-9]+[a-zA-Z0-9\\\\-]*\\\\.[a-zA-Z0-9]+$\",\n                \"description\" : \"Fully qualified domain name (FQDN) of the domain you would like to join and promote to e.g. example.com\",\n                \"default\" : \"example.com\",\n                \"type\" : \"String\",\n                \"maxChars\" : \"64\",\n                \"minChars\" : \"2\"\n              },\n              \"DomainNetBIOSName\" : {\n                \"allowedPattern\" : \"^[a-zA-Z0-9]+$\",\n                \"description\" : \"NetBIOS name of the domain (up to 15 characters) you would like to join and promote to for users of earlier versions of Windows e.g. EXAMPLE\",\n                \"type\" : \"String\",\n                \"maxChars\" : \"15\",\n                \"minChars\" : \"1\"\n              },\n              \"EnableAdvancedAudtingandMetrics\" : {\n                \"allowedValues\" : [ \"true\", \"false\" ],\n                \"default\" : \"false\",\n                \"description\" : \"Enable advanced auditing and metrics\",\n                \"type\" : \"String\"\n              },\n              \"ExistingDomainController1IP\" : {\n                \"allowedPattern\" : \"^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$\",\n                \"description\" : \"IP of DNS server that can resolve domain (Must be accessible)\",\n                \"type\" : \"String\"\n              },\n              \"ExistingDomainController2IP\" : {\n                \"allowedPattern\" : \"^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$\",\n                \"description\" : \"IP of DNS server that can resolve domain (Must be accessible)\",\n                \"type\" : \"String\"\n              },\n              \"QSS3BucketName\" : {\n                \"allowedPattern\" : \"^[a-z0-9]+[a-z0-9\\\\.\\\\-]*[a-z0-9]+$\",\n                \"default\" : \"aws-quickstart\",\n                \"description\" : \"S3 bucket name for the Quick Start assets. Quick Start bucket name can include numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen (-)\",\n                \"type\" : \"String\"\n              },\n              \"QSS3BucketRegion\" : {\n                \"allowedPattern\" : \"^[a-z]+\\\\-[a-z\\\\-]+\\\\-[0-9]{1}$\",\n                \"default\" : \"us-east-1\",\n                \"description\" : \"The AWS Region where the Quick Start S3 bucket (QSS3BucketName) is hosted. When using your own bucket, you must specify this value\",\n                \"type\" : \"String\"\n              },\n              \"QSS3KeyPrefix\" : {\n                \"allowedPattern\" : \"^[a-zA-Z0-9\\\\-\\\\/]+$\",\n                \"default\" : \"quickstart-microsoft-activedirectory/\",\n                \"description\" : \"S3 key prefix for the Quick Start assets. Quick Start key prefix can include numbers, lowercase letters, uppercase letters, hyphens (-), and forward slash (/)\",\n                \"type\" : \"String\"\n              },\n              \"StackName\" : {\n                \"allowedPattern\" : \"^[a-zA-Z][A-Za-z0-9\\\\-]+$\",\n                \"description\" : \"Stack Name Input for cfn resource signal\",\n                \"maxChars\" : \"128\",\n                \"minChars\" : \"1\",\n                \"type\" : \"String\"\n              },\n              \"URLSuffix\" : {\n                \"allowedPattern\" : \"^[a-zA-Z0-9\\\\-\\\\.]+$\",\n                \"default\" : \"amazonaws.com\",\n                \"description\" : \"AWS URL suffix\",\n                \"type\" : \"String\"\n              },\n              \"VPCCIDR\" : {\n                \"allowedPattern\" : \"^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\\\/(1[6-9]|2[0-8]))$\",\n                \"description\" : \"CIDR Block for the VPC\",\n                \"type\" : \"String\"\n              }\n            },\n            \"mainSteps\" : [ {\n              \"name\" : \"dcsInstanceIds\",\n              \"action\" : \"aws:executeAwsApi\",\n              \"onFailure\" : \"step:signalfailure\",\n              \"inputs\" : {\n                \"Service\" : \"ec2\",\n                \"Api\" : \"DescribeInstances\",\n                \"Filters\" : [ {\n                  \"Name\" : \"tag:Name\",\n                  \"Values\" : [ \"{{ADServer1NetBIOSName}}\", \"{{ADServer2NetBIOSName}}\" ]\n                }, {\n                  \"Name\" : \"tag:aws:cloudformation:stack-name\",\n                  \"Values\" : [ \"{{StackName}}\" ]\n                }, {\n                  \"Name\" : \"instance-state-name\",\n                  \"Values\" : [ \"running\" ]\n                } ]\n              },\n              \"outputs\" : [ {\n                \"Name\" : \"InstanceIds\",\n                \"Selector\" : \"$.Reservations..Instances..InstanceId\",\n                \"Type\" : \"StringList\"\n              } ],\n              \"nextStep\" : \"dc1InstanceId\"\n            }, {\n              \"name\" : \"dc1InstanceId\",\n              \"action\" : \"aws:executeAwsApi\",\n              \"onFailure\" : \"step:signalfailure\",\n              \"inputs\" : {\n                \"Service\" : \"ec2\",\n                \"Api\" : \"DescribeInstances\",\n                \"Filters\" : [ {\n                  \"Name\" : \"tag:Name\",\n                  \"Values\" : [ \"{{ADServer1NetBIOSName}}\" ]\n                }, {\n                  \"Name\" : \"tag:aws:cloudformation:stack-name\",\n                  \"Values\" : [ \"{{StackName}}\" ]\n                }, {\n                  \"Name\" : \"instance-state-name\",\n                  \"Values\" : [ \"running\" ]\n                } ]\n              },\n              \"outputs\" : [ {\n                \"Name\" : \"InstanceId\",\n                \"Selector\" : \"$.Reservations[0].Instances[0].InstanceId\",\n                \"Type\" : \"String\"\n              } ],\n              \"nextStep\" : \"dc2InstanceId\"\n            }, {\n              \"name\" : \"dc2InstanceId\",\n              \"action\" : \"aws:executeAwsApi\",\n              \"onFailure\" : \"step:signalfailure\",\n              \"inputs\" : {\n                \"Service\" : \"ec2\",\n                \"Api\" : \"DescribeInstances\",\n                \"Filters\" : [ {\n                  \"Name\" : \"tag:Name\",\n                  \"Values\" : [ \"{{ADServer2NetBIOSName}}\" ]\n                }, {\n                  \"Name\" : \"tag:aws:cloudformation:stack-name\",\n                  \"Values\" : [ \"{{StackName}}\" ]\n                }, {\n                  \"Name\" : \"instance-state-name\",\n                  \"Values\" : [ \"running\" ]\n                } ]\n              },\n              \"outputs\" : [ {\n                \"Name\" : \"InstanceId\",\n                \"Selector\" : \"$.Reservations[0].Instances[0].InstanceId\",\n                \"Type\" : \"String\"\n              } ],\n              \"nextStep\" : \"intializeInstance\"\n            }, {\n              \"name\" : \"intializeInstance\",\n              \"action\" : \"aws:runCommand\",\n              \"inputs\" : {\n                \"DocumentName\" : \"AWS-RunPowerShellScript\",\n                \"InstanceIds\" : [ \"{{dcsInstanceIds.InstanceIds}}\" ],\n                \"Parameters\" : {\n                  \"commands\" : \"[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12\\n\\n$S3BucketName = '{{QSS3BucketName}}'\\n$S3KeyPrefix = '{{QSS3KeyPrefix}}'\\n$S3BucketRegion = '{{QSS3BucketRegion}}'\\n\\n$CustomModules = @(\\n    'Module-AD.psd1',\\n    'Module-AD.psm1'\\n)\\n\\n$Modules = @(\\n    @{\\n        Name = 'NetworkingDsc'\\n        Version = '8.2.0'\\n    },\\n    @{\\n        Name = 'ActiveDirectoryDsc'\\n        Version = '6.0.1'\\n    },\\n    @{\\n        Name = 'ComputerManagementDsc'\\n        Version = '8.5.0'\\n    },\\n    @{\\n        Name = 'DnsServerDsc'\\n        Version = '3.0.0'\\n    },\\n    @{\\n        Name = 'AuditPolicyDsc'\\n        Version = '1.4.0.0'\\n    }\\n)\\n\\nWrite-Output 'Creating AWSQuickstart Directory'\\nTry {\\n    $Null = New-Item -Path 'C:\\\\AWSQuickstart\\\\Module-AD' -ItemType 'Directory' -ErrorAction Stop\\n} Catch [System.Exception] {\\n    Write-Output \\\"Failed to create AWSQuickstart directory $_\\\"\\n    Exit 1\\n}\\n\\n$S3KeyPrefix = $S3KeyPrefix.Substring(0,$S3KeyPrefix.Length -1)\\nWrite-Output 'Downloading AD PowerShell Module'\\nForeach ($CustomModule in $CustomModules) {\\n    Try {\\n        $Null = Read-S3Object -BucketName $S3BucketName -Key \\\"$($S3KeyPrefix)/scripts/Modules/Module-AD/$CustomModule\\\" -File \\\"C:\\\\AWSQuickstart\\\\Module-AD\\\\$CustomModule\\\" -Region $S3BucketRegion\\n    } Catch [System.Exception] {\\n        Write-Output \\\"Failed to read and download $CustomModule.Name from S3 $_\\\"\\n        Exit 1\\n    }\\n}\\n\\nWrite-Output 'Installing NuGet Package Provider'\\nTry {\\n    $Null = Install-PackageProvider -Name 'NuGet' -MinimumVersion '2.8.5' -Force -ErrorAction Stop\\n} Catch [System.Exception] {\\n    Write-Output \\\"Failed to install NuGet Package Provider $_\\\"\\n    Exit 1\\n}\\n\\nWrite-Output 'Setting PSGallery Respository to trusted'\\nTry {\\n    Set-PSRepository -Name 'PSGallery' -InstallationPolicy 'Trusted' -ErrorAction Stop\\n} Catch [System.Exception] {\\n    Write-Output \\\"Failed to set PSGallery Respository to trusted $_\\\"\\n    Exit 1\\n}\\n\\nWrite-Output 'Installing the needed Powershell DSC modules for this Quick Start'\\nForeach ($Module in $Modules) {\\n    Try {\\n        Install-Module -Name $Module.Name -RequiredVersion $Module.Version -ErrorAction Stop\\n    } Catch [System.Exception] {\\n        Write-Output \\\"Failed to Import Modules $_\\\"\\n        Exit 1\\n    }\\n} \"\n                },\n                \"CloudWatchOutputConfig\" : {\n                  \"CloudWatchOutputEnabled\" : true,\n                  \"CloudWatchLogGroupName\" : {\n                    \"Fn::Sub\" : \"/aws/Quick_Start/${AWS::StackName}\"\n                  }\n                }\n              },\n              \"nextStep\" : \"configureInstance\"\n            }, {\n              \"name\" : \"configureInstance\",\n              \"action\" : \"aws:runCommand\",\n              \"inputs\" : {\n                \"DocumentName\" : \"AWS-RunPowerShellScript\",\n                \"InstanceIds\" : [ \"{{dcsInstanceIds.InstanceIds}}\" ],\n                \"Parameters\" : {\n                  \"commands\" : \"Try {\\n    Import-Module -Name 'C:\\\\AWSQuickstart\\\\Module-AD\\\\Module-AD.psm1' -Force\\n} Catch [System.Exception] {\\n    Write-Output \\\"Failed to import AWSQuickstart AD PS Module $_\\\"\\n    Exit 1\\n}\\nNew-VolumeFromRawDisk\\nInvoke-PreConfig\\nInvoke-LcmConfig\"\n                },\n                \"CloudWatchOutputConfig\" : {\n                  \"CloudWatchOutputEnabled\" : true,\n                  \"CloudWatchLogGroupName\" : {\n                    \"Fn::Sub\" : \"/aws/Quick_Start/${AWS::StackName}\"\n                  }\n                }\n              },\n              \"nextStep\" : \"configureDc1Mof\"\n            }, {\n              \"name\" : \"configureDc1Mof\",\n              \"action\" : \"aws:runCommand\",\n              \"inputs\" : {\n                \"DocumentName\" : \"AWS-RunPowerShellScript\",\n                \"InstanceIds\" : [ \"{{dc1InstanceId.InstanceId}}\" ],\n                \"Parameters\" : {\n                  \"commands\" : \"Try {\\n    Import-Module -Name 'C:\\\\AWSQuickstart\\\\Module-AD\\\\Module-AD.psm1' -Force\\n} Catch [System.Exception] {\\n    Write-Output \\\"Failed to import AWSQuickstart AD PS Module $_\\\"\\n    Exit 1\\n}\\n$EniConfig = Get-EniConfig\\nSet-DscConfiguration -DeploymentType 'NonPromo' -DomainDNSName '{{DomainDNSName}}' -DomainNetBIOSName '{{DomainNetBIOSName}}' -ExistingDcIP01 '{{ExistingDomainController1IP}}'-ExistingDcIP02 '{{ExistingDomainController2IP}}' -GatewayAddress $EniConfig.GatewayAddress -InstanceIP $EniConfig.IpAddress -InstanceIPDns $EniConfig.DnsIpAddress -InstanceNetBIOSName '{{ADServer1NetBIOSName}}' -MacAddress $EniConfig.MacAddress\"\n                },\n                \"CloudWatchOutputConfig\" : {\n                  \"CloudWatchOutputEnabled\" : true,\n                  \"CloudWatchLogGroupName\" : {\n                    \"Fn::Sub\" : \"/aws/Quick_Start/${AWS::StackName}\"\n                  }\n                }\n              },\n              \"nextStep\" : \"runDc1Mof\"\n            }, {\n              \"name\" : \"runDc1Mof\",\n              \"action\" : \"aws:runCommand\",\n              \"onFailure\" : \"step:signalfailure\",\n              \"inputs\" : {\n                \"DocumentName\" : \"AWS-RunPowerShellScript\",\n                \"InstanceIds\" : [ \"{{dc1InstanceId.InstanceId}}\" ],\n                \"Parameters\" : {\n                  \"commands\" : \"Try {\\n    Import-Module -Name 'C:\\\\AWSQuickstart\\\\Module-AD\\\\Module-AD.psm1' -Force\\n} Catch [System.Exception] {\\n    Write-Output \\\"Failed to import AWSQuickstart AD PS Module $_\\\"\\n    Exit 1\\n}\\nStart-DscConfiguration 'C:\\\\AWSQuickstart\\\\ConfigInstance' -Wait -Verbose -Force\\nInvoke-DscStatusCheck\"\n                },\n                \"CloudWatchOutputConfig\" : {\n                  \"CloudWatchOutputEnabled\" : true,\n                  \"CloudWatchLogGroupName\" : {\n                    \"Fn::Sub\" : \"/aws/Quick_Start/${AWS::StackName}\"\n                  }\n                }\n              },\n              \"nextStep\" : \"configureDc2Mof\"\n            }, {\n              \"name\" : \"configureDc2Mof\",\n              \"action\" : \"aws:runCommand\",\n              \"inputs\" : {\n                \"DocumentName\" : \"AWS-RunPowerShellScript\",\n                \"InstanceIds\" : [ \"{{dc2InstanceId.InstanceId}}\" ],\n                \"Parameters\" : {\n                  \"commands\" : \"Try {\\n    Import-Module -Name 'C:\\\\AWSQuickstart\\\\Module-AD\\\\Module-AD.psm1' -Force\\n} Catch [System.Exception] {\\n    Write-Output \\\"Failed to import AWSQuickstart AD PS Module $_\\\"\\n    Exit 1\\n}\\n$EniConfig = Get-EniConfig\\nSet-DscConfiguration -DeploymentType 'NonPromo' -DomainDNSName '{{DomainDNSName}}' -DomainNetBIOSName '{{DomainNetBIOSName}}' -ExistingDcIP01 '{{ExistingDomainController1IP}}'-ExistingDcIP02 '{{ExistingDomainController2IP}}' -GatewayAddress $EniConfig.GatewayAddress -InstanceIP $EniConfig.IpAddress -InstanceIPDns $EniConfig.DnsIpAddress -InstanceNetBIOSName '{{ADServer2NetBIOSName}}' -MacAddress $EniConfig.MacAddress\"\n                },\n                \"CloudWatchOutputConfig\" : {\n                  \"CloudWatchOutputEnabled\" : true,\n                  \"CloudWatchLogGroupName\" : {\n                    \"Fn::Sub\" : \"/aws/Quick_Start/${AWS::StackName}\"\n                  }\n                }\n              },\n              \"nextStep\" : \"runDc2Mof\"\n            }, {\n              \"name\" : \"runDc2Mof\",\n              \"action\" : \"aws:runCommand\",\n              \"onFailure\" : \"step:signalfailure\",\n              \"inputs\" : {\n                \"DocumentName\" : \"AWS-RunPowerShellScript\",\n                \"InstanceIds\" : [ \"{{dc2InstanceId.InstanceId}}\" ],\n                \"Parameters\" : {\n                  \"commands\" : \"Try {\\n    Import-Module -Name 'C:\\\\AWSQuickstart\\\\Module-AD\\\\Module-AD.psm1' -Force\\n} Catch [System.Exception] {\\n    Write-Output \\\"Failed to import AWSQuickstart AD PS Module $_\\\"\\n    Exit 1\\n}\\nStart-DscConfiguration 'C:\\\\AWSQuickstart\\\\ConfigInstance' -Wait -Verbose -Force\\nInvoke-DscStatusCheck\"\n                },\n                \"CloudWatchOutputConfig\" : {\n                  \"CloudWatchOutputEnabled\" : true,\n                  \"CloudWatchLogGroupName\" : {\n                    \"Fn::Sub\" : \"/aws/Quick_Start/${AWS::StackName}\"\n                  }\n                }\n              },\n              \"nextStep\" : \"PostConfig\"\n            }, {\n              \"name\" : \"PostConfig\",\n              \"action\" : \"aws:runCommand\",\n              \"inputs\" : {\n                \"DocumentName\" : \"AWS-RunPowerShellScript\",\n                \"InstanceIds\" : [ \"{{dcsInstanceIds.InstanceIds}}\" ],\n                \"Parameters\" : {\n                  \"commands\" : \"Try {\\n    Import-Module -Name 'C:\\\\AWSQuickstart\\\\Module-AD\\\\Module-AD.psm1' -Force\\n} Catch [System.Exception] {\\n    Write-Output \\\"Failed to import AWSQuickstart AD PS Module $_\\\"\\n    Exit 1\\n}\\nSet-AD2PostConfig\\n\\nIf ('{{EnableAdvancedAudtingandMetrics}}' -eq 'true') {\\n  Set-DcAuditDscConfiguration\\n  Set-LogsAndMetricsCollection -Role 'DomainController' -Stackname '{{StackName}}'\\n}\\n\\nInvoke-Cleanup -VPCCIDR '{{VPCCIDR}}'\"\n                },\n                \"CloudWatchOutputConfig\" : {\n                  \"CloudWatchOutputEnabled\" : true,\n                  \"CloudWatchLogGroupName\" : {\n                    \"Fn::Sub\" : \"/aws/Quick_Start/${AWS::StackName}\"\n                  }\n                }\n              }\n            }, {\n              \"name\" : \"configureIMDSv2dc1\",\n              \"action\" : \"aws:executeAwsApi\",\n              \"onFailure\" : \"step:signalfailure\",\n              \"description\" : \"Set hop limit and configure IMDS version\",\n              \"inputs\" : {\n                \"Service\" : \"ec2\",\n                \"Api\" : \"ModifyInstanceMetadataOptions\",\n                \"InstanceId\" : \"{{dc1InstanceId.InstanceId}}\",\n                \"HttpEndpoint\" : \"enabled\",\n                \"HttpTokens\" : \"required\"\n              },\n              \"timeoutSeconds\" : 300,\n              \"isEnd\" : false,\n              \"isCritical\" : true,\n              \"maxAttempts\" : 3\n            }, {\n              \"name\" : \"configureIMDSv2dc2\",\n              \"action\" : \"aws:executeAwsApi\",\n              \"onFailure\" : \"step:signalfailure\",\n              \"description\" : \"Set hop limit and configure IMDS version\",\n              \"inputs\" : {\n                \"Service\" : \"ec2\",\n                \"Api\" : \"ModifyInstanceMetadataOptions\",\n                \"InstanceId\" : \"{{dc2InstanceId.InstanceId}}\",\n                \"HttpEndpoint\" : \"enabled\",\n                \"HttpTokens\" : \"required\"\n              },\n              \"timeoutSeconds\" : 300,\n              \"isEnd\" : false,\n              \"isCritical\" : true,\n              \"maxAttempts\" : 3\n            }, {\n              \"name\" : \"CFNSignalEnd\",\n              \"action\" : \"aws:branch\",\n              \"inputs\" : {\n                \"Choices\" : [ {\n                  \"NextStep\" : \"signalsuccess\",\n                  \"Not\" : {\n                    \"Variable\" : \"{{StackName}}\",\n                    \"StringEquals\" : \"\"\n                  }\n                }, {\n                  \"NextStep\" : \"sleepend\",\n                  \"Variable\" : \"{{StackName}}\",\n                  \"StringEquals\" : \"\"\n                } ]\n              }\n            }, {\n              \"name\" : \"signalsuccess\",\n              \"action\" : \"aws:executeAwsApi\",\n              \"isEnd\" : true,\n              \"inputs\" : {\n                \"Service\" : \"cloudformation\",\n                \"Api\" : \"SignalResource\",\n                \"LogicalResourceId\" : \"DomainController2\",\n                \"StackName\" : \"{{StackName}}\",\n                \"Status\" : \"SUCCESS\",\n                \"UniqueId\" : \"{{dc2InstanceId.InstanceId}}\"\n              }\n            }, {\n              \"name\" : \"sleepend\",\n              \"action\" : \"aws:sleep\",\n              \"isEnd\" : true,\n              \"inputs\" : {\n                \"Duration\" : \"PT1S\"\n              }\n            }, {\n              \"name\" : \"signalfailure\",\n              \"action\" : \"aws:executeAwsApi\",\n              \"inputs\" : {\n                \"Service\" : \"cloudformation\",\n                \"Api\" : \"SignalResource\",\n                \"LogicalResourceId\" : \"DomainController2\",\n                \"StackName\" : \"{{StackName}}\",\n                \"Status\" : \"FAILURE\",\n                \"UniqueId\" : \"{{dc2InstanceId.InstanceId}}\"\n              }\n            } ]\n          }\n        }\n      },\n      \"AWSQuickstartActiveDirectoryDSPromote\" : {\n        \"Condition\" : \"DoJoinAndPromote\",\n        \"Type\" : \"AWS::SSM::Document\",\n        \"Properties\" : {\n          \"DocumentType\" : \"Automation\",\n          \"Tags\" : [ {\n            \"Key\" : \"StackName\",\n            \"Value\" : {\n              \"Ref\" : \"AWS::StackName\"\n            }\n          } ],\n          \"Content\" : {\n            \"schemaVersion\" : \"0.3\",\n            \"description\" : \"Deploy promoted domain contollers with SSM Automation\",\n            \"parameters\" : {\n              \"ADAdminSecParamName\" : {\n                \"allowedPattern\" : \"^arn:[^:]+:secretsmanager:[^:]+:\\\\d{12}:secret:[\\\\w\\\\/+=.@-]{1,512}$\",\n                \"description\" : \"ARN for the Administrator credentials Secret used to join and promote domain controllers (Only used if JoinAndPromote is Yes)\",\n                \"maxChars\" : \"2048\",\n                \"minChars\" : \"20\",\n                \"type\" : \"String\"\n              },\n              \"ADServer1NetBIOSName\" : {\n                \"allowedPattern\" : \"^[a-zA-Z0-9\\\\-]+$\",\n                \"description\" : \"NetBIOS name of the first Active Directory Domain Controller (up to 15 characters)\",\n                \"maxChars\" : \"15\",\n                \"minChars\" : \"1\",\n                \"type\" : \"String\"\n              },\n              \"ADServer1PrivateIP\" : {\n                \"allowedPattern\" : \"^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$\",\n                \"description\" : \"Fixed private IP for the first additional Active Directory Domain Controller located in subnet 1\",\n                \"type\" : \"String\"\n              },\n              \"ADServer2NetBIOSName\" : {\n                \"allowedPattern\" : \"^[a-zA-Z0-9\\\\-]+$\",\n                \"description\" : \"NetBIOS name of the first Active Directory Domain Controller (up to 15 characters)\",\n                \"maxChars\" : \"15\",\n                \"minChars\" : \"1\",\n                \"type\" : \"String\"\n              },\n              \"ADServer2PrivateIP\" : {\n                \"allowedPattern\" : \"^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$\",\n                \"description\" : \"Fixed private IP for the second additional Active Directory Domain Controller located in subnet 2\",\n                \"type\" : \"String\"\n              },\n              \"DomainDNSName\" : {\n                \"allowedPattern\" : \"^([a-zA-Z0-9]+[\\\\.\\\\-])+([a-zA-Z0-9])+$\",\n                \"description\" : \"Fully qualified domain name (FQDN) of the domain you would like to join and promote to e.g. example.com\",\n                \"maxChars\" : \"64\",\n                \"minChars\" : \"2\",\n                \"type\" : \"String\"\n              },\n              \"DomainNetBIOSName\" : {\n                \"allowedPattern\" : \"^[a-zA-Z0-9\\\\-]+$\",\n                \"description\" : \"NetBIOS name of the domain (up to 15 characters) you would like to join and promote to for users of earlier versions of Windows e.g. EXAMPLE\",\n                \"maxChars\" : \"15\",\n                \"minChars\" : \"1\",\n                \"type\" : \"String\"\n              },\n              \"EnableAdvancedAudtingandMetrics\" : {\n                \"allowedValues\" : [ \"true\", \"false\" ],\n                \"description\" : \"Enable advanced auditing and metrics\",\n                \"type\" : \"String\"\n              },\n              \"ExistingDomainController1IP\" : {\n                \"allowedPattern\" : \"^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$\",\n                \"description\" : \"IP of DNS server that can resolve domain (Must be accessible)\",\n                \"type\" : \"String\"\n              },\n              \"RestoreModeSecParamName\" : {\n                \"allowedPattern\" : \"^arn:[^:]+:secretsmanager:[^:]+:\\\\d{12}:secret:[\\\\w\\\\/+=.@-]{1,512}$\",\n                \"description\" : \"ARN for the Restore Mode credentials Secret used to join and promote domain controllers (Only used if JoinAndPromote is Yes)\",\n                \"maxChars\" : \"2048\",\n                \"minChars\" : \"20\",\n                \"type\" : \"String\"\n              },\n              \"QSS3BucketName\" : {\n                \"allowedPattern\" : \"^[a-z0-9]+[a-z0-9\\\\.\\\\-]*[a-z0-9]+$\",\n                \"description\" : \"S3 bucket name for the Quick Start assets. Quick Start bucket name can include numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen (-)\",\n                \"type\" : \"String\"\n              },\n              \"QSS3BucketRegion\" : {\n                \"allowedPattern\" : \"^[a-z]+-[a-z\\\\-]+-[0-9]{1}$\",\n                \"description\" : \"The AWS Region where the Quick Start S3 bucket (QSS3BucketName) is hosted. When using your own bucket, you must specify this value\",\n                \"type\" : \"String\"\n              },\n              \"QSS3KeyPrefix\" : {\n                \"allowedPattern\" : \"^[a-zA-Z0-9\\\\-\\\\/]+$\",\n                \"description\" : \"S3 key prefix for the Quick Start assets. Quick Start key prefix can include numbers, lowercase letters, uppercase letters, hyphens (-), and forward slash (/)\",\n                \"type\" : \"String\"\n              },\n              \"StackName\" : {\n                \"allowedPattern\" : \"^[a-zA-Z][A-Za-z0-9\\\\-]*$\",\n                \"description\" : \"Stack Name Input for cfn resource signal\",\n                \"maxChars\" : \"128\",\n                \"minChars\" : \"1\",\n                \"type\" : \"String\"\n              },\n              \"URLSuffix\" : {\n                \"allowedPattern\" : \"^[a-zA-Z0-9\\\\-\\\\.]+$\",\n                \"default\" : \"amazonaws.com\",\n                \"description\" : \"AWS URL suffix\",\n                \"type\" : \"String\"\n              },\n              \"VPCCIDR\" : {\n                \"allowedPattern\" : \"^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\\\/(1[6-9]|2[0-8]))$\",\n                \"description\" : \"CIDR block for private subnet 1 located in Availability Zone 1\",\n                \"type\" : \"String\"\n              }\n            },\n            \"mainSteps\" : [ {\n              \"name\" : \"dcsInstanceIds\",\n              \"action\" : \"aws:executeAwsApi\",\n              \"onFailure\" : \"step:signalfailure\",\n              \"inputs\" : {\n                \"Service\" : \"ec2\",\n                \"Api\" : \"DescribeInstances\",\n                \"Filters\" : [ {\n                  \"Name\" : \"tag:Name\",\n                  \"Values\" : [ \"{{ADServer1NetBIOSName}}\", \"{{ADServer2NetBIOSName}}\" ]\n                }, {\n                  \"Name\" : \"tag:aws:cloudformation:stack-name\",\n                  \"Values\" : [ \"{{StackName}}\" ]\n                }, {\n                  \"Name\" : \"instance-state-name\",\n                  \"Values\" : [ \"running\" ]\n                } ]\n              },\n              \"outputs\" : [ {\n                \"Name\" : \"InstanceIds\",\n                \"Selector\" : \"$.Reservations..Instances..InstanceId\",\n                \"Type\" : \"StringList\"\n              } ],\n              \"nextStep\" : \"dc1InstanceId\"\n            }, {\n              \"name\" : \"dc1InstanceId\",\n              \"action\" : \"aws:executeAwsApi\",\n              \"onFailure\" : \"step:signalfailure\",\n              \"inputs\" : {\n                \"Service\" : \"ec2\",\n                \"Api\" : \"DescribeInstances\",\n                \"Filters\" : [ {\n                  \"Name\" : \"tag:Name\",\n                  \"Values\" : [ \"{{ADServer1NetBIOSName}}\" ]\n                }, {\n                  \"Name\" : \"tag:aws:cloudformation:stack-name\",\n                  \"Values\" : [ \"{{StackName}}\" ]\n                }, {\n                  \"Name\" : \"instance-state-name\",\n                  \"Values\" : [ \"running\" ]\n                } ]\n              },\n              \"outputs\" : [ {\n                \"Name\" : \"InstanceId\",\n                \"Selector\" : \"$.Reservations[0].Instances[0].InstanceId\",\n                \"Type\" : \"String\"\n              } ],\n              \"nextStep\" : \"dc2InstanceId\"\n            }, {\n              \"name\" : \"dc2InstanceId\",\n              \"action\" : \"aws:executeAwsApi\",\n              \"onFailure\" : \"step:signalfailure\",\n              \"inputs\" : {\n                \"Service\" : \"ec2\",\n                \"Api\" : \"DescribeInstances\",\n                \"Filters\" : [ {\n                  \"Name\" : \"tag:Name\",\n                  \"Values\" : [ \"{{ADServer2NetBIOSName}}\" ]\n                }, {\n                  \"Name\" : \"tag:aws:cloudformation:stack-name\",\n                  \"Values\" : [ \"{{StackName}}\" ]\n                }, {\n                  \"Name\" : \"instance-state-name\",\n                  \"Values\" : [ \"running\" ]\n                } ]\n              },\n              \"outputs\" : [ {\n                \"Name\" : \"InstanceId\",\n                \"Selector\" : \"$.Reservations[0].Instances[0].InstanceId\",\n                \"Type\" : \"String\"\n              } ],\n              \"nextStep\" : \"intializeInstance\"\n            }, {\n              \"name\" : \"intializeInstance\",\n              \"action\" : \"aws:runCommand\",\n              \"inputs\" : {\n                \"DocumentName\" : \"AWS-RunPowerShellScript\",\n                \"InstanceIds\" : [ \"{{dcsInstanceIds.InstanceIds}}\" ],\n                \"Parameters\" : {\n                  \"commands\" : \"[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12\\n\\n$S3BucketName = '{{QSS3BucketName}}'\\n$S3KeyPrefix = '{{QSS3KeyPrefix}}'\\n$S3BucketRegion = '{{QSS3BucketRegion}}'\\n\\n$CustomModules = @(\\n    'Module-AD.psd1',\\n    'Module-AD.psm1'\\n)\\n\\n$Modules = @(\\n    @{\\n        Name = 'NetworkingDsc'\\n        Version = '8.2.0'\\n    },\\n    @{\\n        Name = 'ActiveDirectoryDsc'\\n        Version = '6.0.1'\\n    },\\n    @{\\n        Name = 'ComputerManagementDsc'\\n        Version = '8.5.0'\\n    },\\n    @{\\n        Name = 'DnsServerDsc'\\n        Version = '3.0.0'\\n    },\\n    @{\\n        Name = 'AuditPolicyDsc'\\n        Version = '1.4.0.0'\\n    }\\n)\\n\\nWrite-Output 'Creating AWSQuickstart Directory'\\nTry {\\n    $Null = New-Item -Path 'C:\\\\AWSQuickstart\\\\Module-AD' -ItemType 'Directory' -ErrorAction Stop\\n} Catch [System.Exception] {\\n    Write-Output \\\"Failed to create AWSQuickstart directory $_\\\"\\n    Exit 1\\n}\\n\\n$S3KeyPrefix = $S3KeyPrefix.Substring(0,$S3KeyPrefix.Length -1)\\nWrite-Output 'Downloading AD PowerShell Module'\\nForeach ($CustomModule in $CustomModules) {\\n    Try {\\n        $Null = Read-S3Object -BucketName $S3BucketName -Key \\\"$($S3KeyPrefix)/scripts/Modules/Module-AD/$CustomModule\\\" -File \\\"C:\\\\AWSQuickstart\\\\Module-AD\\\\$CustomModule\\\" -Region $S3BucketRegion\\n    } Catch [System.Exception] {\\n        Write-Output \\\"Failed to read and download $CustomModule.Name from S3 $_\\\"\\n        Exit 1\\n    }\\n}\\n\\nWrite-Output 'Installing NuGet Package Provider'\\nTry {\\n    $Null = Install-PackageProvider -Name 'NuGet' -MinimumVersion '2.8.5' -Force -ErrorAction Stop\\n} Catch [System.Exception] {\\n    Write-Output \\\"Failed to install NuGet Package Provider $_\\\"\\n    Exit 1\\n}\\n\\nWrite-Output 'Setting PSGallery Respository to trusted'\\nTry {\\n    Set-PSRepository -Name 'PSGallery' -InstallationPolicy 'Trusted' -ErrorAction Stop\\n} Catch [System.Exception] {\\n    Write-Output \\\"Failed to set PSGallery Respository to trusted $_\\\"\\n    Exit 1\\n}\\n\\nWrite-Output 'Installing the needed Powershell DSC modules for this Quick Start'\\nForeach ($Module in $Modules) {\\n    Try {\\n        Install-Module -Name $Module.Name -RequiredVersion $Module.Version -ErrorAction Stop\\n    } Catch [System.Exception] {\\n        Write-Output \\\"Failed to Import Modules $_\\\"\\n        Exit 1\\n    }\\n} \"\n                },\n                \"CloudWatchOutputConfig\" : {\n                  \"CloudWatchOutputEnabled\" : true,\n                  \"CloudWatchLogGroupName\" : {\n                    \"Fn::Sub\" : \"/aws/Quick_Start/${AWS::StackName}\"\n                  }\n                }\n              },\n              \"nextStep\" : \"configureInstance\"\n            }, {\n              \"name\" : \"configureInstance\",\n              \"action\" : \"aws:runCommand\",\n              \"inputs\" : {\n                \"DocumentName\" : \"AWS-RunPowerShellScript\",\n                \"InstanceIds\" : [ \"{{dcsInstanceIds.InstanceIds}}\" ],\n                \"Parameters\" : {\n                  \"commands\" : \"Try {\\n    Import-Module -Name 'C:\\\\AWSQuickstart\\\\Module-AD\\\\Module-AD.psm1' -Force\\n} Catch [System.Exception] {\\n    Write-Output \\\"Failed to import AWSQuickstart AD PS Module $_\\\"\\n    Exit 1\\n}\\nNew-VolumeFromRawDisk\\nInvoke-PreConfig\\nInvoke-LcmConfig\"\n                },\n                \"CloudWatchOutputConfig\" : {\n                  \"CloudWatchOutputEnabled\" : true,\n                  \"CloudWatchLogGroupName\" : {\n                    \"Fn::Sub\" : \"/aws/Quick_Start/${AWS::StackName}\"\n                  }\n                }\n              },\n              \"nextStep\" : \"configureDc1Mof\"\n            }, {\n              \"name\" : \"configureDc1Mof\",\n              \"action\" : \"aws:runCommand\",\n              \"inputs\" : {\n                \"DocumentName\" : \"AWS-RunPowerShellScript\",\n                \"InstanceIds\" : [ \"{{dc1InstanceId.InstanceId}}\" ],\n                \"Parameters\" : {\n                  \"commands\" : \"Try {\\n    Import-Module -Name 'C:\\\\AWSQuickstart\\\\Module-AD\\\\Module-AD.psm1' -Force\\n} Catch [System.Exception] {\\n    Write-Output \\\"Failed to import AWSQuickstart AD PS Module $_\\\"\\n    Exit 1\\n}\\n$EniConfig = Get-EniConfig\\n$DaSecret = Get-SecretInfo -Domain '{{DomainNetBIOSName}}' -SecretArn '{{ADAdminSecParamName}}'\\n$RmSecret = Get-SecretInfo -Domain '{{DomainNetBIOSName}}' -SecretArn '{{RestoreModeSecParamName}}'\\nSet-DscConfiguration -DaCredentials $DaSecret.DomainCredentials -DeploymentType 'SecondaryDC' -DomainDNSName '{{DomainDNSName}}' -DomainNetBIOSName '{{DomainNetBIOSName}}' -ExistingDcIP01 '{{ExistingDomainController1IP}}' -GatewayAddress $EniConfig.GatewayAddress -InstanceIP $EniConfig.IpAddress -InstanceIPDns $EniConfig.DnsIpAddress -InstanceNetBIOSName '{{ADServer1NetBIOSName}}' -MacAddress $EniConfig.MacAddress -RestoreModeCredentials $RmSecret.Credentials\"\n                },\n                \"CloudWatchOutputConfig\" : {\n                  \"CloudWatchOutputEnabled\" : true,\n                  \"CloudWatchLogGroupName\" : {\n                    \"Fn::Sub\" : \"/aws/Quick_Start/${AWS::StackName}\"\n                  }\n                }\n              },\n              \"nextStep\" : \"configureDc2Mof\"\n            }, {\n              \"name\" : \"configureDc2Mof\",\n              \"action\" : \"aws:runCommand\",\n              \"inputs\" : {\n                \"DocumentName\" : \"AWS-RunPowerShellScript\",\n                \"InstanceIds\" : [ \"{{dc2InstanceId.InstanceId}}\" ],\n                \"Parameters\" : {\n                  \"commands\" : \"Try {\\n    Import-Module -Name 'C:\\\\AWSQuickstart\\\\Module-AD\\\\Module-AD.psm1' -Force\\n} Catch [System.Exception] {\\n    Write-Output \\\"Failed to import AWSQuickstart AD PS Module $_\\\"\\n    Exit 1\\n}\\n$EniConfig = Get-EniConfig\\n$DaSecret = Get-SecretInfo -Domain '{{DomainNetBIOSName}}' -SecretArn '{{ADAdminSecParamName}}'\\n$RmSecret = Get-SecretInfo -Domain '{{DomainNetBIOSName}}' -SecretArn '{{RestoreModeSecParamName}}'\\nSet-DscConfiguration -DaCredentials $DaSecret.DomainCredentials -DeploymentType 'SecondaryDC' -DomainDNSName '{{DomainDNSName}}' -DomainNetBIOSName '{{DomainNetBIOSName}}' -ExistingDcIP01 '{{ExistingDomainController1IP}}' -GatewayAddress $EniConfig.GatewayAddress -InstanceIP $EniConfig.IpAddress -InstanceIPDns $EniConfig.DnsIpAddress -InstanceNetBIOSName '{{ADServer2NetBIOSName}}' -MacAddress $EniConfig.MacAddress -RestoreModeCredentials $RmSecret.Credentials\"\n                },\n                \"CloudWatchOutputConfig\" : {\n                  \"CloudWatchOutputEnabled\" : true,\n                  \"CloudWatchLogGroupName\" : {\n                    \"Fn::Sub\" : \"/aws/Quick_Start/${AWS::StackName}\"\n                  }\n                }\n              },\n              \"nextStep\" : \"runDcMofs\"\n            }, {\n              \"name\" : \"runDcMofs\",\n              \"action\" : \"aws:runCommand\",\n              \"onFailure\" : \"step:signalfailure\",\n              \"inputs\" : {\n                \"DocumentName\" : \"AWS-RunPowerShellScript\",\n                \"InstanceIds\" : [ \"{{dcsInstanceIds.InstanceIds}}\" ],\n                \"Parameters\" : {\n                  \"commands\" : \"Try {\\n    Import-Module -Name 'C:\\\\AWSQuickstart\\\\Module-AD\\\\Module-AD.psm1' -Force\\n} Catch [System.Exception] {\\n    Write-Output \\\"Failed to import AWSQuickstart AD PS Module $_\\\"\\n    Exit 1\\n}\\nStart-DscConfiguration 'C:\\\\AWSQuickstart\\\\ConfigInstance' -Wait -Verbose -Force\\nInvoke-DscStatusCheck\"\n                },\n                \"CloudWatchOutputConfig\" : {\n                  \"CloudWatchOutputEnabled\" : true,\n                  \"CloudWatchLogGroupName\" : {\n                    \"Fn::Sub\" : \"/aws/Quick_Start/${AWS::StackName}\"\n                  }\n                }\n              },\n              \"nextStep\" : \"DisableFW\"\n            }, {\n              \"name\" : \"DisableFW\",\n              \"action\" : \"aws:runCommand\",\n              \"inputs\" : {\n                \"DocumentName\" : \"AWS-RunPowerShellScript\",\n                \"InstanceIds\" : [ \"{{dcsInstanceIds.InstanceIds}}\" ],\n                \"Parameters\" : {\n                  \"commands\" : \"Try {\\n    Get-NetFirewallProfile -ErrorAction Stop | Set-NetFirewallProfile -Enabled False -ErrorAction Stop\\n} Catch [System.Exception] {\\n    Write-Output \\\"Failed to disable Windows Firewall $_\\\"\\n    Exit 1\\n}\"\n                },\n                \"CloudWatchOutputConfig\" : {\n                  \"CloudWatchOutputEnabled\" : true,\n                  \"CloudWatchLogGroupName\" : {\n                    \"Fn::Sub\" : \"/aws/Quick_Start/${AWS::StackName}\"\n                  }\n                }\n              },\n              \"nextStep\" : \"DnsConfig\"\n            }, {\n              \"name\" : \"DnsConfig\",\n              \"action\" : \"aws:runCommand\",\n              \"onFailure\" : \"step:signalfailure\",\n              \"inputs\" : {\n                \"DocumentName\" : \"AWS-RunPowerShellScript\",\n                \"InstanceIds\" : [ \"{{dc2InstanceId.InstanceId}}\" ],\n                \"Parameters\" : {\n                  \"commands\" : \"Try {\\n    Import-Module -Name 'C:\\\\AWSQuickstart\\\\Module-AD\\\\Module-AD.psm1' -Force\\n} Catch [System.Exception] {\\n    Write-Output \\\"Failed to import AWSQuickstart AD PS Module $_\\\"\\n    Exit 1\\n}\\n$DaSecret = Get-SecretInfo -Domain '{{DomainNetBIOSName}}' -SecretArn '{{ADAdminSecParamName}}'\\nSet-DnsDscConfiguration -ADServer1NetBIOSName '{{ADServer1NetBIOSName}}' -ADServer2NetBIOSName '{{ADServer2NetBIOSName}}' -ADServer1PrivateIP '{{ADServer1PrivateIP}}' -ADServer2PrivateIP '{{ADServer2PrivateIP}}' -DomainDNSName '{{DomainDNSName}}' -DaCredentials $DaSecret.DomainCredentials\"\n                },\n                \"CloudWatchOutputConfig\" : {\n                  \"CloudWatchOutputEnabled\" : true,\n                  \"CloudWatchLogGroupName\" : {\n                    \"Fn::Sub\" : \"/aws/Quick_Start/${AWS::StackName}\"\n                  }\n                }\n              },\n              \"nextStep\" : \"PostConfig\"\n            }, {\n              \"name\" : \"PostConfig\",\n              \"action\" : \"aws:runCommand\",\n              \"inputs\" : {\n                \"DocumentName\" : \"AWS-RunPowerShellScript\",\n                \"InstanceIds\" : [ \"{{dcsInstanceIds.InstanceIds}}\" ],\n                \"Parameters\" : {\n                  \"commands\" : \"Try {\\n    Import-Module -Name 'C:\\\\AWSQuickstart\\\\Module-AD\\\\Module-AD.psm1' -Force\\n} Catch [System.Exception] {\\n    Write-Output \\\"Failed to import AWSQuickstart AD PS Module $_\\\"\\n    Exit 1\\n}\\nSet-AD2PostConfig\\n\\nIf ('{{EnableAdvancedAudtingandMetrics}}' -eq 'true') {\\n  Set-DcAuditDscConfiguration\\n  Set-LogsAndMetricsCollection -Role 'DomainController' -Stackname '{{StackName}}'\\n}\\n\\nInvoke-Cleanup -VPCCIDR '{{VPCCIDR}}'\"\n                },\n                \"CloudWatchOutputConfig\" : {\n                  \"CloudWatchOutputEnabled\" : true,\n                  \"CloudWatchLogGroupName\" : {\n                    \"Fn::Sub\" : \"/aws/Quick_Start/${AWS::StackName}\"\n                  }\n                }\n              }\n            }, {\n              \"name\" : \"CFNSignalEnd\",\n              \"action\" : \"aws:branch\",\n              \"inputs\" : {\n                \"Choices\" : [ {\n                  \"NextStep\" : \"signalsuccess\",\n                  \"Not\" : {\n                    \"Variable\" : \"{{StackName}}\",\n                    \"StringEquals\" : \"\"\n                  }\n                }, {\n                  \"NextStep\" : \"sleepend\",\n                  \"Variable\" : \"{{StackName}}\",\n                  \"StringEquals\" : \"\"\n                } ]\n              }\n            }, {\n              \"name\" : \"signalsuccess\",\n              \"action\" : \"aws:executeAwsApi\",\n              \"isEnd\" : true,\n              \"inputs\" : {\n                \"Service\" : \"cloudformation\",\n                \"Api\" : \"SignalResource\",\n                \"LogicalResourceId\" : \"DomainController2Promote\",\n                \"StackName\" : \"{{StackName}}\",\n                \"Status\" : \"SUCCESS\",\n                \"UniqueId\" : \"{{dc2InstanceId.InstanceId}}\"\n              }\n            }, {\n              \"name\" : \"sleepend\",\n              \"action\" : \"aws:sleep\",\n              \"isEnd\" : true,\n              \"inputs\" : {\n                \"Duration\" : \"PT1S\"\n              }\n            }, {\n              \"name\" : \"signalfailure\",\n              \"action\" : \"aws:executeAwsApi\",\n              \"inputs\" : {\n                \"Service\" : \"cloudformation\",\n                \"Api\" : \"SignalResource\",\n                \"LogicalResourceId\" : \"DomainController2\",\n                \"StackName\" : \"{{StackName}}\",\n                \"Status\" : \"FAILURE\",\n                \"UniqueId\" : \"{{dc2InstanceId.InstanceId}}\"\n              }\n            } ]\n          }\n        }\n      },\n      \"ADServerRole\" : {\n        \"Type\" : \"AWS::IAM::Role\",\n        \"Metadata\" : {\n          \"cfn_nag\" : {\n            \"rules_to_suppress\" : [ {\n              \"id\" : \"W11\",\n              \"reason\" : \"* required\"\n            } ]\n          }\n        },\n        \"Properties\" : {\n          \"Policies\" : [ {\n            \"PolicyDocument\" : {\n              \"Version\" : \"2012-10-17\",\n              \"Statement\" : [ {\n                \"Effect\" : \"Allow\",\n                \"Action\" : \"s3:GetObject\",\n                \"Resource\" : [ {\n                  \"Fn::Sub\" : \"arn:${AWS::Partition}:s3:::aws-ssm-${AWS::Region}/*\"\n                }, {\n                  \"Fn::Sub\" : \"arn:${AWS::Partition}:s3:::aws-windows-downloads-${AWS::Region}/*\"\n                }, {\n                  \"Fn::Sub\" : \"arn:${AWS::Partition}:s3:::amazon-ssm-${AWS::Region}/*\"\n                }, {\n                  \"Fn::Sub\" : \"arn:${AWS::Partition}:s3:::amazon-ssm-packages-${AWS::Region}/*\"\n                }, {\n                  \"Fn::Sub\" : \"arn:${AWS::Partition}:s3:::${AWS::Region}-birdwatcher-prod/*\"\n                }, {\n                  \"Fn::Sub\" : \"arn:${AWS::Partition}:s3:::patch-baseline-snapshot-${AWS::Region}/*\"\n                }, {\n                  \"Fn::Sub\" : \"arn:${AWS::Partition}:s3:::aws-ssm-distributor-file-${AWS::Region}/*\"\n                }, {\n                  \"Fn::Sub\" : \"arn:${AWS::Partition}:s3:::aws-ssm-document-attachments-${AWS::Region}/*\"\n                } ]\n              } ]\n            },\n            \"PolicyName\" : \"SSMAgent\"\n          }, {\n            \"PolicyDocument\" : {\n              \"Version\" : \"2012-10-17\",\n              \"Statement\" : [ {\n                \"Effect\" : \"Allow\",\n                \"Action\" : \"s3:ListBucket\",\n                \"Resource\" : {\n                  \"Fn::Sub\" : [ \"arn:${AWS::Partition}:s3:::${S3Bucket}\", {\n                    \"S3Bucket\" : {\n                      \"Fn::If\" : [ \"UsingDefaultBucket\", {\n                        \"Fn::Sub\" : \"${QSS3BucketName}-${AWS::Region}\"\n                      }, {\n                        \"Ref\" : \"QSS3BucketName\"\n                      } ]\n                    }\n                  } ]\n                }\n              }, {\n                \"Effect\" : \"Allow\",\n                \"Action\" : \"s3:GetObject\",\n                \"Resource\" : {\n                  \"Fn::Sub\" : [ \"arn:${AWS::Partition}:s3:::${S3Bucket}/${QSS3KeyPrefix}*\", {\n                    \"S3Bucket\" : {\n                      \"Fn::If\" : [ \"UsingDefaultBucket\", {\n                        \"Fn::Sub\" : \"${QSS3BucketName}-${AWS::Region}\"\n                      }, {\n                        \"Ref\" : \"QSS3BucketName\"\n                      } ]\n                    }\n                  } ]\n                }\n              }, {\n                \"Effect\" : \"Allow\",\n                \"Action\" : \"ssm:StartAutomationExecution\",\n                \"Resource\" : [ {\n                  \"Fn::If\" : [ \"DoNOTJoinAndPromote\", {\n                    \"Fn::Sub\" : \"arn:${AWS::Partition}:ssm:${AWS::Region}:${AWS::AccountId}:automation-definition/${AWSQuickstartActiveDirectoryDS}:$DEFAULT\"\n                  }, {\n                    \"Ref\" : \"AWS::NoValue\"\n                  } ]\n                }, {\n                  \"Fn::If\" : [ \"DoJoinAndPromote\", {\n                    \"Fn::Sub\" : \"arn:${AWS::Partition}:ssm:${AWS::Region}:${AWS::AccountId}:automation-definition/${AWSQuickstartActiveDirectoryDSPromote}:$DEFAULT\"\n                  }, {\n                    \"Ref\" : \"AWS::NoValue\"\n                  } ]\n                } ]\n              }, {\n                \"Effect\" : \"Allow\",\n                \"Action\" : \"ssm:SendCommand\",\n                \"Resource\" : [ {\n                  \"Fn::Sub\" : \"arn:${AWS::Partition}:ssm:${AWS::Region}:*:document/AWS-RunRemoteScript\"\n                }, {\n                  \"Fn::Sub\" : \"arn:${AWS::Partition}:ssm:${AWS::Region}:*:document/AWS-RunPowerShellScript\"\n                } ]\n              }, {\n                \"Effect\" : \"Allow\",\n                \"Action\" : \"ssm:SendCommand\",\n                \"Resource\" : {\n                  \"Fn::Sub\" : \"arn:${AWS::Partition}:ec2:${AWS::Region}:${AWS::AccountId}:instance/*\"\n                },\n                \"Condition\" : {\n                  \"StringEquals\" : {\n                    \"ssm:ResourceTag/aws:cloudformation:stack-name\" : {\n                      \"Ref\" : \"AWS::StackName\"\n                    }\n                  }\n                }\n              }, {\n                \"Sid\" : \"ReadOperations\",\n                \"Effect\" : \"Allow\",\n                \"Action\" : [ \"ec2:DescribeInstances\", \"ssm:DescribeInstanceInformation\", \"ssm:ListCommands\", \"ssm:ListCommandInvocations\" ],\n                \"Resource\" : \"*\"\n              }, {\n                \"Effect\" : \"Allow\",\n                \"Action\" : \"cloudformation:SignalResource\",\n                \"Resource\" : {\n                  \"Fn::Sub\" : \"arn:${AWS::Partition}:cloudformation:${AWS::Region}:${AWS::AccountId}:stack/${AWS::StackName}/*\"\n                }\n              }, {\n                \"Sid\" : \"ConfigureIMDS\",\n                \"Effect\" : \"Allow\",\n                \"Action\" : [ \"ec2:ModifyInstanceMetadataOptions\" ],\n                \"Resource\" : {\n                  \"Fn::Sub\" : \"arn:${AWS::Partition}:ec2:${AWS::Region}:${AWS::AccountId}:instance/*\"\n                }\n              } ]\n            },\n            \"PolicyName\" : \"AWS-Mgmt-Quick-Start-Policy\"\n          } ],\n          \"Path\" : \"/\",\n          \"ManagedPolicyArns\" : [ {\n            \"Fn::Sub\" : \"arn:${AWS::Partition}:iam::aws:policy/AmazonSSMManagedInstanceCore\"\n          }, {\n            \"Fn::Sub\" : \"arn:${AWS::Partition}:iam::aws:policy/CloudWatchAgentServerPolicy\"\n          } ],\n          \"Tags\" : [ {\n            \"Key\" : \"StackName\",\n            \"Value\" : {\n              \"Ref\" : \"AWS::StackName\"\n            }\n          } ],\n          \"AssumeRolePolicyDocument\" : {\n            \"Statement\" : [ {\n              \"Effect\" : \"Allow\",\n              \"Action\" : \"sts:AssumeRole\",\n              \"Principal\" : {\n                \"Service\" : [ \"ec2.amazonaws.com\" ]\n              }\n            } ],\n            \"Version\" : \"2012-10-17\"\n          }\n        }\n      },\n      \"ADServerProfile\" : {\n        \"Type\" : \"AWS::IAM::InstanceProfile\",\n        \"Properties\" : {\n          \"Roles\" : [ {\n            \"Ref\" : \"ADServerRole\"\n          } ],\n          \"Path\" : \"/\"\n        }\n      },\n      \"SecretRolePolicy\" : {\n        \"Condition\" : \"DoJoinAndPromote\",\n        \"Type\" : \"AWS::IAM::Policy\",\n        \"Properties\" : {\n          \"PolicyName\" : \"AWS-Mgd-AD-Secret-Role\",\n          \"PolicyDocument\" : {\n            \"Version\" : \"2012-10-17\",\n            \"Statement\" : [ {\n              \"Effect\" : \"Allow\",\n              \"Action\" : [ \"secretsmanager:GetSecretValue\", \"secretsmanager:DescribeSecret\" ],\n              \"Resource\" : [ {\n                \"Ref\" : \"AdministratorSecret\"\n              }, {\n                \"Ref\" : \"RestoreModeSecret\"\n              } ]\n            } ]\n          },\n          \"Roles\" : [ {\n            \"Ref\" : \"ADServerRole\"\n          } ]\n        }\n      },\n      \"DomainControllersSG\" : {\n        \"Type\" : \"AWS::EC2::SecurityGroup\",\n        \"Properties\" : {\n          \"GroupDescription\" : \"Domain Controllers Security Group\",\n          \"VpcId\" : {\n            \"Ref\" : \"VPCID\"\n          },\n          \"Tags\" : [ {\n            \"Key\" : \"Name\",\n            \"Value\" : \"DomainControllersSecurityGroup\"\n          } ]\n        }\n      },\n      \"DCSecurityGroupIngress\" : {\n        \"Type\" : \"AWS::EC2::SecurityGroupIngress\",\n        \"Properties\" : {\n          \"Description\" : \"Security Group Rule between Domain Controllers\",\n          \"GroupId\" : {\n            \"Ref\" : \"DomainControllersSG\"\n          },\n          \"IpProtocol\" : \"-1\",\n          \"FromPort\" : -1,\n          \"ToPort\" : -1,\n          \"SourceSecurityGroupId\" : {\n            \"Ref\" : \"DomainControllersSG\"\n          }\n        }\n      },\n      \"ExistingDCSecurityGroupIngress\" : {\n        \"Condition\" : \"DoJoinAndPromote\",\n        \"Type\" : \"AWS::EC2::SecurityGroupIngress\",\n        \"Properties\" : {\n          \"Description\" : \"Security Group Rule between Domain Controllers\",\n          \"GroupId\" : {\n            \"Ref\" : \"ExistingDomainControllersSG\"\n          },\n          \"IpProtocol\" : \"-1\",\n          \"FromPort\" : -1,\n          \"ToPort\" : -1,\n          \"SourceSecurityGroupId\" : {\n            \"Ref\" : \"DomainControllersSG\"\n          }\n        }\n      },\n      \"DomainController1\" : {\n        \"Type\" : \"AWS::EC2::Instance\",\n        \"Properties\" : {\n          \"ImageId\" : {\n            \"Ref\" : \"LatestAmiId\"\n          },\n          \"IamInstanceProfile\" : {\n            \"Ref\" : \"ADServerProfile\"\n          },\n          \"InstanceType\" : {\n            \"Ref\" : \"ADServerInstanceType\"\n          },\n          \"SubnetId\" : {\n            \"Ref\" : \"Subnet1ID\"\n          },\n          \"Tags\" : [ {\n            \"Key\" : \"Name\",\n            \"Value\" : {\n              \"Ref\" : \"ADServer1NetBIOSName\"\n            }\n          }, {\n            \"Key\" : \"Domain\",\n            \"Value\" : {\n              \"Ref\" : \"DomainDNSName\"\n            }\n          }, {\n            \"Key\" : \"Role\",\n            \"Value\" : \"Domain Controller\"\n          } ],\n          \"BlockDeviceMappings\" : [ {\n            \"DeviceName\" : \"/dev/sda1\",\n            \"Ebs\" : {\n              \"VolumeSize\" : 60,\n              \"VolumeType\" : \"gp3\",\n              \"Encrypted\" : true,\n              \"KmsKeyId\" : {\n                \"Ref\" : \"EbsEncryptionKmsKeyId\"\n              },\n              \"DeleteOnTermination\" : true\n            }\n          }, {\n            \"DeviceName\" : \"/dev/xvdf\",\n            \"Ebs\" : {\n              \"VolumeSize\" : {\n                \"Ref\" : \"DataDriveSizeGiB\"\n              },\n              \"VolumeType\" : \"gp3\",\n              \"Encrypted\" : true,\n              \"KmsKeyId\" : {\n                \"Ref\" : \"EbsEncryptionKmsKeyId\"\n              },\n              \"DeleteOnTermination\" : true\n            }\n          } ],\n          \"SecurityGroupIds\" : [ {\n            \"Ref\" : \"DomainControllersSG\"\n          } ],\n          \"PrivateIpAddress\" : {\n            \"Ref\" : \"ADServer1PrivateIP\"\n          },\n          \"KeyName\" : {\n            \"Ref\" : \"KeyPairName\"\n          }\n        }\n      },\n      \"DomainController2\" : {\n        \"Condition\" : \"DoNOTJoinAndPromote\",\n        \"CreationPolicy\" : {\n          \"ResourceSignal\" : {\n            \"Timeout\" : \"PT60M\",\n            \"Count\" : 1\n          }\n        },\n        \"DependsOn\" : \"DomainController1\",\n        \"Type\" : \"AWS::EC2::Instance\",\n        \"Properties\" : {\n          \"ImageId\" : {\n            \"Ref\" : \"LatestAmiId\"\n          },\n          \"IamInstanceProfile\" : {\n            \"Ref\" : \"ADServerProfile\"\n          },\n          \"InstanceType\" : {\n            \"Ref\" : \"ADServerInstanceType\"\n          },\n          \"SubnetId\" : {\n            \"Ref\" : \"Subnet2ID\"\n          },\n          \"Tags\" : [ {\n            \"Key\" : \"Name\",\n            \"Value\" : {\n              \"Ref\" : \"ADServer2NetBIOSName\"\n            }\n          }, {\n            \"Key\" : \"Domain\",\n            \"Value\" : {\n              \"Ref\" : \"DomainDNSName\"\n            }\n          }, {\n            \"Key\" : \"Role\",\n            \"Value\" : \"Domain Controller\"\n          } ],\n          \"BlockDeviceMappings\" : [ {\n            \"DeviceName\" : \"/dev/sda1\",\n            \"Ebs\" : {\n              \"VolumeSize\" : 60,\n              \"VolumeType\" : \"gp3\",\n              \"Encrypted\" : true,\n              \"KmsKeyId\" : {\n                \"Ref\" : \"EbsEncryptionKmsKeyId\"\n              },\n              \"DeleteOnTermination\" : true\n            }\n          }, {\n            \"DeviceName\" : \"/dev/xvdf\",\n            \"Ebs\" : {\n              \"VolumeSize\" : {\n                \"Ref\" : \"DataDriveSizeGiB\"\n              },\n              \"VolumeType\" : \"gp3\",\n              \"Encrypted\" : true,\n              \"KmsKeyId\" : {\n                \"Ref\" : \"EbsEncryptionKmsKeyId\"\n              },\n              \"DeleteOnTermination\" : true\n            }\n          } ],\n          \"SecurityGroupIds\" : [ {\n            \"Ref\" : \"DomainControllersSG\"\n          } ],\n          \"PrivateIpAddress\" : {\n            \"Ref\" : \"ADServer2PrivateIP\"\n          },\n          \"KeyName\" : {\n            \"Ref\" : \"KeyPairName\"\n          },\n          \"UserData\" : {\n            \"Fn::Base64\" : {\n              \"Fn::Sub\" : [ \"<powershell>\\n$Params = @{\\n    ADServer1NetBIOSName = '${ADServer1NetBIOSName}'\\n    ADServer2NetBIOSName = '${ADServer2NetBIOSName}'\\n    DomainDNSName = '${DomainDNSName}'\\n    DomainNetBIOSName = '${DomainNetBIOSName}'\\n    EnableAdvancedAudtingandMetrics = '${EnableAdvancedAudtingandMetrics}'\\n    ExistingDomainController1IP = '${ExistingDomainController1IP}'\\n    ExistingDomainController2IP = '${ExistingDomainController2IP}'\\n    QSS3BucketName = '${QSS3BucketName}'\\n    QSS3BucketRegion =  '${QSS3BucketRegion}'\\n    QSS3KeyPrefix = '${QSS3KeyPrefix}'\\n    StackName = '${AWS::StackName}'\\n    URLSuffix = '${AWS::URLSuffix}'\\n    VPCCIDR = '${VPCCIDR}'\\n}\\nStart-SSMAutomationExecution -DocumentName '${AWSQuickstartActiveDirectoryDS}' -Parameter $Params\\n</powershell>\\n\", {\n                \"QSS3BucketName\" : {\n                  \"Fn::If\" : [ \"UsingDefaultBucket\", {\n                    \"Fn::Sub\" : \"${QSS3BucketName}-${AWS::Region}\"\n                  }, {\n                    \"Fn::Sub\" : \"${QSS3BucketName}\"\n                  } ]\n                },\n                \"QSS3BucketRegion\" : {\n                  \"Fn::If\" : [ \"UsingDefaultBucket\", {\n                    \"Fn::Sub\" : \"${AWS::Region}\"\n                  }, {\n                    \"Fn::Sub\" : \"${QSS3BucketRegion}\"\n                  } ]\n                }\n              } ]\n            }\n          }\n        }\n      },\n      \"DomainController2Promote\" : {\n        \"Condition\" : \"DoJoinAndPromote\",\n        \"CreationPolicy\" : {\n          \"ResourceSignal\" : {\n            \"Timeout\" : \"PT60M\",\n            \"Count\" : 1\n          }\n        },\n        \"DependsOn\" : \"DomainController1\",\n        \"Type\" : \"AWS::EC2::Instance\",\n        \"Properties\" : {\n          \"ImageId\" : {\n            \"Ref\" : \"LatestAmiId\"\n          },\n          \"IamInstanceProfile\" : {\n            \"Ref\" : \"ADServerProfile\"\n          },\n          \"InstanceType\" : {\n            \"Ref\" : \"ADServerInstanceType\"\n          },\n          \"SubnetId\" : {\n            \"Ref\" : \"Subnet2ID\"\n          },\n          \"Tags\" : [ {\n            \"Key\" : \"Name\",\n            \"Value\" : {\n              \"Ref\" : \"ADServer2NetBIOSName\"\n            }\n          }, {\n            \"Key\" : \"Domain\",\n            \"Value\" : {\n              \"Ref\" : \"DomainDNSName\"\n            }\n          }, {\n            \"Key\" : \"Role\",\n            \"Value\" : \"Domain Controller\"\n          } ],\n          \"BlockDeviceMappings\" : [ {\n            \"DeviceName\" : \"/dev/sda1\",\n            \"Ebs\" : {\n              \"VolumeSize\" : 60,\n              \"VolumeType\" : \"gp3\",\n              \"Encrypted\" : true,\n              \"KmsKeyId\" : {\n                \"Ref\" : \"EbsEncryptionKmsKeyId\"\n              },\n              \"DeleteOnTermination\" : true\n            }\n          }, {\n            \"DeviceName\" : \"/dev/xvdf\",\n            \"Ebs\" : {\n              \"VolumeSize\" : {\n                \"Ref\" : \"DataDriveSizeGiB\"\n              },\n              \"VolumeType\" : \"gp3\",\n              \"Encrypted\" : true,\n              \"KmsKeyId\" : {\n                \"Ref\" : \"EbsEncryptionKmsKeyId\"\n              },\n              \"DeleteOnTermination\" : true\n            }\n          } ],\n          \"SecurityGroupIds\" : [ {\n            \"Ref\" : \"DomainControllersSG\"\n          } ],\n          \"PrivateIpAddress\" : {\n            \"Ref\" : \"ADServer2PrivateIP\"\n          },\n          \"KeyName\" : {\n            \"Ref\" : \"KeyPairName\"\n          },\n          \"UserData\" : {\n            \"Fn::Base64\" : {\n              \"Fn::Sub\" : [ \"<powershell>\\n$Params = @{\\n    ADAdminSecParamName = '${AdministratorSecret}'\\n    ADServer1NetBIOSName = '${ADServer1NetBIOSName}'\\n    ADServer1PrivateIP = '${ADServer1PrivateIP}'\\n    ADServer2NetBIOSName = '${ADServer2NetBIOSName}'\\n    ADServer2PrivateIP = '${ADServer2PrivateIP}'\\n    DomainDNSName = '${DomainDNSName}'\\n    DomainNetBIOSName = '${DomainNetBIOSName}'\\n    EnableAdvancedAudtingandMetrics = '${EnableAdvancedAudtingandMetrics}'\\n    ExistingDomainController1IP = '${ExistingDomainController1IP}'\\n    RestoreModeSecParamName = '${RestoreModeSecret}'\\n    QSS3BucketName = '${QSS3BucketName}'\\n    QSS3BucketRegion =  '${QSS3BucketRegion}'\\n    QSS3KeyPrefix = '${QSS3KeyPrefix}'\\n    StackName = '${AWS::StackName}'\\n    URLSuffix = '${AWS::URLSuffix}'\\n    VPCCIDR = '${VPCCIDR}'\\n}\\nStart-SSMAutomationExecution -DocumentName '${AWSQuickstartActiveDirectoryDSPromote}' -Parameter $Params\\n</powershell>\\n\", {\n                \"QSS3BucketName\" : {\n                  \"Fn::If\" : [ \"UsingDefaultBucket\", {\n                    \"Fn::Sub\" : \"${QSS3BucketName}-${AWS::Region}\"\n                  }, {\n                    \"Fn::Sub\" : \"${QSS3BucketName}\"\n                  } ]\n                },\n                \"QSS3BucketRegion\" : {\n                  \"Fn::If\" : [ \"UsingDefaultBucket\", {\n                    \"Fn::Sub\" : \"${AWS::Region}\"\n                  }, {\n                    \"Fn::Sub\" : \"${QSS3BucketRegion}\"\n                  } ]\n                }\n              } ]\n            }\n          }\n        }\n      },\n      \"ADResourceGroup\" : {\n        \"Condition\" : \"AppInsightsEnabled\",\n        \"Type\" : \"AWS::ResourceGroups::Group\",\n        \"Properties\" : {\n          \"Name\" : {\n            \"Fn::If\" : [ \"UsingDefaultAppName\", {\n              \"Fn::Sub\" : \"ApplicationInsights-${AWS::StackName}\"\n            }, {\n              \"Ref\" : \"AppInsightsApplicationName\"\n            } ]\n          },\n          \"ResourceQuery\" : {\n            \"Query\" : {\n              \"TagFilters\" : [ {\n                \"Key\" : \"aws:cloudformation:stack-name\",\n                \"Values\" : [ {\n                  \"Fn::Sub\" : \"${AWS::StackName}\"\n                } ]\n              } ]\n            },\n            \"Type\" : \"TAG_FILTERS_1_0\"\n          }\n        }\n      },\n      \"ApplicationInsightsAD\" : {\n        \"Condition\" : \"AppInsightsEnabled\",\n        \"Type\" : \"AWS::ApplicationInsights::Application\",\n        \"Properties\" : {\n          \"ResourceGroupName\" : {\n            \"Ref\" : \"ADResourceGroup\"\n          },\n          \"AutoConfigurationEnabled\" : true\n        },\n        \"DependsOn\" : \"ADResourceGroup\"\n      }\n    },\n    \"Outputs\" : {\n      \"DC1InstanceId\" : {\n        \"Value\" : {\n          \"Ref\" : \"DomainController1\"\n        },\n        \"Description\" : \"Domain Controller instance ID\"\n      }\n    }\n  }\n}",
  "CreatedDate": "2023-02-20T22:35:02.118Z",
  "DisplayName": null,
  "DocumentFormat": {
    "Value": "JSON"
  },
  "DocumentType": {
    "Value": "CloudFormation"
  },
  "DocumentVersion": "12",
  "Name": "AWSQuickStarts-Microsoft-AD-Extend-OnPrem-Existing-VPC",
  "Requires": [],
  "ReviewStatus": null,
  "Status": {
    "Value": "Active"
  },
  "StatusInformation": null,
  "VersionName": "AWSQuickStarts-Microsoft-AD-Extend-OnPrem-Existing-VPC-2023-02-20-22-28-55",
  "ResponseMetadata": {
    "RequestId": "c864ef50-dab3-4175-9e08-027c41495bd3",
    "Metadata": {},
    "ChecksumAlgorithm": 0,
    "ChecksumValidationStatus": 0
  },
  "ContentLength": 82733,
  "HttpStatusCode": 200,
  "LoggedAt": "2023-03-10T07:12:55.6357243+00:00"
}
