{
  "AttachmentsContent": [],
  "Content": "{\n  \"description\" : \"This action will install the AWS Elastic Disaster Recovery (DRS) Replication Agent on an EC2 instance.\\n\",\n  \"schemaVersion\" : \"2.2\",\n  \"parameters\" : {\n    \"Region\" : {\n      \"type\" : \"String\",\n      \"description\" : \"(Required) AWS Region into which you are replicating.\",\n      \"allowedValues\" : [ \"us-east-1\", \"us-east-2\", \"us-west-1\", \"us-west-2\", \"ap-southeast-1\", \"ap-southeast-2\", \"ap-northeast-1\", \"ap-northeast-2\", \"ap-northeast-3\", \"eu-central-1\", \"eu-west-1\", \"eu-west-2\", \"eu-west-3\", \"ca-central-1\", \"ap-south-1\", \"sa-east-1\", \"eu-north-1\", \"me-south-1\", \"af-south-1\", \"ap-east-1\", \"eu-south-1\" ]\n    },\n    \"Tags\" : {\n      \"type\" : \"String\",\n      \"description\" : \"(Optional) Use this parameter to add resource tags to the Source server. Use a space to separate each tag (for example --tags KEY=VALUE [KEY=VALUE ...])\",\n      \"default\" : \"\",\n      \"allowedPattern\" : \"^(([a-zA-Z_0-9]{1,50}=[a-zA-Z_0-9]{1,50})( [a-zA-Z_0-9]{1,50}=[a-zA-Z_0-9]{1,50}){0,20})?$\"\n    }\n  },\n  \"mainSteps\" : [ {\n    \"action\" : \"aws:runPowerShellScript\",\n    \"name\" : \"InstallWindowsAgent\",\n    \"precondition\" : {\n      \"StringEquals\" : [ \"platformType\", \"Windows\" ]\n    },\n    \"inputs\" : {\n      \"timeoutSeconds\" : \"3600\",\n      \"runCommand\" : [ \"Remove-Item -LiteralPath 'C:/tempDRS' -Force -Recurse -ErrorAction Ignore\", \"try {\", \"mkdir C:/tempDRS\", \"cd C:/tempDRS\", \"}\", \"catch {\", \"Write-Error \\\"Failed while creating temporary directory for script invocation\\\"\", \"exit 1\", \"}\", \"try {\", \"Invoke-WebRequest https://aws-elastic-disaster-recovery-{{Region}}.s3.{{Region}}.amazonaws.com/latest/windows/AwsReplicationWindowsInstaller.exe -OutFile AwsReplicationWindowsInstaller.exe\", \"Invoke-WebRequest https://aws-elastic-disaster-recovery-hashes-{{Region}}.s3.{{Region}}.amazonaws.com/latest/windows/AwsReplicationWindowsInstaller.exe.sha512 -OutFile AwsReplicationWindowsInstaller.exe.sha512\", \"}\", \"catch {\", \"Write-Error \\\"Failed while trying to download the AWS Elastic Disaster Recovery client\\\"\", \"exit 1\", \"}\", \"try {\", \"$psMajorVersion=$PSVersionTable.PSVersion.Major\", \"if ( $psMajorVersion -lt 4 ) {\", \"$hashAlgorithm = [Security.Cryptography.HashAlgorithm]::Create(\\\"SHA512\\\")\", \"$fileBytes = [io.File]::ReadAllBytes(\\\"C:/tempDRS/AwsReplicationWindowsInstaller.exe\\\")\", \"$hashBytes = $hashAlgorithm.ComputeHash($fileBytes)\", \"$fileHash = -Join ($hashBytes | ForEach {\\\"{0:x2}\\\" -f $_})\", \"} else {\", \"$hashObject = Get-FileHash -Algorithm SHA512 -Path AwsReplicationWindowsInstaller.exe\", \"$fileHash = $hashObject.Hash\", \"}\", \"$hash = Get-Content AwsReplicationWindowsInstaller.exe.sha512\", \"}\", \"catch {\", \"Write-Error \\\"Failed while trying to verify downloaded client hash\\\"\", \"exit 1\", \"}\", \"try {\", \"if($fileHash -eq $hash){\", \"$requestedTags=\\\"{{Tags}}\\\"\", \"$process = New-object System.Diagnostics.Process\", \"$startInfo = New-object System.Diagnostics.ProcessStartInfo\", \"$startInfo.FileName = \\\"C:\\\\tempDRS\\\\AwsReplicationWindowsInstaller.exe\\\"\", \"if ( $requestedTags ) { $startInfo.Arguments = \\\"--no-prompt --region {{Region}} --tags {{Tags}}\\\"} else { $startInfo.Arguments = \\\"--no-prompt --region {{Region}}\\\" }\", \"$startInfo.WorkingDirectory=\\\"C:\\\\tempDRS\\\"\", \"$startInfo.UseShellExecute=$False\", \"$process.StartInfo = $startInfo\", \"$process.Start()\", \"$process.WaitForExit()\", \"$result = $process.ExitCode\", \"}else{\", \"Write-Error \\\"Checksum validation failed\\\"\", \"exit 1\", \"}\", \"cd C:/\", \"Remove-Item -LiteralPath 'C:/tempDRS' -Force -Recurse\", \"if( $result -ne 0 ){\", \"Write-Error \\\"Installation failed\\\"\", \"exit $result\", \"}\", \"}\", \"catch {\", \"Write-Error \\\"General error during agent installation\\\"\", \"Write-Error $_\", \"Write-Error $_.ScriptStackTrace\", \"exit 1\", \"}\" ]\n    }\n  }, {\n    \"action\" : \"aws:runShellScript\",\n    \"name\" : \"InstallLinuxAgent\",\n    \"precondition\" : {\n      \"StringEquals\" : [ \"platformType\", \"Linux\" ]\n    },\n    \"inputs\" : {\n      \"timeoutSeconds\" : \"3600\",\n      \"runCommand\" : [ \"sudo curl -o ./aws-installer.sha512 https://aws-elastic-disaster-recovery-hashes-{{ Region }}.s3.{{ Region }}.amazonaws.com/latest/linux/aws-replication-installer-init.py.sha512\", \"asset_hash=$(cat ./aws-installer.sha512)\", \"sudo curl -o ./aws-replication-installer-init.py https://aws-elastic-disaster-recovery-{{ Region }}.s3.{{ Region }}.amazonaws.com/latest/linux/aws-replication-installer-init.py\", \"computed_hash=$(sha512sum ./aws-replication-installer-init.py | cut -d' ' -f1)\", \"if [ \\\"$computed_hash\\\" != \\\"$asset_hash\\\" ]; then\", \"echo \\\"Checksum validation failed\\\" >&2\", \"else\", \"pyexec=python3\", \"which python3\", \"ispy3=$?\", \"if [ $ispy3 -eq 1 ]; then pyexec=python; fi\", \"cat << EOF > install_agent.py\", \"#!/usr/bin/python\", \"import subprocess\", \"import shlex\", \"raw_cmd = \\\"$pyexec aws-replication-installer-init.py --no-prompt --region {0} \\\".format('{{ Region }}')\", \"if len('{{ Tags }}' ) > 0:\", \"   raw_cmd += \\\" --tags {0} \\\".format('{{ Tags }}')\", \"cmd = shlex.split(raw_cmd)\", \"try:\", \"   response = subprocess.check_output(cmd, shell=False)\", \"except Exception as e:\", \"   print(e)\", \"   exit(1)\", \"exit(0)\", \"EOF\", \"chmod +x install_agent.py\", \"$pyexec install_agent.py\", \"result=$?\", \"fi\", \"rm -f ./aws-installer.sha512 ./aws-replication-installer-init.py\", \"rm -f install_agent.py\", \"exit $result\" ]\n    }\n  } ]\n}",
  "CreatedDate": "2022-07-11T00:44:17.504Z",
  "DisplayName": null,
  "DocumentFormat": {
    "Value": "JSON"
  },
  "DocumentType": {
    "Value": "Command"
  },
  "DocumentVersion": "5",
  "Name": "AWSDisasterRecovery-InstallDRAgentOnInstance",
  "Requires": [],
  "ReviewStatus": null,
  "Status": {
    "Value": "Active"
  },
  "StatusInformation": null,
  "VersionName": null,
  "ResponseMetadata": {
    "RequestId": "1cac92ac-d151-426e-bff0-2af54e3d497d",
    "Metadata": {},
    "ChecksumAlgorithm": 0,
    "ChecksumValidationStatus": 0
  },
  "ContentLength": 5927,
  "HttpStatusCode": 200,
  "LoggedAt": "2022-09-21T07:39:20.1641938+00:00"
}
