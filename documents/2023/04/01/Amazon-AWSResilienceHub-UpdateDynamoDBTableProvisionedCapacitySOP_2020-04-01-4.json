{
  "AttachmentsContent": [],
  "Content": "{\n  \"description\" : \"## Id\\nAWSResilienceHub-UpdateDynamoDBTableProvisionedCapacitySOP_2020-04-01\\n\\n## Intent\\nUpdate provisioned capacity for DynamoDB Table\\n\\n## Type\\nSOP\\n\\n## Risk\\nSmall\\n\\n## Requirements\\n  * DynamoDB table\\n\\n## Permissions required for AutomationAssumeRole\\n  * dynamodb:UpdateTable\\n  * dynamodb:DescribeTable\\n  * ssm:GetAutomationExecution\\n\\n## Cancellation behavior\\nFail\\n\\n## Inputs\\n### (Required) AutomationAssumeRole\\n  * type: String\\n  * description: ARN of the IAM role with permissions listed above\\n\\n### (Required) DynamoDBTableName\\n  * type: String\\n  * description: DynamoDB Table Name\\n\\n### (Required) DynamoDBTableRCU\\n  * type: String\\n  * description:  Requested DynamoDB table Read Capacity Units\\n\\n### (Required) DynamoDBTableWCU\\n  * type: String\\n  * description: Requested DynamoDB table Write Capacity Units\\n\\n## Details\\nThe document updates DynamoDB table provisioned read and write capacity units and verifies that that table\\nis active.\\n\\n## Steps executed in normal flow\\n  * RecordStartTime\\n  * UpdateDynamoDBTableProvisionedCapacity\\n  * VerifyDynamoDBTableUpdateStatus\\n  * GetUpdatedProvisionedThroughput\\n  * OutputRecoveryTime\\n\\n## Outputs\\n### GetUpdatedProvisionedThroughput.ReadCapacityUnits\\n  * type: Integer\\n  * description: DynamoDB table Read Capacity Units after update\\n\\n### GetUpdatedProvisionedThroughput.WriteCapacityUnits\\n  * type: Integer\\n  * description: DynamoDB table Write Capacity Units after update\\n\\n### OutputRecoveryTime.RecoveryTime\\n  * type: Integer\\n  * description: Time to recover in seconds\",\n  \"schemaVersion\" : \"0.3\",\n  \"assumeRole\" : \"{{ AutomationAssumeRole }}\",\n  \"parameters\" : {\n    \"DynamoDBTableName\" : {\n      \"type\" : \"String\",\n      \"description\" : \"(Required) The DynamoDB Table Name.\"\n    },\n    \"DynamoDBTableRCU\" : {\n      \"type\" : \"Integer\",\n      \"description\" : \"(Required) The DynamoDB Table Read Capacity Units.\"\n    },\n    \"DynamoDBTableWCU\" : {\n      \"type\" : \"Integer\",\n      \"description\" : \"(Required) The DynamoDB Table Write Capacity Units.\"\n    },\n    \"AutomationAssumeRole\" : {\n      \"type\" : \"String\",\n      \"description\" : \"(Required) The ARN of the role that allows Automation to perform the actions on your behalf.\"\n    }\n  },\n  \"outputs\" : [ \"GetUpdatedProvisionedThroughput.ReadCapacityUnits\", \"GetUpdatedProvisionedThroughput.WriteCapacityUnits\", \"OutputRecoveryTime.RecoveryTime\" ],\n  \"mainSteps\" : [ {\n    \"name\" : \"RecordStartTime\",\n    \"description\" : \"Start recording execution time\",\n    \"action\" : \"aws:executeScript\",\n    \"outputs\" : [ {\n      \"Name\" : \"StartTime\",\n      \"Selector\" : \"$.Payload\",\n      \"Type\" : \"String\"\n    } ],\n    \"inputs\" : {\n      \"Runtime\" : \"python3.8\",\n      \"Handler\" : \"start_time\",\n      \"Script\" : \"import logging\\nimport time\\nfrom datetime import datetime, timezone\\n\\nimport boto3\\nfrom botocore.exceptions import ClientError\\nfrom dateutil import parser\\n\\nlogger = logging.getLogger()\\nlogger.setLevel(logging.INFO)\\n\\n\\n\\ndef start_time(events, context):\\n    return datetime.now(timezone.utc).isoformat()\"\n    }\n  }, {\n    \"name\" : \"AssertBillingModeProvisioned\",\n    \"description\" : \"Asserts that billing mode iS PROVISIONED\",\n    \"action\" : \"aws:executeScript\",\n    \"inputs\" : {\n      \"Runtime\" : \"python3.8\",\n      \"Handler\" : \"validate_billing_mode\",\n      \"Script\" : \"import logging\\nimport random\\nimport time\\nfrom typing import Any, Callable, Iterator, List\\n\\nimport boto3\\nfrom botocore.config import Config\\n\\nboto3_config = Config(retries={'max_attempts': 20, 'mode': 'standard'})\\nlogger = logging.getLogger()\\nlogger.setLevel(logging.INFO)\\n\\nENABLED_INSIGHTS_STATUSES = ['ENABLING', 'ENABLED']\\nGLOBAL_TABLE_ACTIVE_STATUSES = ['ACTIVE']\\n\\n\\n\\ndef _execute_boto3_dynamodb(delegate: Callable[[Any], dict]) -> dict:\\n    \\\"\\\"\\\"\\n    Executes the given delegate with dynamodb client parameter\\n    :param delegate: The delegate to execute (with boto3 function)\\n    :return: The output of the given function\\n    \\\"\\\"\\\"\\n    dynamo_db_client = boto3.client('dynamodb', config=boto3_config)\\n    description = delegate(dynamo_db_client)\\n    if not description['ResponseMetadata']['HTTPStatusCode'] == 200:\\n        logging.error(description)\\n        raise ValueError('Failed to execute request')\\n    return description\\n\\n\\n\\ndef _describe_table(table_name: str) -> dict:\\n    \\\"\\\"\\\"\\n    Describes the given dynamodb table\\n    :param table_name: The table name\\n    :return: The dictionary of table description properties\\n    \\\"\\\"\\\"\\n    return _execute_boto3_dynamodb(\\n        delegate=lambda x: x.describe_table(TableName=table_name))\\n\\n\\n\\ndef validate_billing_mode(events: dict, context: dict) -> None:\\n    \\\"\\\"\\\"\\n    Validate billing mode to be specific value.\\n    :param events: The dictionary that supposed to have the following keys:\\n    * `ExpectedValues` - The list of values the property expected to be\\n    * `TableName` - The target table name\\n    :return: The status of continuous backup\\n    \\\"\\\"\\\"\\n    if 'ExpectedValues' not in events:\\n        raise KeyError('Requires ExpectedValues')\\n    if 'TableName' not in events:\\n        raise KeyError('Requires TableName')\\n\\n    table_name: str = events['TableName']\\n    expected_values: List[str] = events['ExpectedValues']\\n\\n    description = _describe_table(table_name=table_name)\\n    billing_mode = description.get('Table', {}).get('BillingModeSummary', {}).get('BillingMode', '')\\n\\n    # process empty property case\\n    if not billing_mode and (not expected_values or '' in expected_values or None in expected_values):\\n        return\\n    else:\\n        if billing_mode not in expected_values:\\n            raise ValueError(\\n                f'BillingMode is required to be one of the following values {expected_values}, '\\n                'but was {match.value}')\",\n      \"InputPayload\" : {\n        \"ExpectedValues\" : [ \"PROVISIONED\", \"\" ],\n        \"TableName\" : \"{{ DynamoDBTableName }}\"\n      }\n    }\n  }, {\n    \"name\" : \"UpdateDynamoDBTableProvisionedCapacity\",\n    \"description\" : \"Update table's provisioned read and write capacity units\",\n    \"action\" : \"aws:executeAwsApi\",\n    \"onFailure\" : \"Abort\",\n    \"inputs\" : {\n      \"Service\" : \"dynamodb\",\n      \"Api\" : \"UpdateTable\",\n      \"TableName\" : \"{{ DynamoDBTableName }}\",\n      \"ProvisionedThroughput\" : {\n        \"ReadCapacityUnits\" : \"{{ DynamoDBTableRCU }}\",\n        \"WriteCapacityUnits\" : \"{{ DynamoDBTableWCU }}\"\n      }\n    }\n  }, {\n    \"name\" : \"VerifyDynamoDBTableUpdateStatus\",\n    \"description\" : \"Wait for the table to become active\",\n    \"action\" : \"aws:waitForAwsResourceProperty\",\n    \"onFailure\" : \"Abort\",\n    \"inputs\" : {\n      \"Service\" : \"dynamodb\",\n      \"Api\" : \"DescribeTable\",\n      \"TableName\" : \"{{ DynamoDBTableName }}\",\n      \"PropertySelector\" : \"$.Table.TableStatus\",\n      \"DesiredValues\" : [ \"ACTIVE\" ]\n    }\n  }, {\n    \"name\" : \"GetUpdatedProvisionedThroughput\",\n    \"description\" : \"Get updated provisioned read and write capacity units\",\n    \"action\" : \"aws:executeAwsApi\",\n    \"onFailure\" : \"Abort\",\n    \"inputs\" : {\n      \"Service\" : \"dynamodb\",\n      \"Api\" : \"DescribeTable\",\n      \"TableName\" : \"{{ DynamoDBTableName }}\"\n    },\n    \"outputs\" : [ {\n      \"Name\" : \"ReadCapacityUnits\",\n      \"Selector\" : \"$.Table.ProvisionedThroughput.ReadCapacityUnits\",\n      \"Type\" : \"Integer\"\n    }, {\n      \"Name\" : \"WriteCapacityUnits\",\n      \"Selector\" : \"$.Table.ProvisionedThroughput.WriteCapacityUnits\",\n      \"Type\" : \"Integer\"\n    } ]\n  }, {\n    \"name\" : \"OutputRecoveryTime\",\n    \"description\" : \"Calculate execution time\",\n    \"action\" : \"aws:executeScript\",\n    \"outputs\" : [ {\n      \"Name\" : \"RecoveryTime\",\n      \"Selector\" : \"$.Payload\",\n      \"Type\" : \"Integer\"\n    } ],\n    \"inputs\" : {\n      \"Runtime\" : \"python3.8\",\n      \"Handler\" : \"recovery_time\",\n      \"Script\" : \"import logging\\nimport time\\nfrom datetime import datetime, timezone\\n\\nimport boto3\\nfrom botocore.exceptions import ClientError\\nfrom dateutil import parser\\n\\nlogger = logging.getLogger()\\nlogger.setLevel(logging.INFO)\\n\\n\\n\\ndef recovery_time(events, context):\\n    return (datetime.now(timezone.utc) - parser.parse(events['StartTime'])).seconds\",\n      \"InputPayload\" : {\n        \"StartTime\" : \"{{ RecordStartTime.StartTime }}\"\n      }\n    }\n  } ]\n}",
  "CreatedDate": "2023-02-19T17:26:24.744Z",
  "DisplayName": null,
  "DocumentFormat": {
    "Value": "JSON"
  },
  "DocumentType": {
    "Value": "Automation"
  },
  "DocumentVersion": "4",
  "Name": "AWSResilienceHub-UpdateDynamoDBTableProvisionedCapacitySOP_2020-04-01",
  "Requires": [],
  "ReviewStatus": null,
  "Status": {
    "Value": "Active"
  },
  "StatusInformation": null,
  "VersionName": null,
  "ResponseMetadata": {
    "RequestId": "a1bcbc3d-3b34-4d56-9d09-bbccf98938a8",
    "Metadata": {},
    "ChecksumAlgorithm": 0,
    "ChecksumValidationStatus": 0
  },
  "ContentLength": 9161,
  "HttpStatusCode": 200,
  "LoggedAt": "2023-04-01T07:11:09.9502231+00:00"
}
