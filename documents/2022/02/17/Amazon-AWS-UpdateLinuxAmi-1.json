{
  "AttachmentsContent": [],
  "Content": "{\n  \"schemaVersion\":\"0.3\",\n  \"description\":\"Updates AMI with Linux distribution packages and Amazon software. For details,see https://docs.aws.amazon.com/systems-manager/latest/userguide/automation-awsdocs-linux.html\",\n  \"assumeRole\":\"{{AutomationAssumeRole}}\",\n  \"parameters\":{\n    \"SourceAmiId\":{\n      \"type\":\"String\",\n      \"description\":\"(Required) The source Amazon Machine Image ID.\"\n    },\n    \"IamInstanceProfileName\":{\n      \"type\":\"String\",\n      \"description\":\"(Required) The instance profile that enables Systems Manager (SSM) to manage the instance.\",\n      \"default\": \"ManagedInstanceProfile\"\n    },\n    \"AutomationAssumeRole\":{\n      \"type\":\"String\",\n      \"description\":\"(Required) The ARN of the role that allows Automation to perform the actions on your behalf.\",\n      \"default\":\"arn:aws:iam::{{global:ACCOUNT_ID}}:role/AutomationServiceRole\"\n    },\n    \"TargetAmiName\":{\n      \"type\":\"String\",\n      \"description\":\"(Optional) The name of the new AMI that will be created. Default is a system-generated string including the source AMI id, and the creation time and date.\",\n      \"default\":\"UpdateLinuxAmi_from_{{SourceAmiId}}_on_{{global:DATE_TIME}}\"\n    },\n    \"InstanceType\":{\n      \"type\":\"String\",\n      \"description\":\"(Optional) Type of instance to launch as the workspace host. Instance types vary by region. Default is t2.micro.\",\n      \"default\":\"t2.micro\"\n    },\n    \"SecurityGroupIds\": {\n      \"type\": \"StringList\",\n      \"description\": \"(Optional) A comma separated list of security group IDs with the required Inbound and Outbound connectivity rules.\",\n      \"allowedPattern\": \"^sg-[a-z0-9]{8,17}$\",\n      \"default\": []\n    },\n    \"SubnetId\": {\n      \"type\": \"String\",\n      \"description\": \"(Optional) Specify the SubnetId if you want to launch EC2 instance in a specific subnet.\",\n      \"default\": \"\"\n    },\n    \"PreUpdateScript\": {\n      \"type\": \"String\",\n      \"description\": \"(Optional) URL of a script to run before updates are applied. Default (\\\"none\\\") is to not run a script.\",\n      \"default\": \"none\"\n    },\n    \"PostUpdateScript\":{\n      \"type\":\"String\",\n      \"description\":\"(Optional) URL of a script to run after package updates are applied. Default (\\\"none\\\") is to not run a script.\",\n      \"default\":\"none\"\n    },\n    \"IncludePackages\":{\n      \"type\":\"String\",\n      \"description\":\"(Optional) Only update these named packages. By default (\\\"all\\\"), all available updates are applied.\",\n      \"default\":\"all\"\n    },\n    \"ExcludePackages\":{\n      \"type\":\"String\",\n      \"description\":\"(Optional) Names of packages to hold back from updates, under all conditions. By default (\\\"none\\\"), no package is excluded.\",\n      \"default\":\"none\"\n    }\n  },\n  \"mainSteps\":[\n    {\n      \"name\":\"launchInstance\",\n      \"action\":\"aws:runInstances\",\n      \"maxAttempts\":3,\n      \"timeoutSeconds\":1200,\n      \"onFailure\":\"Abort\",\n      \"inputs\":{\n        \"ImageId\":\"{{SourceAmiId}}\",\n        \"InstanceType\":\"{{InstanceType}}\",\n        \"UserData\":\"IyEvYmluL2Jhc2gKCmZ1bmN0aW9uIGdldF9jb250ZW50cygpIHsKICAgIGlmIFsgLXggIiQod2hpY2ggY3VybCkiIF07IHRoZW4KICAgICAgICBjdXJsIC1zIC1mICIkMSIKICAgIGVsaWYgWyAteCAiJCh3aGljaCB3Z2V0KSIgXTsgdGhlbgogICAgICAgIHdnZXQgIiQxIiAtTyAtCiAgICBlbHNlCiAgICAgICAgZGllICJObyBkb3dubG9hZCB1dGlsaXR5IChjdXJsLCB3Z2V0KSIKICAgIGZpCn0KCnJlYWRvbmx5IFRPS0VOX1VSTD0iaHR0cDovLzE2OS4yNTQuMTY5LjI1NC9sYXRlc3QvYXBpL3Rva2VuIgpmdW5jdGlvbiBnZXRfY29udGVudHNfSU1EU3YyKCkgewogICAgaWYgWyAteCAiJCh3aGljaCBjdXJsKSIgXTsgdGhlbgogICAgICAgIHJlYWRvbmx5IFRPS0VOPSQoY3VybCAtcyAtZiAtWCBQVVQgLUggIlgtYXdzLWVjMi1tZXRhZGF0YS10b2tlbi10dGwtc2Vjb25kczogMjE2MDAiICIkVE9LRU5fVVJMIikKICAgICAgICBjdXJsIC1zIC1mIC1IICJYLWF3cy1lYzItbWV0YWRhdGEtdG9rZW46ICRUT0tFTiIgIiQxIgogICAgZWxpZiBbIC14ICIkKHdoaWNoIHdnZXQpIiBdOyB0aGVuCiAgICAgICAgIyB3Z2V0IGRvZXNuJ3Qgc3VwcG9ydCAtLW1ldGhvZCBmbGFnIGluIG1hbnkgY2FzZXMsIHNvIGZhbGwgYmFjayBvbiBJTURTdjEKICAgICAgICB3Z2V0ICIkMSIgLU8gLQogICAgZWxzZQogICAgICAgIGRpZSAiTm8gZG93bmxvYWQgdXRpbGl0eSAoY3VybCwgd2dldCkiCiAgICBmaQp9CgpyZWFkb25seSBJREVOVElUWV9VUkw9Imh0dHA6Ly8xNjkuMjU0LjE2OS4yNTQvMjAxNi0wNi0zMC9keW5hbWljL2luc3RhbmNlLWlkZW50aXR5L2RvY3VtZW50LyIKcmVhZG9ubHkgVFJVRV9SRUdJT049JChnZXRfY29udGVudHNfSU1EU3YyICIkSURFTlRJVFlfVVJMIiB8IGF3ayAtRlwiICcvcmVnaW9uLyB7IHByaW50ICQ0IH0nKQpyZWFkb25seSBERUZBVUxUX1JFR0lPTj0idXMtZWFzdC0xIgpyZWFkb25seSBSRUdJT049IiR7VFJVRV9SRUdJT046LSRERUZBVUxUX1JFR0lPTn0iCgpyZWFkb25seSBTQ1JJUFRfTkFNRT0iYXdzLWluc3RhbGwtc3NtLWFnZW50IgpTQ1JJUFRfVVJMPSJodHRwczovL2F3cy1zc20tZG93bmxvYWRzLSRSRUdJT04uczMuYW1hem9uYXdzLmNvbS9zY3JpcHRzLyRTQ1JJUFRfTkFNRSIKCmlmIFsgIiRSRUdJT04iID09ICJ1cy1nb3Ytd2VzdC0xIiAtbyAiJFJFR0lPTiIgPT0gInVzLWdvdi1lYXN0LTEiIF07IHRoZW4KICBTQ1JJUFRfVVJMPSJodHRwczovL2F3cy1zc20tZG93bmxvYWRzLSRSRUdJT04uczMuJFJFR0lPTi5hbWF6b25hd3MuY29tL3NjcmlwdHMvJFNDUklQVF9OQU1FIgpmaQoKY2QgL3RtcApGSUxFX1NJWkU9MApNQVhfUkVUUllfQ09VTlQ9MwpSRVRSWV9DT1VOVD0wCgp3aGlsZSBbICRSRVRSWV9DT1VOVCAtbHQgJE1BWF9SRVRSWV9DT1VOVCBdIDsgZG8KICBlY2hvIEFXUy1VcGRhdGVMaW51eEFtaTogRG93bmxvYWRpbmcgc2NyaXB0IGZyb20gJFNDUklQVF9VUkwKICBnZXRfY29udGVudHMgIiRTQ1JJUFRfVVJMIiA+ICIkU0NSSVBUX05BTUUiCiAgRklMRV9TSVpFPSQoZHUgLWsgL3RtcC8kU0NSSVBUX05BTUUgfCBjdXQgLWYxKQogIGVjaG8gQVdTLVVwZGF0ZUxpbnV4QW1pOiBGaW5pc2hlZCBkb3dubG9hZGluZyBzY3JpcHQsIHNpemU6ICRGSUxFX1NJWkUKICBpZiBbICRGSUxFX1NJWkUgLWd0IDAgXTsgdGhlbgogICAgYnJlYWsKICBlbHNlCiAgICBpZiBbWyAkUkVUUllfQ09VTlQgLWx0IE1BWF9SRVRSWV9DT1VOVCBdXTsgdGhlbgogICAgICBSRVRSWV9DT1VOVD0kKChSRVRSWV9DT1VOVCsxKSk7CiAgICAgIGVjaG8gQVdTLVVwZGF0ZUxpbnV4QW1pOiBGaWxlU2l6ZSBpcyAwLCByZXRyeUNvdW50OiAkUkVUUllfQ09VTlQKICAgIGZpCiAgZmkgCmRvbmUKCmlmIFsgJEZJTEVfU0laRSAtZ3QgMCBdOyB0aGVuCiAgY2htb2QgK3ggIiRTQ1JJUFRfTkFNRSIKICBlY2hvIEFXUy1VcGRhdGVMaW51eEFtaTogUnVubmluZyBVcGRhdGVTU01BZ2VudCBzY3JpcHQgbm93IC4uLi4KICAuLyIkU0NSSVBUX05BTUUiIC0tcmVnaW9uICIkUkVHSU9OIgplbHNlCiAgZWNobyBBV1MtVXBkYXRlTGludXhBbWk6IFVuYWJsZSB0byBkb3dubG9hZCBzY3JpcHQsIHF1aXR0aW5nIC4uLi4KZmk=\",\n        \"MinInstanceCount\":1,\n        \"MaxInstanceCount\":1,\n        \"IamInstanceProfileName\":\"{{IamInstanceProfileName}}\",\n        \"SubnetId\":\"{{ SubnetId }}\",\n        \"SecurityGroupIds\":\"{{SecurityGroupIds}}\"\n      }\n    },\n    {\n      \"name\":\"verifySsmInstall\",\n      \"action\":\"aws:runCommand\",\n      \"maxAttempts\":3,\n      \"timeoutSeconds\":1200,\n      \"onFailure\":\"Abort\",\n      \"inputs\":{\n        \"DocumentName\":\"AWS-RunShellScript\",\n        \"InstanceIds\":[\n          \"{{launchInstance.InstanceIds}}\"\n        ],\n        \"Parameters\":{\n          \"commands\":[\n            \"hostname\"\n          ]\n        }\n      }\n    },\n    {\n      \"name\":\"updateOSSoftware\",\n      \"action\":\"aws:runCommand\",\n      \"maxAttempts\":3,\n      \"timeoutSeconds\":3600,\n      \"onFailure\":\"Abort\",\n      \"inputs\":{\n        \"DocumentName\":\"AWS-RunShellScript\",\n        \"InstanceIds\":[\n          \"{{launchInstance.InstanceIds}}\"\n        ],\n        \"Parameters\":{\n          \"commands\":[\n            \"#!/bin/bash\",\n            \"\",\n            \"set -e\",\n            \"\",\n            \"function unhold_deb_packages() {\",\n            \"    for package in $EXCLUDE_PACKAGES; do\",\n            \"        apt-mark unhold $package\",\n            \"    done\",\n            \"}\",\n            \"function removelock_zypper_packages() {\",\n            \"    for package in $EXCLUDE_PACKAGES; do\",\n            \"        zypper removelock $package\",\n            \"    done\",\n            \"}\",\n            \"\",\n            \"function die() {\",\n            \"    if [ \\\"$(get_dist)\\\" == \\\"debian\\\" ]; then\",\n            \"        unhold_deb_packages\",\n            \"    elif [ \\\"$(get_dist)\\\" == \\\"suse\\\" ]; then\",\n            \"        removelock_zypper_packages\",\n            \"    fi\",\n            \"\",\n            \"    echo \\\"$@\\\" >&2\",\n            \"    exit 1\",\n            \"}\",\n            \"\",\n            \"function get_contents() {\",\n            \"    if [ -x \\\"$(which curl)\\\" ]; then\",\n            \"        curl -s -f \\\"$1\\\"\",\n            \"    elif [ -x \\\"$(which wget)\\\" ]; then\",\n            \"        wget \\\"$1\\\" -O -\",\n            \"    else\",\n            \"        die \\\"No download utility (curl, wget)\\\"\",\n            \"    fi\",\n            \"}\",\n            \"\",\n            \"function sanitize_inputs() {\",\n            \"    value=\\\"$(echo $@ | sed 's/,/ /g' | xargs | xargs)\\\"\",\n            \"\",\n            \"    if [ ! -z \\\"$value\\\" ] &&\",\n            \"        [ \\\"$value\\\" != \\\"none\\\" ] &&\",\n            \"        [ \\\"$value\\\" != \\\"all\\\" ]; then\",\n            \"        echo \\\"$value\\\"\",\n            \"    fi\",\n            \"}\",\n            \"\",\n            \"function echo_options() {\",\n            \"    echo \\\\\\\"\\\\$PRE_UPDATE_SCRIPT_URL\\\\\\\" == \\\\\\\"$PRE_UPDATE_SCRIPT_URL\\\\\\\"\",\n            \"    echo \\\\\\\"\\\\$POST_UPDATE_SCRIPT_URL\\\\\\\" == \\\\\\\"$POST_UPDATE_SCRIPT_URL\\\\\\\"\",\n            \"    echo \\\\\\\"\\\\$INCLUDE_PACKAGES\\\\\\\" == \\\\\\\"$INCLUDE_PACKAGES\\\\\\\"\",\n            \"    echo \\\\\\\"\\\\$EXCLUDE_PACKAGES\\\\\\\" == \\\\\\\"$EXCLUDE_PACKAGES\\\\\\\"\",\n            \"}\",\n            \"\",\n            \"function exec_cmd() {\",\n            \"    echo \\\"Invoking $@...\\\"\",\n            \"    eval \\\"$@\\\"\",\n            \"\",\n            \"    if [ $? -ne 0 ]; then\",\n            \"        die \\\"\\\"\",\n            \"    fi\",\n            \"}\",\n            \"\",\n            \"function is_debuntu() {\",\n            \"    grep -E -i -c 'Debian|Ubuntu' /etc/issue 2>&1 &>/dev/null\",\n            \"    [ $? -eq 0 ] && echo \\\"true\\\" || echo \\\"false\\\"\",\n            \"}\",\n            \"\",\n            \"function is_redhat() {\",\n            \"    if [ -f \\\"/etc/system-release\\\" ] ||\",\n            \"        [ -f \\\"/etc/redhat-release\\\" ]; then\",\n            \"        echo \\\"true\\\"\",\n            \"    else\",\n            \"        echo \\\"false\\\"\",\n            \"    fi\",\n            \"}\",\n            \"\",\n            \"function is_suse() {\",\n            \"    if type zypper > /dev/null; then\",\n            \"        echo \\\"true\\\"\",\n            \"    else\",\n            \"        echo \\\"false\\\"\",\n            \"    fi\",\n            \"}\",\n            \"\",\n            \"function get_dist() {\",\n            \"    if [ \\\"$(is_debuntu)\\\" == \\\"true\\\" ]; then\",\n            \"        echo \\\"debian\\\"\",\n            \"    elif [ \\\"$(is_redhat)\\\" == \\\"true\\\" ]; then\",\n            \"        echo \\\"redhat\\\"\",\n            \"    elif [ \\\"$(is_suse)\\\" == \\\"true\\\" ]; then\",\n            \"        echo \\\"suse\\\"\",\n            \"    else\",\n            \"        die \\\"Unknown distribution\\\"\",\n            \"    fi\",\n            \"}\",\n            \"\",\n            \"function run_hook_script() {\",\n            \"    script_url=\\\"$1\\\"\",\n            \"    tmp_file=\\\"$(mktemp)\\\"\",\n            \"\",\n            \"    echo \\\"Downloading hook script from $script_url\\\"\",\n            \"\",\n            \"    get_contents \\\"$script_url\\\" > \\\"$tmp_file\\\"\",\n            \"    chmod +x \\\"$tmp_file\\\"\",\n            \"\",\n            \"    exec_cmd \\\"$tmp_file\\\"\",\n            \"}\",\n            \"\",\n            \"function update_cli() {\",\n            \"    if [ -x \\\"$(which pip 2>/dev/null)\\\" ]; then\",\n            \"        exec_cmd \\\"pip install --upgrade awscli\\\"\",\n            \"    fi\",\n            \"}\",\n            \"\",\n            \"function apt_get_update() {\",\n            \"\",\n            \"    dpkg_flags=\\\"-o Dpkg::Options::=--force-confdef -o Dpkg::Options::=--force-confold\\\"\",\n            \"    apt_noninteractive_cmd=\\\"DEBIAN_FRONTEND=noninteractive apt-get $dpkg_flags\\\"\",\n            \"\",\n            \"    exec_cmd \\\"apt-get clean\\\"\",\n            \"    exec_cmd \\\"apt-get update\\\"\",\n            \"\",\n            \"    for package in $EXCLUDE_PACKAGES; do\",\n            \"        exec_cmd \\\"apt-mark hold $package\\\"\",\n            \"    done\",\n            \"\",\n            \"    if [ -z \\\"$INCLUDE_PACKAGES\\\" ]; then\",\n            \"        exec_cmd \\\"$apt_noninteractive_cmd -y dist-upgrade\\\"\",\n            \"    else\",\n            \"        for package in $INCLUDE_PACKAGES; do\",\n            \"            exec_cmd \\\"$apt_noninteractive_cmd -y install --only-upgrade $package\\\"\",\n            \"        done\",\n            \"    fi\",\n            \"\",\n            \"    unhold_deb_packages\",\n            \"}\",\n            \"\",\n            \"function yum_upgrade() {\",\n            \"    exec_cmd 'yum clean all'\",\n            \"\",\n            \"    yum_cmd='yum -y upgrade'\",\n            \"\",\n            \"    for package in $EXCLUDE_PACKAGES; do\",\n            \"        yum_cmd=\\\"$yum_cmd -x $package\\\"\",\n            \"    done\",\n            \"\",\n            \"    if [ ! -z \\\"$INCLUDE_PACKAGES\\\" ]; then\",\n            \"        yum_cmd=\\\"$yum_cmd $INCLUDE_PACKAGES\\\"\",\n            \"    fi\",\n            \"\",\n            \"    exec_cmd \\\"$yum_cmd\\\"\",\n            \"}\",\n            \"function zypper_upgrade() {\",\n            \"    exec_cmd 'zypper clean'\",\n            \"    zypper_cmd='zypper update -y'\",\n            \"    for package in $EXCLUDE_PACKAGES; do\",\n            \"        exec_cmd \\\"zypper addlock $package\\\"\",\n            \"    done\",\n            \"\",\n            \"    if [ ! -z \\\"$INCLUDE_PACKAGES\\\" ]; then\",\n            \"        zypper_cmd=\\\"$zypper_cmd $INCLUDE_PACKAGES\\\"\",\n            \"    fi\",\n            \"\",\n            \"    exec_cmd \\\"$zypper_cmd\\\"\",\n            \"\",\n            \"    removelock_zypper_packages\",\n            \"}\",\n            \"\",\n            \"function remove_excludes_from_includes() {\",\n            \"    if [ -z \\\"$EXCLUDE_PACKAGES\\\" ] || [ -z \\\"$INCLUDE_PACKAGES\\\" ]; then\",\n            \"        return\",\n            \"    fi\",\n            \"\",\n            \"    declare -A includes\",\n            \"    declare -A excludes\",\n            \"\",\n            \"    for package in $EXCLUDE_PACKAGES; do\",\n            \"        excludes[$package]=\\\"true\\\"\",\n            \"    done\",\n            \"\",\n            \"    for package in $INCLUDE_PACKAGES; do\",\n            \"        if [ \\\"${excludes[$package]}\\\" != \\\"true\\\" ]; then\",\n            \"            includes[$package]=\\\"true\\\"\",\n            \"        fi\",\n            \"    done\",\n            \"\",\n            \"    INCLUDE_PACKAGES=\\\"${!includes[@]}\\\"\",\n            \"}\",\n            \"\",\n            \"function update_packages() {\",\n            \"    remove_excludes_from_includes\",\n            \"\",\n            \"    if [ \\\"$(get_dist)\\\" == \\\"debian\\\" ]; then\",\n            \"        apt_get_update\",\n            \"    elif [ \\\"$(get_dist)\\\" == \\\"redhat\\\" ]; then\",\n            \"        yum_upgrade\",\n            \"    else \",\n            \"        zypper_upgrade\",\n            \"    fi\",\n            \"}\",\n            \"\",\n            \"function main() {\",\n            \"    PRE_UPDATE_SCRIPT_URL=\\\"$(sanitize_inputs {{PreUpdateScript}})\\\"\",\n            \"    POST_UPDATE_SCRIPT_URL=\\\"$(sanitize_inputs {{PostUpdateScript}})\\\"\",\n            \"    INCLUDE_PACKAGES=\\\"$(sanitize_inputs {{IncludePackages}})\\\"\",\n            \"    EXCLUDE_PACKAGES=\\\"$(sanitize_inputs {{ExcludePackages}})\\\"\",\n            \"    echo_options\",\n            \"\",\n            \"    if [ ! -z \\\"$PRE_UPDATE_SCRIPT_URL\\\" ]; then\",\n            \"        run_hook_script \\\"$PRE_UPDATE_SCRIPT_URL\\\"\",\n            \"    fi\",\n            \"\",\n            \"    update_cli\",\n            \"    update_packages\",\n            \"\",\n            \"    if [ ! -z \\\"$POST_UPDATE_SCRIPT_URL\\\" ]; then\",\n            \"        run_hook_script \\\"$POST_UPDATE_SCRIPT_URL\\\"\",\n            \"    fi\",\n            \"\",\n            \"    exit 0\",\n            \"}\",\n            \"\",\n            \"main \\\"$@\\\"\"\n          ]\n        }\n      }\n    },\n    {\n      \"name\":\"stopInstance\",\n      \"action\":\"aws:changeInstanceState\",\n      \"maxAttempts\":3,\n      \"timeoutSeconds\":1200,\n      \"onFailure\":\"Abort\",\n      \"inputs\":{\n        \"InstanceIds\":[\n          \"{{launchInstance.InstanceIds}}\"\n        ],\n        \"DesiredState\":\"stopped\"\n      }\n    },\n    {\n      \"name\":\"createImage\",\n      \"action\":\"aws:createImage\",\n      \"maxAttempts\":3,\n      \"onFailure\":\"Abort\",\n      \"inputs\":{\n        \"InstanceId\":\"{{launchInstance.InstanceIds}}\",\n        \"ImageName\":\"{{TargetAmiName}}\",\n        \"NoReboot\":true,\n        \"ImageDescription\":\"AMI Generated by EC2 Automation on {{global:DATE_TIME}} from {{SourceAmiId}}\"\n      }\n    },\n    {\n      \"name\":\"terminateInstance\",\n      \"action\":\"aws:changeInstanceState\",\n      \"maxAttempts\":3,\n      \"onFailure\":\"Continue\",\n      \"inputs\":{\n        \"InstanceIds\":[\n          \"{{launchInstance.InstanceIds}}\"\n        ],\n        \"DesiredState\":\"terminated\"\n      }\n    }\n  ],\n  \"outputs\":[\n    \"createImage.ImageId\"\n  ]\n}\n",
  "CreatedDate": "2022-02-03T18:10:36.183Z",
  "DisplayName": null,
  "DocumentFormat": {
    "Value": "JSON"
  },
  "DocumentType": {
    "Value": "Automation"
  },
  "DocumentVersion": "1",
  "Name": "AWS-UpdateLinuxAmi",
  "Requires": [],
  "ReviewStatus": null,
  "Status": {
    "Value": "Active"
  },
  "StatusInformation": null,
  "VersionName": null,
  "ResponseMetadata": {
    "RequestId": "cc7a3424-f093-4c0a-8d36-0ada7a26c9e8",
    "Metadata": {}
  },
  "ContentLength": 18001,
  "HttpStatusCode": 200,
  "LoggedAt": "2022-02-17T07:11:29.7579506+00:00"
}
