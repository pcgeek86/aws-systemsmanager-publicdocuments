{
  "AttachmentsContent": [],
  "Content": "{\n  \"description\": \"---\\nThis runbook helps you configure Instance Metadata Service (IMDS) options for Amazon Elastic Compute Cloud (Amazon EC2) instances. Using this runbook, you can configure the following:\\n* Enforce the use of IMDSv2 for instance metadata\\n* Configure the `HttpPutResponseHopLimit` value\\n* Allow or deny instance metadata access\\n\\nFor information about instance metadata, see [Configuring the Instance Metadata Service](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/configuring-instance-metadata-service.html) in the *Amazon EC2 User Guide for Linux Instances*.\",\n  \"schemaVersion\": \"0.3\",\n  \"assumeRole\": \"{{AutomationAssumeRole}}\",\n  \"outputs\": [\n    \"describeMetadataOptions.State\",\n    \"describeMetadataOptions.MetadataAccess\",\n    \"describeMetadataOptions.IMDSv2\",\n    \"describeMetadataOptions.HttpPutResponseHopLimit\"\n  ],\n  \"parameters\": {\n    \"InstanceId\": {\n      \"type\": \"String\",\n      \"allowedPattern\": \"^i-[a-z0-9]{8}$|^i-[a-z0-9]{17}$\",\n      \"description\": \"(Required) The ID of the Amazon EC2 instance whose metadata settings you want to configure.\"\n    },\n    \"HttpPutResponseHopLimit\": {\n      \"type\": \"Integer\",\n      \"allowedPattern\": \"^([0-9]|[1-5][0-9]|6[0-4])$\",\n      \"default\": 0,\n      \"description\": \"(Optional) The desired HTTP PUT response hop limit value (1-64) for instance metadata requests. This value controls the number of hops the PUT response can traverse. Recommended value for HttpPutResponseHopLimit is \\\"1\\\" which prevents the response from traveling outside of the instance. Specify \\\"0\\\" to maintain the current value. Default is \\\"0\\\".\"\n    },\n    \"EnforceIMDSv2\": {\n      \"type\": \"String\",\n      \"default\": \"optional\",\n      \"allowedValues\": [\n        \"optional\",\n        \"required\"\n      ],\n      \"description\": \"(Optional) Enforce IMDSv2. If you choose \\\"required\\\", IMDSv2 will be enforced. If you choose \\\"optional\\\", you can choose between IMDSv1 and IMDSv2 for metadata access. If you enforce IMDSv2, the applications that use IMDSv1 might not function correctly. Before enforcing IMDSv2, make sure your applications that uses IMDS are upgraded to a version that support IMDSv2. Default is \\\"optional\\\".\"\n    },\n    \"MetadataAccess\": {\n      \"type\": \"String\",\n      \"default\": \"enabled\",\n      \"allowedValues\": [\n        \"enabled\",\n        \"disabled\"\n      ],\n      \"description\": \"(Optional) Allow or deny instance metadata access in the Amazon EC2 instance. If you specify \\\"disabled\\\", all other parameters will be ignored and the metadata access will be denied for the instance. Default is \\\"enabled\\\".\"\n    },\n    \"AutomationAssumeRole\": {\n      \"type\": \"String\",\n      \"default\": \"\",\n      \"description\": \"(Optional) The Amazon Resource Name (ARN) of the AWS Identity and Access Management (IAM) role that allows Systems Manager Automation to perform the actions on your behalf. If no role is specified, Systems Manager Automation uses the permissions of the user that runs this runbook.\"\n    }\n  },\n  \"mainSteps\": [\n    {\n      \"name\": \"branchOnMetadataAccess\",\n      \"action\": \"aws:branch\",\n      \"description\": \"Branch execution based on the value of MetadataAccess parameter\",\n      \"inputs\": {\n        \"Choices\": [\n          {\n            \"NextStep\": \"disableMetadataAccess\",\n            \"Variable\": \"{{MetadataAccess}}\",\n            \"StringEquals\": \"disabled\"\n          }\n        ],\n        \"Default\": \"branchOnHttpPutResponseHopLimit\"\n      }\n    },\n    {\n      \"name\": \"disableMetadataAccess\",\n      \"action\": \"aws:executeAwsApi\",\n      \"description\": \"Disable Metadata endpoint and ignore other parameters\",\n      \"inputs\": {\n        \"Service\": \"ec2\",\n        \"Api\": \"ModifyInstanceMetadataOptions\",\n        \"InstanceId\": \"{{InstanceId}}\",\n        \"HttpEndpoint\": \"disabled\"\n      },\n      \"timeoutSeconds\": 300,\n      \"isEnd\": false,\n      \"isCritical\": true,\n      \"nextStep\": \"waitBeforeAssertingMetadataState\",\n      \"maxAttempts\": 3\n    },\n    {\n      \"name\": \"branchOnHttpPutResponseHopLimit\",\n      \"action\": \"aws:branch\",\n      \"description\": \"Branch execution based on the value of HttpPutResponseHopLimit parameter\",\n      \"inputs\": {\n        \"Choices\": [\n          {\n            \"NextStep\": \"maintainHopLimitAndConfigureImdsVersion\",\n            \"Variable\": \"{{HttpPutResponseHopLimit}}\",\n            \"NumericEquals\": 0\n          }\n        ],\n        \"Default\": \"setHopLimitAndConfigureImdsVersion\"\n      }\n    },\n    {\n      \"name\": \"maintainHopLimitAndConfigureImdsVersion\",\n      \"action\": \"aws:executeAwsApi\",\n      \"description\": \"Maintain current hop limit and configure IMDS version\",\n      \"inputs\": {\n        \"Service\": \"ec2\",\n        \"Api\": \"ModifyInstanceMetadataOptions\",\n        \"InstanceId\": \"{{InstanceId}}\",\n        \"HttpEndpoint\": \"{{MetadataAccess}}\",\n        \"HttpTokens\": \"{{EnforceIMDSv2}}\"\n      },\n      \"timeoutSeconds\": 300,\n      \"isEnd\": false,\n      \"isCritical\": true,\n      \"maxAttempts\": 3\n    },\n    {\n      \"name\": \"waitBeforeAssertingIMDSv2State\",\n      \"action\": \"aws:sleep\",\n      \"inputs\": {\n        \"Duration\": \"PT30S\"\n      },\n      \"description\": \"Wait 30 seconds before asserting IMDSv2 status\",\n      \"nextStep\": \"branchVerificationOnIMDSv2Option\",\n      \"onFailure\": \"step:branchVerificationOnIMDSv2Option\",\n      \"isCritical\": false\n    },\n    {\n      \"name\": \"setHopLimitAndConfigureImdsVersion\",\n      \"action\": \"aws:executeAwsApi\",\n      \"description\": \"Set hop limit and configure IMDS version\",\n      \"inputs\": {\n        \"Service\": \"ec2\",\n        \"Api\": \"ModifyInstanceMetadataOptions\",\n        \"InstanceId\": \"{{InstanceId}}\",\n        \"HttpEndpoint\": \"{{MetadataAccess}}\",\n        \"HttpTokens\": \"{{EnforceIMDSv2}}\",\n        \"HttpPutResponseHopLimit\": \"{{HttpPutResponseHopLimit}}\"\n      },\n      \"timeoutSeconds\": 300,\n      \"isEnd\": false,\n      \"isCritical\": true,\n      \"maxAttempts\": 3\n    },\n    {\n      \"name\": \"waitBeforeAssertingHopLimit\",\n      \"action\": \"aws:sleep\",\n      \"inputs\": {\n        \"Duration\": \"PT30S\"\n      },\n      \"description\": \"Wait 30 seconds before asserting metadata options\",\n      \"isCritical\": false,\n      \"onFailure\": \"Continue\"\n    },\n    {\n      \"name\": \"assertHopLimit\",\n      \"action\": \"aws:assertAwsResourceProperty\",\n      \"inputs\": {\n        \"Service\": \"ec2\",\n        \"Api\": \"DescribeInstances\",\n        \"InstanceIds\": [\n          \"{{InstanceId}}\"\n        ],\n        \"PropertySelector\": \"$.Reservations[0].Instances[0].MetadataOptions.HttpPutResponseHopLimit\",\n        \"DesiredValues\": [\n          \"{{HttpPutResponseHopLimit}}\"\n        ]\n      },\n      \"description\": \"Assert HopLimit value set\",\n      \"isEnd\": false,\n      \"isCritical\": true,\n      \"onFailure\": \"Continue\",\n      \"maxAttempts\": 3,\n      \"timeoutSeconds\": 60\n    },\n    {\n      \"name\": \"branchVerificationOnIMDSv2Option\",\n      \"action\": \"aws:branch\",\n      \"description\": \"Branch verification based on the value of EnforceIMDSv2 parameter\",\n      \"inputs\": {\n        \"Choices\": [\n          {\n            \"NextStep\": \"assertIMDSv2IsEnforced\",\n            \"Variable\": \"{{EnforceIMDSv2}}\",\n            \"StringEquals\": \"required\"\n          }\n        ],\n        \"Default\": \"assertIMDSv2IsOptional\"\n      }\n    },\n    {\n      \"name\": \"assertIMDSv2IsOptional\",\n      \"action\": \"aws:assertAwsResourceProperty\",\n      \"inputs\": {\n        \"Service\": \"ec2\",\n        \"Api\": \"DescribeInstances\",\n        \"InstanceIds\": [\n          \"{{InstanceId}}\"\n        ],\n        \"PropertySelector\": \"$.Reservations[0].Instances[0].MetadataOptions.HttpTokens\",\n        \"DesiredValues\": [\n          \"optional\"\n        ]\n      },\n      \"description\": \"Assert IMDSv2 is optional\",\n      \"isEnd\": false,\n      \"isCritical\": true,\n      \"onFailure\": \"step:describeMetadataOptions\",\n      \"nextStep\": \"describeMetadataOptions\",\n      \"maxAttempts\": 3,\n      \"timeoutSeconds\": 60\n    },\n    {\n      \"name\": \"assertIMDSv2IsEnforced\",\n      \"action\": \"aws:assertAwsResourceProperty\",\n      \"inputs\": {\n        \"Service\": \"ec2\",\n        \"Api\": \"DescribeInstances\",\n        \"InstanceIds\": [\n          \"{{InstanceId}}\"\n        ],\n        \"PropertySelector\": \"$.Reservations[0].Instances[0].MetadataOptions.HttpTokens\",\n        \"DesiredValues\": [\n          \"required\"\n        ]\n      },\n      \"description\": \"Assert IMDSv2 is enforced\",\n      \"isEnd\": false,\n      \"isCritical\": true,\n      \"onFailure\": \"step:describeMetadataOptions\",\n      \"nextStep\": \"describeMetadataOptions\",\n      \"maxAttempts\": 3,\n      \"timeoutSeconds\": 60\n    },\n    {\n      \"name\": \"waitBeforeAssertingMetadataState\",\n      \"action\": \"aws:sleep\",\n      \"inputs\": {\n        \"Duration\": \"PT30S\"\n      },\n      \"description\": \"Wait 30 seconds before asserting metadata is disabled\",\n      \"onFailure\": \"Continue\",\n      \"isCritical\": false\n    },\n    {\n      \"name\": \"assertMetadataIsDisabled\",\n      \"action\": \"aws:assertAwsResourceProperty\",\n      \"inputs\": {\n        \"Service\": \"ec2\",\n        \"Api\": \"DescribeInstances\",\n        \"InstanceIds\": [\n          \"{{InstanceId}}\"\n        ],\n        \"PropertySelector\": \"$.Reservations[0].Instances[0].MetadataOptions.HttpEndpoint\",\n        \"DesiredValues\": [\n          \"disabled\"\n        ]\n      },\n      \"description\": \"Assert metadata is disabled\",\n      \"isEnd\": false,\n      \"isCritical\": true,\n      \"onFailure\": \"Continue\",\n      \"maxAttempts\": 3,\n      \"timeoutSeconds\": 60\n    },\n    {\n      \"name\": \"describeMetadataOptions\",\n      \"action\": \"aws:executeAwsApi\",\n      \"inputs\": {\n        \"Service\": \"ec2\",\n        \"Api\": \"DescribeInstances\",\n        \"InstanceIds\": [\n          \"{{InstanceId}}\"\n        ]\n      },\n      \"outputs\": [\n        {\n          \"Name\": \"State\",\n          \"Selector\": \"$.Reservations[0].Instances[0].MetadataOptions.State\",\n          \"Type\": \"String\"\n        },\n        {\n          \"Name\": \"MetadataAccess\",\n          \"Selector\": \"$.Reservations[0].Instances[0].MetadataOptions.HttpEndpoint\",\n          \"Type\": \"String\"\n        },\n        {\n          \"Name\": \"IMDSv2\",\n          \"Selector\": \"$.Reservations[0].Instances[0].MetadataOptions.HttpTokens\",\n          \"Type\": \"String\"\n        },\n        {\n          \"Name\": \"HttpPutResponseHopLimit\",\n          \"Selector\": \"$.Reservations[0].Instances[0].MetadataOptions.HttpPutResponseHopLimit\",\n          \"Type\": \"Integer\"\n        }\n      ],\n      \"description\": \"Describe current metadata options for the instance\",\n      \"isEnd\": true,\n      \"isCritical\": false,\n      \"maxAttempts\": 3,\n      \"timeoutSeconds\": 60\n    }\n  ]\n}",
  "CreatedDate": "2021-06-10T04:52:01.177Z",
  "DisplayName": null,
  "DocumentFormat": {
    "Value": "JSON"
  },
  "DocumentType": {
    "Value": "Automation"
  },
  "DocumentVersion": "3",
  "Name": "AWSSupport-ConfigureEC2Metadata",
  "Requires": [],
  "ReviewStatus": null,
  "Status": {
    "Value": "Active"
  },
  "StatusInformation": null,
  "VersionName": null,
  "ResponseMetadata": {
    "RequestId": "e5071617-4e2d-4a54-9b46-89ef124ef0a9",
    "Metadata": {},
    "ChecksumAlgorithm": 0,
    "ChecksumValidationStatus": 0
  },
  "ContentLength": 11651,
  "HttpStatusCode": 200,
  "LoggedAt": "2022-04-25T07:13:52.3181162+00:00"
}
