{
  "AttachmentsContent": [],
  "Content": "{\n  \"schemaVersion\" : \"0.3\",\n  \"description\" : \"### Document name - AWSConfigRemediation-EnforceHttpsOnEsDomain\\n\\n## What does this document do?\\nThis document enables `EnforceHTTPS` on a given Amazon Elasticsearch service domain using the [UpdateElasticsearchDomainConfig](https://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-configuration-api.html#es-configuration-api-actions-updateelasticsearchdomainconfig) API.\\n\\n## Input Parameters\\n* DomainName: (Required) The name of the Amazon Elasticsearch service domain.\\n* AutomationAssumeRole: (Required) The ARN of the role that allows Automation to perform the actions on your behalf.\\n\\n## Output Parameters\\n* UpdateElasticsearchDomainConfigAndVerify.Output: Success message or failure exception.\\n\",\n  \"assumeRole\" : \"{{ AutomationAssumeRole }}\",\n  \"parameters\" : {\n    \"DomainName\" : {\n      \"type\" : \"String\",\n      \"description\" : \"(Required) The name of the Amazon Elasticsearch service domain.\",\n      \"allowedPattern\" : \"(\\\\d{12}/)?[a-z0-9-]{3,28}\"\n    },\n    \"AutomationAssumeRole\" : {\n      \"type\" : \"String\",\n      \"description\" : \"(Required) The ARN of the role that allows Automation to perform the actions on your behalf.\",\n      \"allowedPattern\" : \"^arn:(aws[a-zA-Z-]*)?:iam::\\\\d{12}:role/[\\\\w+=,.@-]+\"\n    }\n  },\n  \"outputs\" : [ \"UpdateElasticsearchDomainConfigAndVerify.Output\" ],\n  \"mainSteps\" : [ {\n    \"name\" : \"UpdateElasticsearchDomainConfigAndVerify\",\n    \"action\" : \"aws:executeScript\",\n    \"description\" : \"## UpdateElasticsearchDomainConfigAndVerify\\nMakes UpdateElasticsearchDomainConfig API call using domain name to enable `EnforceHTTPS` on Amazon Elasticsearch service domain and verifies its state.\\n## Outputs\\n* Output: Success message or failure exception.\\n\",\n    \"timeoutSeconds\" : 600,\n    \"inputs\" : {\n      \"Runtime\" : \"python3.6\",\n      \"Handler\" : \"handler\",\n      \"InputPayload\" : {\n        \"DomainName\" : \"{{ DomainName }}\"\n      },\n      \"Script\" : \"import boto3\\nimport re\\n\\ndef update_enforce_https(es_client, domain_name):\\n    return es_client.update_elasticsearch_domain_config(\\n        DomainName=domain_name, DomainEndpointOptions={\\\"EnforceHTTPS\\\": True}\\n    )\\n\\ndef verify_es_domain_enforce_https_status(es_client, domain_name):\\n    describe_elasticsearch_domain_response = es_client.describe_elasticsearch_domain(\\n        DomainName=domain_name\\n    )\\n    if describe_elasticsearch_domain_response[\\\"DomainStatus\\\"][\\\"DomainEndpointOptions\\\"][\\\"EnforceHTTPS\\\"]:\\n        return True\\n    return False\\n\\ndef handler(event, context):\\n    es_client = boto3.client(\\\"es\\\")\\n    domain_name = event[\\\"DomainName\\\"]\\n    domain_pattern = r\\\"(\\\\d{12}/)?[a-z0-9-]{3,28}\\\"\\n    if re.match(domain_pattern, domain_name):\\n        domain_name = domain_name.split(\\\"/\\\")[-1]\\n    update_elasticsearch_domain_response = update_enforce_https(es_client, domain_name)['ResponseMetadata']\\n    enforce_https_status = verify_es_domain_enforce_https_status(es_client, domain_name)\\n    if enforce_https_status:\\n        return {\\n            \\\"output\\\": {\\n                \\\"message\\\": \\\"Verification of EnforceHTTPS on Amazon Elasticsearch service domain is successful.\\\",\\n                \\\"HTTPResponse\\\": update_elasticsearch_domain_response,\\n            }\\n        }\\n    raise Exception(\\n        \\\"VERIFICATION OF ENFORCEHTTPS ON AMAZON ELASTICSEARCH SERVICE DOMAIN FAILED.\\\"\\n    )\"\n    },\n    \"outputs\" : [ {\n      \"Name\" : \"Output\",\n      \"Selector\" : \"$.Payload.output\",\n      \"Type\" : \"StringMap\"\n    } ]\n  } ]\n}",
  "CreatedDate": "2020-12-07T22:09:52.116Z",
  "DisplayName": null,
  "DocumentFormat": {
    "Value": "JSON"
  },
  "DocumentType": {
    "Value": "Automation"
  },
  "DocumentVersion": "1",
  "Name": "AWSConfigRemediation-EnforceHttpsOnEsDomain",
  "Requires": [],
  "ReviewStatus": null,
  "Status": {
    "Value": "Active"
  },
  "StatusInformation": null,
  "VersionName": null,
  "ResponseMetadata": {
    "RequestId": "853fd851-f0f6-493f-913f-646583c13ca8",
    "Metadata": {}
  },
  "ContentLength": 3975,
  "HttpStatusCode": 200,
  "LoggedAt": "2022-02-01T07:11:07.2292617+00:00"
}
