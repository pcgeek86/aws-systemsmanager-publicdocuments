{
  "AttachmentsContent": [
    {
      "Hash": "7613671ccbf5e18a20410cc59287165f04f73d701c02684a63cb6962128dcc03",
      "HashType": {
        "Value": "Sha256"
      },
      "Name": "attachment.zip",
      "Size": 13016,
      "Url": "https://aws-ssm-document-attachments-us-west-2.s3.us-west-2.amazonaws.com/b34/190294270367/Automation/AWSSupport-TroubleshootCFNCustomResource%21b45d3307-df79-4ee3-99d7-791b7b043936/24/attachment.zip?x-attachment-size=13016&x-requester-accountId=987868780346&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEDYaCXVzLXdlc3QtMiJGMEQCIDXYBKaERwXm9MXCZ25E8jj%2F3HqzYtka7iMOuoYU1C4uAiAIC8yQ%2BqOF4E9uHjI3UgObMvWMbvgZ3U8pfFS1RVoOiyq7BQg%2FEAMaDDI0OTkyNDUyNzQxMCIM2y6cseoJqtvfnNi7KpgFIUQtXw4zoMDfU0trT7cOK1VsZjQihE%2F590n5mYkGzpdGT2y0ugBtdXdHK14WK60Kecvy9Y8wAuClDdR8J2s6gRKOdBD3Z6rpACBxlPyjvF7ybXxkmQLf82NEENL9is4BYEs8GtFSfinozyLEtmh6MB%2FYzUiMFeVXazJBHbroQVtfF572piFSlD0pGeRhrkrooUuqOvcxGYIs4G8YKuKqvAkKoHEOdVoFDB%2F2XA6of9vlbUUxL0jtVWyVSC9PXF1ECjd%2B77eyTp8zGZti%2BSb7cwu09u%2FkkYG9p%2BvtVfVQRBqSPMjCqoVQMzP8h5qd0c2YtBtlxA%2BTsGVwh62Nh2fwJMaMO8Caxnl5VzMIXPpi8%2FdBOfXeHLyAhDjaDqVKxKbn%2Fx2appHEtrY%2BO%2BIGioS3iyHpbGtvC3C%2F2bAOtdv555q6DzDaMeHLrEX48E1ojv7%2FIUW8EGamQtaaqfGDKW1csaiglc35iMZIDGrFmML3rmn2eYm6J2ONJUutP7R9geC8q0v4okbiy9VpBxqhsT1TJ6d8XUTYvU8WCB1M1Rvkuuzx9zomKxiIpj7Yt%2BvVeayxtzw3rl8f30X9jonno%2Bhg8%2FF7p7nbC09mbh8TTCcRdWIsPIwmKFLMANAoB2eD%2F76ZQDOrHUhscDG26mZllpZI5uYoiRgB7zHnP%2FAEbKzMj5jpjxaY7Zds3mPMhLw332uT74ZEpunKknit9I1BpepkPSesJecEFLJfj%2BRnVb9BptM5C7PQEsPu%2BFu1DwGD9N8HdU4ogLi3VjIntAIf0I0g1D5Daz0rK%2BHRwMWzqnl%2FlFjgLHuXEzYKNCkTlyzhPKawQbDHdxOKUWy8ws40HaqyL8UhvsFDZjViM%2F2n5aDEthrfPOkKv1cFTjCTo6iiBjqyAQIPTX5O0L99pH6lAswGVxpbgw4xH47xpdZvdmTH%2Fp8SFecFqS%2FqyMj%2FFuNXxl2sGeAGPNTHnA%2FDuLQSEWQyKUQenA0I259XzAb2jOtxUqbM6R3J7Mi4DRhEWfc7P%2BoLcesrszIMlWMKwU0XEjxxDRBfCIBmrK5RtFVXJQLt6b7nw7wF5M7vFxqiuPntONB%2FJRz6slFej9sM2J6Zn3GiniLKl3YCCvk7hL21xQMfDl8I%2BFs%3D&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Date=20230427T071148Z&X-Amz-SignedHeaders=host&X-Amz-Expires=86400&X-Amz-Credential=ASIATUMFJUUZCJA2BBA3%2F20230427%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Signature=3ae9310fe85668781ae91d63ce32dbebe2a419bdf7530a0c6835566900e86572"
    }
  ],
  "Content": "{\n  \"schemaVersion\": \"0.3\",\n  \"description\": \"The **AWSSupport-TroubleshootCFNCustomResource** runbook helps diagnose why an AWS CloudFormation stack failed in creating, updating, or deleting a [custom resource](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-custom-resources.html). This automation checks the service token used for the custom resource along with the error message returned.\\nFor AWS Lambda-backed custom resources, the runbook checks if the AWS Lambda is able to reach the Amazon Simple Storage Service (Amazon S3) endpoint in order to send a response back to AWS CloudFormation. The runbook also checks the AWS Lambda Amazon Virtual Private Cloud (Amazon VPC) network configuration and security groups.\\n\\n\\n### Important:\\n\\n* This runbook doesn't make any changes to your AWS CloudFormation stack.\\n* This runbook doesn't check your AWS Lambda function logic, your service provider, or application logs.\\n\\n### Required IAM permissions:\\n\\n The ```AutomationAssumeRole``` parameter requires the following actions to successfully use the runbook:\\n\\n        - cloudformation:DescribeStacks\\n        - cloudformation:DescribeStackEvents\\n        - cloudformation:ListStackResources\\n        - ec2:DescribeRouteTables\\n        - ec2:DescribeNatGateways\\n        - ec2:DescribeSecurityGroups\\n        - ec2:DescribeVpcs\\n        - ec2:DescribeVpcEndpoints\\n        - ec2:DescribeSubnets\\n        - logs:FilterLogEvents\\n\\n\\n\\nPlease visit the documentation on [Automation Setup](https://docs.aws.amazon.com/systems-manager/latest/userguide/automation-setup.html) for more information.\",\n  \"assumeRole\": \"{{ AutomationAssumeRole }}\",\n  \"parameters\": {\n    \"AutomationAssumeRole\": {\n      \"type\": \"AWS::IAM::Role::Arn\",\n      \"description\": \"(Optional) The Amazon Resource Name (ARN) of the AWS Identity and Access Management (IAM) role that allows Systems Manager Automation to perform the actions on your behalf. If no role is specified, Systems Manager Automation uses the permissions of the user that starts this runbook.\",\n      \"default\": \"\"\n    },\n    \"StackName\": {\n      \"type\": \"String\",\n      \"maxChars\": 128,\n      \"description\": \"(Required) The name of the Cloudformation stack in which the custom Resource Failed\",\n      \"allowedPattern\": \"[-a-zA-Z0-9]{1,128}$\"\n    }\n  },\n  \"mainSteps\": [\n    {\n      \"name\": \"validateCloudFormationStack\",\n      \"description\": \"Verifies that the AWS CloudFormation stack exists in the same AWS account and AWS Region.\",\n      \"action\": \"aws:executeAwsApi\",\n      \"maxAttempts\": 3,\n      \"onFailure\": \"Abort\",\n      \"nextStep\": \"checkCustomResource\",\n      \"inputs\": {\n        \"Service\": \"cloudformation\",\n        \"Api\": \"DescribeStacks\",\n        \"StackName\": \"{{StackName}}\"\n      }\n    },\n    {\n      \"name\": \"checkCustomResource\",\n      \"description\": \"Analyzes the AWS CloudFormation stack, checks the failed custom resource, and outputs information about how to troubleshoot the failed custom resource.\",\n      \"action\": \"aws:executeScript\",\n      \"isCritical\": true,\n      \"onFailure\": \"Abort\",\n      \"inputs\": {\n        \"Runtime\": \"python3.8\",\n        \"InputPayload\": {\n          \"StackName\": \"{{StackName}}\"\n        },\n        \"Handler\": \"script_handler\",\n        \"Script\": \"# Copyright 2022 Amazon.com, Inc. and its affiliates. All Rights Reserved.\\n# SPDX-License-Identifier: LicenseRef-.amazon.com.-AmznSL-1.0\\n# Licensed under the Amazon Software License (the \\\"License\\\").\\n# You may not use this file except in compliance with the License.\\n# A copy of the License is located at\\n#   http://aws.amazon.com/asl/\\n# or in the \\\"license\\\" file accompanying this file. This file is distributed\\n# on an \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\\n# express or implied. See the License for the specific language governing\\n# permissions and limitations under the License.\\nimport re\\nimport os\\nimport json\\nfrom base.CFN import CFN\\nfrom case import getFunctiondetails \\nfrom case import Check_Subnet \\nfrom case import verifyNat\\nfrom case import SecurityGroup_Check\\nfrom case import s3_endpoint_route\\nfrom case import FilterCWlogs\\ndef script_handler(events, context):\\n    \\n    stack_name = events['StackName']\\n    Message = (\\\"Result:\\\\n\\\"\\n      \\\"-----------\\\\n \\\")\\n    cloudformation = CFN(stack_name)\\n    REGION = os.environ.get('AWS_REGION')\\n    if cloudformation.CustomResource == False:\\n            ## we didn't find custom resource in last update.\\n            Message =Message+ (\\\"No failed Custom Resource found in the last stack operation\\\")\\n    else:\\n        if \\\"sns\\\" in cloudformation.serviceToken:\\n            ## permission issue:\\n            if \\\"is not authorized to perform: SNS:Publish\\\" in cloudformation.Reason:\\n               User = re.split (\\\"is not authorized\\\", cloudformation.Reason)[0]\\n               resourcearn = re.search(\\\"(arn:[a-zA-Z0-9-]+:sns:[a-zA-Z0-9-]+:\\\\d{12}:[a-zA-Z0-9-_]+)\\\", cloudformation.Reason).group(0)\\n\\n               Message =Message+ (\\\"\\\\nThe cloudformation stack: '\\\" + cloudformation.StackId + \\\"' failed to \\\" + cloudformation.CR_Operation +\\\" the custom resource \\\" + cloudformation.LogicalResourceId + \\\"  due to the error below:\\\"\\n               \\\"\\\\n-------\\\"\\n               \\\"\\\\n\\\" + cloudformation.Reason + \\\" \\\"\\n               \\\"\\\\n--------\\\"\\n               \\\"\\\\nThe user or the role who creates the stack must have sns:Publish permissions.\\\"\\n              \\\"\\\\nWhen you associate an Amazon SNS topic with a custom resource, you use Amazon SNS notifications to invoke custom provisioning logic.\\\"\\n              \\\"\\\\nWhen AWS cloudformation create, update or delete the custom resource, it will Publish SNS Topic.\\\"\\n              \\\"\\\\n\\\\nHow to fix the error:\\\"\\n              \\\"\\\\n----------------------\\\"\\n              \\\"\\\\nIn order to be able to \\\" + cloudformation.Operation + \\\" the custom resource successfully, you need to grant \\\" + User +\\\" the permission to Publish sns topic, below is a the example below :\\\"\\n              \\\"\\\\n---------------------\\\"\\n              \\\"\\\\n{\\\"\\n              \\\"\\\\n\\\\\\\"Sid\\\\\\\": \\\\\\\"PermissionToPublishSNS\\\\\\\",\\\"\\n              \\\"\\\\n\\\\\\\"Effect\\\\\\\": \\\\\\\"Allow\\\\\\\",\\\"\\n              \\\"\\\\n\\\\\\\"Action\\\\\\\": \\\\\\\"sns:Publish\\\\\\\",\\\"\\n              \\\"\\\\n\\\\\\\"Resource\\\\\\\": \\\\\\\"\\\"+resourcearn+\\\"\\\\\\\"\\\"        ## This can be limited to the SNS topic arn\\\"\\n              \\\"\\\\n}\\\"\\n              \\\"\\\\n---------------------\\\"\\n              \\\"\\\\n\\\\nReferences: \\\"\\n              \\\"\\\\n-------------\\\"\\n              \\\"\\\\n[1] https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-custom-resources-sns.html\\\")\\n\\n            elif \\\"CloudFormation did not receive a response from your Custom Resource\\\" in cloudformation.Reason:\\n                 Message =Message+(\\\"\\\"\\n            \\\"\\\\nThe cloudformation stack: '\\\" + cloudformation.StackId + \\\"' failed to \\\" + cloudformation.CR_Operation +\\\" the custom resource '\\\" + cloudformation.LogicalResourceId + \\\"'  because no response was sent back to cloudformation presigned URL.\\\"\\n            \\\"\\\\nThe Custom resource '\\\" + cloudformation.LogicalResourceId + \\\"' is baked with SNS topic. Hence the custom resource provider processes the data sent by the SNS topic and determines whether the Create request was successful. The resource provider then uses the S3 URL sent by AWS CloudFormation to send a response of either SUCCESS or FAILED.\\\"\\n            \\\"\\\\n\\\\nTo troubleshoot the issue :\\\"\\n            \\\"\\\\n======================================\\\"\\n            \\\"\\\\n1. Your application must be able to reach S3 endpoint as the response URL is similar to \\\\\\\"http://pre-signed-S3-url-for-response\\\\\\\". \\\"\\n            \\\"\\\\n2. Reviewing the logs of the application which processes the data and a send the response to Cloudformation would be helpful to troubleshoot the issue. a failure in the application execution would cause the signal not to be sent to cloudformation.\\\"\\n            \\\"\\\\n\\\\n[1] https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-custom-resources-sns.html#walkthrough-custom-resources-sns-adding-nonaws-resource\\\")\\n            \\n            elif \\\"Received response status [FAILED] from custom resource\\\" in cloudformation.Reason:\\n                Message =Message+(\\\"\\\"\\n                \\\"\\\\nThe cloudformation stack '\\\"+ cloudformation.StackId + \\\"' failed to \\\" + cloudformation.CR_Operation +\\\" the custom resource \\\" +cloudformation.LogicalResourceId +\\\"  due to a Failed response was sent back to cloudformation presigned URL.\\\"\\n                \\\"\\\\nThe custom resource provider processes the data sent by the SNS topic and determines whether the Create request was successful. The resource provider then uses the S3 URL sent by AWS CloudFormation to send a response of either SUCCESS or FAILED.\\\"\\n                \\\"\\\\nDepending on the Status that cloudformation get from the resource, Cloudformation set the custom resource either as complete or failed.\\\"\\n\\n                \\\"\\\\n\\\\nReviewing the logs of the application which processes the data and a send the response to cloudformation would be helpful to troubleshoot the issue.\\\"\\n                \\\"\\\\n\\\\nReferences: \\\"\\n                \\\"\\\\n-------------\\\"\\n                \\\"\\\\n\\\\n[1] https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-custom-resources-sns.html#walkthrough-custom-resources-sns-adding-nonaws-resource\\\")\\n\\n        elif \\\"lambda\\\" in cloudformation.serviceToken:\\n          FunctionName=re.split(':',cloudformation.serviceToken)[6]\\n          CloudwatchlogGroup=\\\"/aws/lambda/\\\" + FunctionName + \\\"\\\"\\n\\n\\n          if \\\"is not authorized to perform: lambda:InvokeFunction\\\" in cloudformation.Reason:\\n               User = re.split (\\\"is not authorized\\\", cloudformation.Reason)[0]\\n               resourcearn = re.search(\\\"(arn:[a-zA-Z0-9-]+:lambda:[a-zA-Z0-9-]+:\\\\d{12}:function:[a-zA-Z0-9-_]+)\\\", cloudformation.Reason).group(0)\\n               Message =Message+(\\\"\\\"\\n                \\\"\\\\nThe cloudformation stack '\\\" + cloudformation.StackId + \\\"' failed to \\\" + cloudformation.Operation + \\\" the custom resource \\\" + cloudformation.LogicalResourceId + \\\"  due to permission issue with the below error:\\\"\\n                \\\"\\\\n\\\" + cloudformation.Reason + \\\" \\\"\\n                \\\"\\\\n\\\\nWhen you associate a Lambda function with a custom resource, the function is invoked whenever the custom resource is created, updated, or deleted.\\\"\\n                \\\"\\\\nAWS CloudFormation calls a Lambda API to invoke the function and to pass all the request data (such as the request type and resource properties) to the function.\\\"\\n                \\\"\\\\n\\\\nIn order to be able to \\\" + cloudformation.Operation +\\\" the custom resource successfully, you need to grant \\\" + User +\\\" the permission to invoke the lambda function, below is a the example below :\\\"\\n                \\\"\\\\n---------------------\\\"\\n                \\\"\\\\n{\\\"\\n                \\\"\\\\n\\\\\\\"Sid\\\\\\\": \\\\\\\"PermissionToInvokeLambda\\\\\\\",\\\"\\n                \\\"\\\\n\\\\\\\"Effect\\\\\\\": \\\\\\\"Allow\\\\\\\",\\\"\\n                \\\"\\\\n\\\\\\\"Action\\\\\\\": \\\\\\\"lambda:InvokeFunction\\\\\\\",\\\"\\n                \\\"\\\\n\\\\\\\"Resource\\\\\\\": \\\\\\\"\\\"+resourcearn+\\\"\\\\\\\"\\\"         ## This can be limited to the lambda function arn\\\"\\n                \\\"\\\\n}\\\"\\n                \\\"\\\\n---------------------\\\"\\n                \\\"\\\\n\\\\nReferences: \\\"\\n                \\\"\\\\n-------------\\\"\\n                \\\"\\\\n[1] https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-custom-resources-lambda.html\\\")\\n                \\n                \\n                \\n          elif \\\"Received response status [FAILED] from custom resource\\\" in cloudformation.Reason:\\n                stream=re.split(':',cloudformation.Reason)[2]\\n                CloudwatchlogStream=re.split(' ',stream)[1]\\n                logs = FilterCWlogs.filterLogstream(CloudwatchlogGroup,CloudwatchlogStream,cloudformation.Start_time,cloudformation.Final_time,\\\"error\\\")\\n                IflogsExist=logs[1]\\n\\n                Message =Message+(\\\"\\\"\\n                \\\"\\\\nThe cloudformation stack '\\\"+ cloudformation.StackId + \\\"' failed to \\\" + cloudformation.CR_Operation +\\\" the custom resource '\\\" +cloudformation.LogicalResourceId +\\\"'  due to a Failed response was sent back to cloudformation presigned URL.\\\"\\n                \\\"\\\\nThe lambda function '\\\" + FunctionName +\\\"' used in the service token of your custom resource processes the request sent by the cloudformation stack and determines whether the \\\" + cloudformation.Operation + \\\" request was successful or not.\\\"\\n                \\\"\\\\nLambda then uses the S3 URL sent by AWS CloudFormation to send a response of either SUCCESS or FAILED.\\\"\\n                \\\"\\\\nDepending on the Status that cloudFormation get from the lambda function, Cloudformation set the custom resource either as complete or failed.\\\"\\n                \\\"\\\\n\\\\nHow to troubleshoot: \\\"\\n                \\\"\\\\n=======================\\\"\\n                \\\"\\\\n- You can insert logging statements into your lambda code to help you validate that your code is working as expected.\\\")\\n                if IflogsExist: \\n                            ## there are some errors retrieved from the logs the customer needs to check the logs\\n                            Message =Message+ (\\\"\\\\nThe cloudwatch log group '\\\" + CloudwatchlogGroup + \\\"' is exist on the account and can be reached through the link : https://\\\"+REGION+\\\".console.aws.amazon.com/cloudwatch/home?region=\\\"+REGION+\\\"#logsV2:log-groups/log-group/$252Faws$252Flambda$252F\\\"+FunctionName+\\\"\\\"\\n                            \\\"\\\\n   ** Reviewing cloudwatch logs '\\\" + CloudwatchlogGroup + \\\"' and specifically the log stream \\\" +CloudwatchlogStream + \\\" will be helpful to know if there was any error during lambda function execution\\\")\\n                else:\\n                            Message =Message+(\\\"\\\\n\\\\n[Warning] Lambda was not able to publish logs to cloudwatch.\\\"\\n                            \\\"\\\\n   Lambda role must have access to CloudWatch Logs. If the role is missing the required permissions, the function still runs but it is unable to log any output to the CloudWatch service.\\\"\\n                            \\\"\\\\n   Lambda role permissions that are needed to publish logs to cloudwatch can be found here [2]\\\")\\n\\n                Message =Message+(\\\"\\\"\\n                \\\"\\\\n\\\\nReferences: \\\"\\n                \\\"\\\\n-------------\\\"\\n                \\\"\\\\n\\\\n[1] https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-custom-resources.html#how-custom-resources-work\\\"\\n                \\\"\\\\n[2] https://docs.aws.amazon.com/lambda/latest/operatorguide/access-logs.html\\\"\\n                \\\"\\\\n[3] https://docs.aws.amazon.com/lambda/latest/dg/monitoring-cloudwatchlogs.html\\\")\\n\\n\\n          elif \\\"CloudFormation did not receive a response from your Custom Resource\\\" in cloudformation.Reason:\\n                logs = FilterCWlogs.filterLogstream(CloudwatchlogGroup,\\\"\\\",cloudformation.Start_time,cloudformation.Final_time,\\\"error\\\")\\n                IflogsExist=logs[1]\\n            ## We need to check if lambda exist in a vpc:\\n                ##1. check if lambda is exist and not deleted with the stack rollback.\\n                VPCconfig = getFunctiondetails.getFunction(FunctionName,cloudformation.StackName)              \\n                subnet_ids = VPCconfig[1]\\n                SecurityGroupIds = VPCconfig[2]\\n                VPC= VPCconfig[3]\\n                if VPCconfig[0] == False: ## the lambda is not created inside a VPC\\n                    Message =Message+(\\\"\\\"\\n                    \\\"\\\\nThe cloudformation stack '\\\"+ cloudformation.StackId + \\\"' failed to \\\" + cloudformation.CR_Operation +\\\" the custom resource '\\\" +cloudformation.LogicalResourceId +\\\"'  due to no response sent back to cloudformation presigned URL.\\\"\\n                    \\\"\\\\nThe custom resource '\\\" + cloudformation.LogicalResourceId +\\\"' is lambda baked custom resource. Hence Lambda should use the S3 URL sent by AWS CloudFormation to send a response of either SUCCESS or FAILED.\\\"\\n                    \\\"\\\\nDepending on the Status that cloudFormation get from the resource provider, Cloudformation set the custom resource either as complete or failed.\\\"\\n                    \\\"\\\\nCloudformation wait for 1 hour to receive a response back from lambda, if no response is received, then the custom resource will fail.\\\"\\n                    \\\"\\\\n[OK] The lambda function '\\\" + FunctionName  + \\\"' is not configured in a Amazon Virtual Private Cloud (VPC). The Lambda function is able to reach S3 endpoint.\\\"\\n                    \\\"\\\\n\\\\nHow to troubleshoot: \\\"\\n                    \\\"\\\\n=======================\\\"\\n                    \\\"\\\\n1. You can insert logging statements into your lambda code to help you validate that your code is working as expected. Lambda automatically integrates with CloudWatch Logs and pushes all logs from your code to a CloudWatch Logs group associated with a Lambda function, which is named /aws/lambda/\\\" + FunctionName + \\\"\\\")\\n                    if IflogsExist: \\n                            ## there are some errors retrieved from the logs the customer needs to check the logs\\n                            Message =Message+ (\\\"\\\\nThe cloudwatch log group '\\\" + CloudwatchlogGroup + \\\"' is exist on the account and can be reached through the link : https://\\\"+REGION+\\\".console.aws.amazon.com/cloudwatch/home?region=\\\"+REGION+\\\"#logsV2:log-groups/log-group/$252Faws$252Flambda$252F\\\"+FunctionName+\\\"\\\"\\n                            \\\"\\\\n   ** Reviewing cloudwatch logs '\\\" + CloudwatchlogGroup + \\\"' will be helpful to know if there was any error during lambda function execution\\\")\\n                    else:\\n                            Message =Message+(\\\"\\\\n\\\\nThe cloudwatch log group '\\\" + CloudwatchlogGroup + \\\"' is not exist on the account.\\\"\\n                            \\\"\\\\n   Lambda role must have access to CloudWatch Logs. If the role is missing the required permissions, the function still runs but it is unable to log any output to the CloudWatch service.\\\"\\n                            \\\"\\\\n   Lambda role permissions that are needed to publish logs to cloudwatch can be found here [2]\\\"\\n                            \\\"\\\\n   ** Reviewing cloudwatch logs '\\\" + CloudwatchlogGroup + \\\"' will be helpful to know if there was any error during lambda function execution\\\")\\n\\n                    Message =Message+(\\\"\\\"\\n                    \\\"\\\\n2. In order to send a response to cloudformation you can load the cfn-response module. The module contains a send method, which sends a response object to a custom resource by way of an Amazon S3 presigned URL (the ResponseURL)\\\"\\n                    \\\"\\\\n   The cfn-response module is available only when you use the ZipFile property to write your source code.\\\"  \\n                    \\\"\\\\n   It isn't available for source code that's stored in Amazon S3 buckets. For code in buckets, you must write your own functions to send responses.\\\"\\n                    \\\"\\\\n   You can refer to the documentation link [3][4] to see how you can implement cfnresponse module in your lambda code \\\"\\n                    \\\"\\\\n\\\\nReferences: \\\"\\n                    \\\"\\\\n-------------\\\"\\n                    \\\"\\\\n[1] https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-custom-resources.html#how-custom-resources-work\\\"\\n                    \\\"\\\\n[2] https://docs.aws.amazon.com/lambda/latest/operatorguide/access-logs.html\\\"\\n                    \\\"\\\\n[3] https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cfn-lambda-function-code-cfnresponsemodule.html\\\"\\n                    \\\"\\\\n[4] https://aws.amazon.com/premiumsupport/knowledge-center/cloudformation-cfn-response-lambda/ \\\")\\n                    if cloudformation.CR_Operation == \\\"DELETE\\\":\\n                        Message =Message+(\\\"\\\\n[5] https://aws.amazon.com/premiumsupport/knowledge-center/cloudformation-lambda-resource-delete/\\\")\\n\\n\\n                else: ## lambda is created inside VPC, Subnet and security groups needs to be verified.\\n\\n                    Message =Message+(\\\"\\\"\\n                    \\\"\\\\nThe cloudformation stack '\\\"+ cloudformation.StackId + \\\"' failed to \\\" + cloudformation.CR_Operation +\\\" the custom resource '\\\" +cloudformation.LogicalResourceId +\\\"'  due to no response sent back to cloudformation presigned URL.\\\"\\n                    \\\"\\\\nLambda should use the S3 URL sent by AWS CloudFormation to send a response of either SUCCESS or FAILED.\\\"\\n                    \\\"\\\\nDepending on the Status that cloudFormation get from the resource provider, Cloudformation set the custom resource either as complete or failed.\\\"\\n                    \\\"\\\\nCloudformation wait for 1 hour to receive a response back from lambda, if no response is received, then the custom resource will failed.\\\")\\n\\n                    Message= Message+(\\\"\\\\n\\\\nThe lambda function '\\\" + FunctionName  + \\\"' is created inside Amazon Virtual Private Cloud (VPC) '\\\" + VPC + \\\"'.\\\"\\n                    \\\"\\\\n1. Verifying lambda subnets configuration:\\\")\\n                    ## 1. verify subnet:\\n                    IsolatedCount = 0\\n                    IsolatedSubnets = []\\n                    for subnet in subnet_ids:\\n                        VerifySubnets = Check_Subnet.Verify_subnet(subnet,VPCconfig[3])\\n                        Message = Message+(\\\"\\\\n   [X] Verifying the subnet '\\\"+ subnet + \\\":\\\")\\n                        IsIsolated = VerifySubnets[0]\\n                        IsPublic = VerifySubnets[1]\\n                        IsPrivate = VerifySubnets[2]\\n                        NatGatway = VerifySubnets[3]\\n                        routetable = VerifySubnets[5]\\n                        if IsIsolated:\\n                            Message = Message+(\\\"\\\\n        [WARN] The subnet '\\\"+ subnet +\\\"' is a private subnet without NAT gateway.\\\"\\n                            \\\"\\\\n        Lambda in the private subnet can access the internet by using a network address translation (NAT) gateway that resides in the public subnet. \\\"\\n                            \\\"\\\\n        As no NAT gateway is configured with the subnet '\\\" + subnet + \\\"'. Then S3 VPC endpoint must be used to allow lambda function to reach S3 and permit traffic to the 'cloudformation-custom-resource-response-\\\" + REGION +\\\"' bucket. \\\")\\n                            ## we need to verify VPC endpoint.\\n                            s3_endpoints = s3_endpoint_route.s3_endpoints_list(VPC,REGION)\\n                            if not s3_endpoints:\\n                                Message = Message+(\\\"\\\\n        [ERROR] No S3 VPC endpoint is available for this subnet\\\" )\\n                            else:\\n                                Message += (\\\"\\\\n        [OK]: S3 gateway endpoint \\\" + s3_endpoints + \\\" is added to the lambda VPC.\\\")\\n                                for endpoint in s3_endpoints:\\n                                   if s3_endpoint_route.is_s3_route_exists( routetable, endpoint):\\n                                          Message += (\\\"\\\\n        [OK]: The Subnet route table has a route for S3 endpoint.\\\\n\\\")\\n                                   else:\\n                                          Message += (\\\"\\\\n        [ERROR]: The Subnet route table does not have a route for S3 endpoint.\\\\n\\\")\\n\\n\\n                            IsolatedCount = IsolatedCount+1\\n                            IsolatedSubnets.append(subnet)\\n                        elif IsPublic:\\n                            Message = Message+(\\\"\\\\n        [OK] The subnet '\\\"+ subnet +\\\"' is a public subnet with Internet gateway.\\\")\\n                        elif IsPrivate:\\n                            Message = Message+(\\\"\\\\ncThe subnet '\\\"+ subnet +\\\"' is a private subnet with NAT gateway '\\\"+NatGatway + \\\"'.\\\")\\n                            ## we need to verify the NAT gateway:\\n                            if verifyNat.verify_nat(NatGatway,VPC):\\n                                 Message = Message+(\\\"\\\\n         [OK] The NAT gateway configured with '\\\"+ subnet +\\\"' is configured correctly.\\\")\\n                            else:\\n                                 Message = Message+(\\\"\\\\n         [WARN] The NAT gateway configured with '\\\"+ subnet +\\\"' is not localted in a public subnet. Lambda is not able to send response to cloudformation S3 bucket.\\\")\\n                    \\n                    ## Checking security group now    \\n                    Message = Message+(\\\"\\\\n2. Verifying lambda security group outbound connections:\\\")\\n                    if SecurityGroup_Check.check_sg_out_rules(SecurityGroupIds):\\n                            Message = Message+(\\\"\\\\n  [OK] Lambda security group outbound connections are allowing 443 outbound traffic\\\")\\n                    else:\\n                            Message = Message+(\\\"\\\\n  [ERROR] Lambda security group outbound connections are not allowing 443 outbound traffic. Lambda is not able to send response back to cloudformation S3 bucket through https.\\\")\\n\\n                    Message = Message +(\\\"\\\\n\\\\nMore to troubleshoot: \\\"\\n                    \\\"\\\\n=======================\\\"\\n                    \\\"\\\\n1. You can insert logging statements into your lambda code to help you validate that your code is working as expected. Lambda automatically integrates with CloudWatch Logs and pushes all logs from your code to a CloudWatch Logs group associated with a Lambda function, which is named /aws/lambda/\\\" + FunctionName + \\\"\\\")\\n                    if IflogsExist: \\n                            ## there are some errors retrieved from the logs the customer needs to check the logs\\n                            Message =Message+ (\\\"\\\\nThe cloudwatch log group '\\\" + CloudwatchlogGroup + \\\"' is exist on the account and can be reached through the link : https://\\\"+REGION+\\\".console.aws.amazon.com/cloudwatch/home?region=\\\"+REGION+\\\"#logsV2:log-groups/log-group/$252Faws$252Flambda$252F\\\"+FunctionName+\\\"\\\"\\n                            \\\"\\\\n   ** Reviewing cloudwatch logs '\\\" + CloudwatchlogGroup + \\\"' will be helpful to know if there was any error during lambda function execution\\\")\\n                    else:\\n                            Message =Message+(\\\"\\\\n\\\\nThe cloudwatch log group '\\\" + CloudwatchlogGroup + \\\"' is not exist on the account.\\\"\\n                            \\\"\\\\n   Lambda role must have access to CloudWatch Logs. If the role is missing the required permissions, the function still runs but it is unable to log any output to the CloudWatch service.\\\"\\n                            \\\"\\\\n   Lambda role permissions that are needed to publish logs to cloudwatch can be found here [2]\\\"\\n                            \\\"\\\\n   ** Reviewing cloudwatch logs '\\\" + CloudwatchlogGroup + \\\"' will be helpful to know if there was any error during lambda function execution\\\")\\n\\n                    Message =Message+(\\\"\\\"\\n                    \\\"\\\\n2. In order to send a response to cloudformation you can load the cfn-response module. The module contains a send method, which sends a response object to a custom resource by way of an Amazon S3 presigned URL (the ResponseURL)\\\"\\n                    \\\"\\\\n   The cfn-response module is available only when you use the ZipFile property to write your source code.\\\"  \\n                    \\\"\\\\n   It isn't available for source code that's stored in Amazon S3 buckets. For code in buckets, you must write your own functions to send responses.\\\"\\n                    \\\"\\\\n   You can refer to the documentation link [3][4] to see how you can implement cfnresponse module in your lambda code \\\"\\n                    \\\"\\\\n\\\\nReferences: \\\"\\n                    \\\"\\\\n-------------\\\"\\n                    \\\"\\\\n[1] https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-custom-resources.html#how-custom-resources-work\\\"\\n                    \\\"\\\\n[2] https://docs.aws.amazon.com/lambda/latest/operatorguide/access-logs.html\\\"\\n                    \\\"\\\\n[3] https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cfn-lambda-function-code-cfnresponsemodule.html\\\"\\n                    \\\"\\\\n[4] https://aws.amazon.com/premiumsupport/knowledge-center/cloudformation-cfn-response-lambda/ \\\")\\n                    if cloudformation.CR_Operation == \\\"DELETE\\\":\\n                        Message =Message+(\\\"\\\\n[5] https://aws.amazon.com/premiumsupport/knowledge-center/cloudformation-lambda-resource-delete/\\\")\\n    return {'Message': Message }\\n\\n   \\n\",\n        \"Attachment\": \"attachment.zip\"\n      },\n      \"outputs\": [\n        {\n          \"Name\": \"Message\",\n          \"Selector\": \"$.Payload.Message\",\n          \"Type\": \"String\"\n        }\n      ]\n    }\n  ],\n  \"files\": {\n    \"attachment.zip\": {\n      \"checksums\": {\n        \"sha256\": \"7613671ccbf5e18a20410cc59287165f04f73d701c02684a63cb6962128dcc03\"\n      }\n    }\n  },\n  \"outputs\": [\n    \"checkCustomResource.Message\"\n  ]\n}",
  "CreatedDate": "2023-04-14T10:03:53.012Z",
  "DisplayName": null,
  "DocumentFormat": {
    "Value": "JSON"
  },
  "DocumentType": {
    "Value": "Automation"
  },
  "DocumentVersion": "24",
  "Name": "AWSSupport-TroubleshootCFNCustomResource",
  "Requires": [],
  "ReviewStatus": null,
  "Status": {
    "Value": "Active"
  },
  "StatusInformation": null,
  "VersionName": null,
  "ResponseMetadata": {
    "RequestId": "54eada19-52ec-49a7-bf17-b040f2269628",
    "Metadata": {},
    "ChecksumAlgorithm": 0,
    "ChecksumValidationStatus": 0
  },
  "ContentLength": 33259,
  "HttpStatusCode": 200,
  "LoggedAt": "2023-04-27T07:11:48.1169051+00:00"
}
