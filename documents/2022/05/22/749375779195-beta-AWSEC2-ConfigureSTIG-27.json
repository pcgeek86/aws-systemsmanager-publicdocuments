{
  "AttachmentsContent": [],
  "Content": "{\n  \"schemaVersion\" : \"2.2\",\n  \"description\" : \"Applies STIGs for Amazon Linux 2, Red Hat Enterprise Linux (RHEL) 7, CentOS 7, RHEL 8, CentOS 8, and Windows Server 2019/2016/2012 R2 (Core/Base).\",\n  \"parameters\" : {\n    \"Level\" : {\n      \"allowedValues\" : [ \"High\", \"Medium\", \"Low\" ],\n      \"default\" : \"High\",\n      \"description\" : \"(Required) Choose the STIG severity category to apply.\",\n      \"type\" : \"String\"\n    }\n  },\n  \"mainSteps\" : [ {\n    \"inputs\" : {\n      \"runCommand\" : [ \"$region = 'us-west-2'\", \"$urlSufix = 'amazonaws.com'\", \"[string]$level = '{{ Level }}'\", \"[string]$stagingPath = 'C:\\\\__AWSCSTIGPrep__\\\\STIG'\", \"[string]$s3Bucket = 'aws-windows-downloads'\", \"[string]$stigZip = 'AWSConfigureSTIG_1_5.zip'\", \"[string]$stigZipPath = Join-Path $stagingPath -ChildPath $stigZip\", \"[string]$stigDownloadHash = '28B3C7AF28EFFB594C77C3DB8E0AE46A0AEE9434AA166FC272642AFDB444549D'\", \"\", \"#Test to confirm OS version\", \"Function Test-OSVersion {\", \"    [string]$osReg = 'HKLM:\\\\SOFTWARE\\\\Microsoft\\\\Windows NT\\\\CurrentVersion'\", \"    $osVersion = (Get-ItemProperty $OSReg).CurrentVersion\", \"    [string]$osType = (Get-ItemProperty $OSReg).EditionID\", \"\", \"    If ( $osVersion -lt 6.3 ) {\", \"        Write-Output 'This document is not designed to support OS versions older then Server 2012R2'\", \"        Exit -1\", \"    }\", \"\", \"    If ( $osType -like \\\"*Nano*\\\" ) {\", \"        Write-Output 'This document is not designed to support Nano Server.'\", \"        Exit -1\", \"    }\", \"}\", \"\", \"#Make dir and download the required files\", \"Function Get-Zip {\", \"\", \"    If ( !( Test-Path -Path $stagingPath ) ) {\", \"        Try {\", \"            New-Item -ItemType Directory -Path $stagingPath -Force\", \"        }\", \"        Catch {\", \"            Write-Output \\\"Failed to create folder due to: $_.\\\"\", \"            Cleanup\", \"            Exit -1\", \"        }\", \"    }\", \"\", \"    $s3Path = 'https://{0}-{1}.s3.{1}.{2}/STIG/{3}'\", \"\", \"    $s3Location = $s3Path -f $s3Bucket, $region, $urlSufix, $stigZip\", \"\", \"    Try {\", \"         (New-Object Net.WebClient).DownloadFile($s3Location, $stigZipPath)\", \"    }\", \"    Catch {\", \"        Write-Output \\\"Failed to download the required files, due to: $_.\\\"\", \"        Cleanup\", \"        Exit -1\", \"    }\", \"\", \"    $downloadHash = (Get-FileHash -Path $stigZipPath -Algorithm SHA256).hash\", \"\", \"    If ( $downloadHash -ne $stigDownloadHash ) {\", \"        Write-Output \\\"The file doesn't have the expected hash.  Exiting.\\\"\", \"        Cleanup\", \"        Exit -1\", \"    }\", \"}\", \"\", \"#Expands downloaded zip files, 2012 doesn't have the Expand-Archive\", \"Function Expand-Zip {\", \"    [string]$psVersion = $PSVersionTable.PSVersion.Major\", \"\", \"    If ( $psVersion -le '4' ) {\", \"        Try {\", \"            Add-Type -AssemblyName System.IO.Compression.FileSystem\", \"            [IO.Compression.ZipFile]::ExtractToDirectory($stigZipPath, $stagingPath)\", \"        }\", \"        Catch {\", \"            Write-Output \\\"Failed to extract the zip file due to: $_.\\\"\", \"            Cleanup\", \"            Exit -1\", \"        }\", \"    }\", \"    Else {\", \"        Try {\", \"            Expand-Archive -Path $stigZipPath -DestinationPath $stagingPath -Force\", \"        }\", \"        Catch {\", \"            Write-Output \\\"Failed to extract the zip file due to: $_.\\\"\", \"            Cleanup\", \"            Exit -1\", \"        }\", \"    }\", \"}\", \"\", \"#Run STIG Script\", \"Function Install-STIG {\", \"    Try {\", \"        &\\\"$stagingPath\\\\WinSTIGConfig.ps1\\\" $level $stagingPath\", \"        Write-Output \\\"STIGs $level and/or lower have been applied.\\\"\", \"    }\", \"    Catch {\", \"        Write-Output \\\"Failed to run the STIG configuration script due to: $_.\\\"\", \"        Cleanup\", \"        Exit -1\", \"    }\", \"\", \"    If ($LastExitCode -ne 0) {\", \"        Write-Output \\\"Failed to run the STIG configuration script.\\\"\", \"        Cleanup\", \"        Exit -1\", \"    }\", \"}\", \"\", \"#Cleanup any remaining files\", \"Function Cleanup {\", \"    If (Test-Path \\\"$stagingPath\\\") {\", \"        Try {\", \"            Remove-Item -Path \\\"$stagingPath\\\" -Recurse\", \"            Write-Output 'STIG staging path removed.'\", \"        }\", \"        Catch {\", \"            \\\"Failed to clean up the staging area, due to: $_.\\\"\", \"            Exit -1\", \"        }\", \"    }\", \"}\", \"\", \"Test-OSVersion\", \"Get-Zip\", \"Expand-Zip\", \"Install-STIG\", \"Cleanup\" ]\n    },\n    \"name\" : \"ApplyWindowsSTIGs\",\n    \"action\" : \"aws:runPowerShellScript\",\n    \"precondition\" : {\n      \"StringEquals\" : [ \"platformType\", \"Windows\" ]\n    }\n  }, {\n    \"inputs\" : {\n      \"runCommand\" : [ \"#!/bin/bash\", \"\", \"function CheckOS() {\", \"\", \"    OSFile=/etc/os-release\", \"\", \"    if [ -e $OSFile ]; then\", \"        . $OSFile\", \"        OSVersion=\\\"$ID${VERSION_ID:+.${VERSION_ID}}\\\"\", \"    else\", \"        echo \\\"The file $OSFile does not exist. Failing build.\\\"\", \"        exit 1\", \"    fi\", \"\", \"    if [ $(echo \\\"$OSVersion\\\" | grep -E \\\"^amzn\\\\.2\\\") ]; then\", \"        script='AL2stigconfig.sh'\", \"        Main\", \"    elif [ $(echo \\\"$OSVersion\\\" | grep -E \\\"^((centos|rhel)\\\\.7)\\\") ]; then\", \"        script='RHEL7stigconfig.sh'\", \"        Main\", \"    elif [ $(echo \\\"$OSVersion\\\" | grep -E \\\"^((centos|rhel)\\\\.8)\\\") ]; then\", \"        script='RHEL8stigconfig.sh'\", \"        Main\", \"    else\", \"        echo 'This document is designed to work with only Amazon Linux 2, Red Hat Enterprise Linux (RHEL) 7, CentOS 7, RHEL 8, and CentOS8. This OS is unsupported. Exiting.'\", \"        exit 1\", \"    fi\", \"}\", \"\", \"function CheckcURL () {\", \"   curlInstall=$(rpm -q curl)\", \"\", \"   if [ ! \\\"$curlInstall\\\" == 'package curl is not installed' ]; then\", \"       Get_Tar\", \"   else\", \"       sudo yum install curl -y\", \"       Get_Tar\", \"       sudo yum remove curl -y\", \"   fi\", \"}\", \"\", \"function Get_Tar () {\", \"   s3Location=\\\"https://$s3Bucket-$region.s3.$region.$urlSufix/STIG/$stigTar\\\"\", \"\", \"   chmod 700 ${stagingPath}\", \"\", \"   [ ! -d \\\"$stagingPath\\\" ] && mkdir -p \\\"$stagingPath\\\"\", \"\", \"   sudo curl -L \\\"$s3Location\\\" -o \\\"$stigTarPath\\\" || { echo 'Failed to download the file properly. Exiting'; exit 1; }\", \"\", \"   comparedHash=\\\"$(echo \\\"$stigDownloadHash\\\" \\\"$stigTarPath\\\" | sha256sum --c)\\\"\", \"\", \"   [[ $comparedHash == *\\\"OK\\\"* ]] || { echo 'File does not have the expected hash. Incorrect file downloaded. Exiting.'; Cleanup; exit 1; }\", \"}\", \"\", \"function Expand_Tar () {\", \"   tarInstalled=$(rpm -q tar)\", \"\", \"   if [ ! \\\"$tarInstalled\\\" == 'package tar is not installed' ]; then\", \"       sudo tar -xvf \\\"$stigTarPath\\\" -C \\\"$stagingPath\\\" || { echo 'File failed to extract properly.  Unable to continue.'; Cleanup; exit 1; }\", \"   else\", \"       sudo yum install tar -y\", \"       sudo tar -xvf \\\"$stigTarPath\\\" -C \\\"$stagingPath\\\" || { echo 'File failed to extract properly.  Unable to continue.'; Cleanup; exit 1; }\", \"       sudo yum remove tar -y\", \"   fi\", \"}\", \"\", \"function Install_STIG () {\", \"   { sudo sh \\\"$stagingPath\\\"/\\\"$script\\\" \\\"$level\\\" \\\"$stagingPath\\\" && echo \\\"STIGs $level and/or lower have been applied.\\\"; Cleanup; exit 0; } || { echo 'Failed to run the STIG configuration script. Exiting.'; Cleanup; exit 1; }\", \"}\", \"\", \"function Cleanup () {\", \"    [ -d $stagingPath ] && ( (rm -rf \\\"$stagingPath\\\" && echo 'Staging directory has been cleaned.') || echo 'Failed to clean up the staging directory.')\", \"}\", \"\", \"function Main () {\", \"    CheckcURL\", \"    Expand_Tar\", \"    Install_STIG\", \"    Cleanup\", \"}\", \"\", \"region='us-west-2'\", \"urlSufix='amazonaws.com'\", \"level=\\\"{{ Level }}\\\"\", \"s3Bucket='aws-windows-downloads'\", \"stagingPath=$(mktemp -d)\", \"stigTar='LinuxAWSConfigureSTIG_3_5_1.tgz'\", \"stigTarPath=\\\"$stagingPath/$stigTar\\\"\", \"stigDownloadHash='c43034e8b8c6e5f51711d326010594b76037cb96bdc3d848eef3f9029be3be39'\", \"\", \"\", \"CheckOS\" ]\n    },\n    \"name\" : \"ApplyLinuxSTIGs\",\n    \"action\" : \"aws:runShellScript\",\n    \"precondition\" : {\n      \"StringEquals\" : [ \"platformType\", \"Linux\" ]\n    }\n  } ]\n}",
  "CreatedDate": "2022-01-31T17:13:39.096Z",
  "DisplayName": null,
  "DocumentFormat": {
    "Value": "JSON"
  },
  "DocumentType": {
    "Value": "Command"
  },
  "DocumentVersion": "27",
  "Name": "arn:aws:ssm:us-west-2:749375779195:document/beta-AWSEC2-ConfigureSTIG",
  "Requires": [],
  "ReviewStatus": null,
  "Status": {
    "Value": "Active"
  },
  "StatusInformation": null,
  "VersionName": null,
  "ResponseMetadata": {
    "RequestId": "1a1c6687-c407-4503-8b49-9a5827d52c56",
    "Metadata": {},
    "ChecksumAlgorithm": 0,
    "ChecksumValidationStatus": 0
  },
  "ContentLength": 8877,
  "HttpStatusCode": 200,
  "LoggedAt": "2022-05-22T07:13:16.3984135+00:00"
}
