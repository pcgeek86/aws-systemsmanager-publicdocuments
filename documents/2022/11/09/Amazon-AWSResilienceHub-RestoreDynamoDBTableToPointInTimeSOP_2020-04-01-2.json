{
  "AttachmentsContent": [],
  "Content": "{\n  \"description\" : \"## Id\\nAWSResilienceHub-RestoreDynamoDBTableToPointInTimeSOP_2020-04-01\\n\\n## Intent\\nRecover the table into an old stable state using existing Point in Time snapshot\\n\\n## Type\\nSOP\\n\\n## Risk\\nSmall\\n\\n## Requirements\\n  * Source DynamoDB table\\n  * The point in time recovery property has to be enabled for the source DynamoDB table\\n  * Target DynamoDB table\\n\\n## Permissions required for AutomationAssumeRole\\n  * dynamodb:RestoreTableToPointInTime\\n  * dynamodb:DescribeTable\\n  * dynamodb:Scan\\n  * dynamodb:Query\\n  * dynamodb:UpdateItem\\n  * dynamodb:PutItem\\n  * dynamodb:GetItem\\n  * dynamodb:DeleteItem\\n  * dynamodb:BatchWriteItem\\n\\n##### Permissions required in case Kinesis Streaming destination is enabled\\n  * kinesis:DescribeStream\\n  * kinesis:PutRecord\\n  * kinesis:PutRecords\\n\\n##### Permissions required to copy properties from source to restored table if `CopyAllProperties` option is enabled\\n  * dynamodb:UpdateTable\\n  * ssm:GetAutomationExecution\\n  * ssm:StartAutomationExecution\\n  * dynamodb:CreateTableReplica\\n  * dynamodb:CreateTable\\n  * dynamodb:DescribeKinesisStreamingDestination\\n  * dynamodb:EnableKinesisStreamingDestination\\n  * dynamodb:DescribeTimeToLive\\n  * dynamodb:UpdateTimeToLive\\n  * dynamodb:ListTagsOfResource\\n  * dynamodb:TagResource\\n  * dynamodb:DescribeContributorInsights\\n  * dynamodb:UpdateContributorInsights\\n  * dynamodb:DescribeContinuousBackups\\n  * dynamodb:UpdateContinuousBackups\\n  * application-autoscaling:DescribeScalableTargets\\n  * application-autoscaling:RegisterScalableTarget\\n  * iam:PassRole (passed to application-autoscaling.amazonaws.com)\\n  * cloudwatch:DescribeAlarms\\n  * cloudwatch:PutMetricAlarm\\n\\n## Depends on\\nAWSResilienceHub-CopyDynamoDBTablePropertiesUtil_2020-04-01\\n\\n## Cancellation behavior\\nFail\\n\\n## Inputs\\n### (Required) AutomationAssumeRole\\n  * type: String\\n  * description: ARN of the IAM role with permissions listed above\\n\\n### (Required) DynamoDBTableSourceName\\n  * type: String\\n  * description: DynamoDB Table Source Name\\n\\n### (Required) DynamoDBTableTargetName\\n  * type: String\\n  * description: DynamoDB Table Target Name\\n\\n### (Optional) RecoveryPointDateTime\\n  * type: String\\n  * description: The recovery point in time in format YYYY-MM-DDTHH:MM:SSZ\\n  * default: \\\"latest\\\"\\n\\n### (Optional) CopyAllProperties\\n  * type: Boolean\\n  * description: True of False. If True copies all the settings from Source table to the restored one\\n  * default: True\\n\\n### (Optional) DynamoDBSourceTableAlarmNames\\n  * type: StringList\\n  * description: The DynamoDB Source Table Alarm Names to recover (only metric alarms based on metrics with AWS/DynamoDB namespace)\\n  * max items: 10\\n  * default: []\\n\\n## Details\\nThe document verifies that DynamoDB table is active and point in time recovery is enabled, then restores\\nthe table to the latest snapshot or to the specified point in time snapshot, waits for table to become\\nactive, and if `CopyAllProperties` is set to True copies all possible properties from the source table\\nto the restored one. If `DynamoDBSourceTableAlarmNames` is provided copies the specified alarms from\\nthe source table, up to 10 alarms. Note that triggers and IAM policy can't be copied from source. Item\\ncount doesn't appear immediately because DynamoDB updates this value every 6 hours.\\n\\n## Steps executed in normal flow\\n  * RecordStartTime\\n  * verifyDynamoDBTableTargetStatus\\n  * verifyDynamoDBTargetTablePointInTimeRecovery\\n  * CheckIfUseLatestRecoveryPoint\\n  * RestoreDynamoDBTableToPointInTime or RestoreDynamoDBTableLatestToPointInTime\\n  * WaitTableToBeActive\\n  * CheckIfNeedToCopyAllProperties\\n  * CopyAllTableProperties\\n  * OutputRecoveryTime\\n\\n## Outputs\\n### RestoreDynamoDBTableLatestToPointInTime.TargetTableArn\\n  * type: String\\n  * description: ARN of the restored table (if recovered to the latest snapshot)\\n\\n### RestoreDynamoDBTableLatestToPointInTime.RecoveryPoint\\n  * type: String\\n  * description: Timestamp of the snapshot used to restore (if recovered to the latest snapshot)\\n\\n### RestoreDynamoDBTableToPointInTime.TargetTableArn\\n  * type: String\\n  * description: ARN of the restored table\\n\\n### RestoreDynamoDBTableToPointInTime.RecoveryPoint\\n  * type: String\\n  * description: Timestamp of the snapshot used to restore\\n\\n### OutputRecoveryTime.RecoveryTime\\n  * type: Integer\\n  * description: Time to recover in seconds\",\n  \"schemaVersion\" : \"0.3\",\n  \"assumeRole\" : \"{{ AutomationAssumeRole }}\",\n  \"parameters\" : {\n    \"DynamoDBTableSourceName\" : {\n      \"type\" : \"String\",\n      \"description\" : \"(Required) The DynamoDB Table Source Name.\"\n    },\n    \"DynamoDBTableTargetName\" : {\n      \"type\" : \"String\",\n      \"description\" : \"(Required) The DynamoDB Table Target Name.\"\n    },\n    \"RecoveryPointDateTime\" : {\n      \"type\" : \"String\",\n      \"description\" : \"(Optional) The recovery point in time in format YYYY-MM-DDTHH:MM:SSZ\",\n      \"allowedPattern\" : \"^latest$|^\\\\d{4}-[01]\\\\d-[0-3]\\\\dT[0-2]\\\\d:[0-5]\\\\d:[0-5]\\\\d([+-][0-2]\\\\d[0-5]\\\\d|Z)$\",\n      \"default\" : \"latest\"\n    },\n    \"CopyAllProperties\" : {\n      \"type\" : \"Boolean\",\n      \"description\" : \"(Optional) If True copies all the settings from Source table to the restored on\",\n      \"default\" : true\n    },\n    \"DynamoDBSourceTableAlarmNames\" : {\n      \"type\" : \"StringList\",\n      \"description\" : \"(Optional) The DynamoDB Source Table Alarm Names (only metric alarms based on metrics with AWS/DynamoDB namespace)\",\n      \"maxItems\" : 10,\n      \"default\" : [ ]\n    },\n    \"AutomationAssumeRole\" : {\n      \"type\" : \"String\",\n      \"description\" : \"(Required) The ARN of the role that allows Automation to perform the actions on your behalf.\"\n    }\n  },\n  \"outputs\" : [ \"RestoreDynamoDBTableLatestToPointInTime.TargetTableArn\", \"RestoreDynamoDBTableToPointInTime.TargetTableArn\", \"OutputRecoveryTime.RecoveryTime\", \"RestoreDynamoDBTableLatestToPointInTime.RecoveryPoint\", \"RestoreDynamoDBTableToPointInTime.RecoveryPoint\" ],\n  \"mainSteps\" : [ {\n    \"name\" : \"RecordStartTime\",\n    \"description\" : \"Start recording execution time\",\n    \"action\" : \"aws:executeScript\",\n    \"outputs\" : [ {\n      \"Name\" : \"StartTime\",\n      \"Selector\" : \"$.Payload\",\n      \"Type\" : \"String\"\n    } ],\n    \"inputs\" : {\n      \"Runtime\" : \"python3.8\",\n      \"Handler\" : \"start_time\",\n      \"Script\" : \"import boto3\\nimport logging\\nfrom datetime import datetime, timezone\\nimport time\\n\\nfrom botocore.exceptions import ClientError\\nfrom dateutil import parser\\n\\nlogger = logging.getLogger()\\nlogger.setLevel(logging.INFO)\\n\\n\\n\\ndef start_time(events, context):\\n    return datetime.now(timezone.utc).isoformat()\"\n    }\n  }, {\n    \"name\" : \"verifyDynamoDBTableTargetStatus\",\n    \"description\" : \"Verify that the target table is active\",\n    \"action\" : \"aws:assertAwsResourceProperty\",\n    \"onFailure\" : \"Abort\",\n    \"inputs\" : {\n      \"Service\" : \"dynamodb\",\n      \"Api\" : \"DescribeTable\",\n      \"TableName\" : \"{{ DynamoDBTableSourceName }}\",\n      \"PropertySelector\" : \"$.Table.TableStatus\",\n      \"DesiredValues\" : [ \"ACTIVE\" ]\n    },\n    \"nextStep\" : \"verifyDynamoDBTargetTablePointInTimeRecovery\"\n  }, {\n    \"name\" : \"verifyDynamoDBTargetTablePointInTimeRecovery\",\n    \"description\" : \"Verify that ContinuousBackupsStatus for the target table is enabled\",\n    \"action\" : \"aws:assertAwsResourceProperty\",\n    \"onFailure\" : \"Abort\",\n    \"inputs\" : {\n      \"Service\" : \"dynamodb\",\n      \"Api\" : \"DescribeContinuousBackups\",\n      \"TableName\" : \"{{ DynamoDBTableSourceName }}\",\n      \"PropertySelector\" : \"$.ContinuousBackupsDescription.ContinuousBackupsStatus\",\n      \"DesiredValues\" : [ \"ENABLED\" ]\n    }\n  }, {\n    \"name\" : \"CheckIfUseLatestRecoveryPoint\",\n    \"description\" : \"Check if recover from the latest snapshot or from the spicifed point in time\",\n    \"action\" : \"aws:branch\",\n    \"inputs\" : {\n      \"Choices\" : [ {\n        \"NextStep\" : \"RestoreDynamoDBTableLatestToPointInTime\",\n        \"Variable\" : \"{{RecoveryPointDateTime}}\",\n        \"EqualsIgnoreCase\" : \"latest\"\n      } ],\n      \"Default\" : \"RestoreDynamoDBTableToPointInTime\"\n    }\n  }, {\n    \"name\" : \"RestoreDynamoDBTableLatestToPointInTime\",\n    \"description\" : \"Restore target table to the latest snapshot\",\n    \"action\" : \"aws:executeAwsApi\",\n    \"maxAttempts\" : 3,\n    \"onFailure\" : \"Abort\",\n    \"inputs\" : {\n      \"Service\" : \"dynamodb\",\n      \"Api\" : \"RestoreTableToPointInTime\",\n      \"SourceTableName\" : \"{{ DynamoDBTableSourceName }}\",\n      \"TargetTableName\" : \"{{ DynamoDBTableTargetName }}\",\n      \"UseLatestRestorableTime\" : true\n    },\n    \"outputs\" : [ {\n      \"Name\" : \"RecoveryPoint\",\n      \"Selector\" : \"$.TableDescription.RestoreSummary.RestoreDateTime\",\n      \"Type\" : \"String\"\n    }, {\n      \"Name\" : \"TargetTableArn\",\n      \"Selector\" : \"$.TableDescription.TableArn\",\n      \"Type\" : \"String\"\n    } ],\n    \"nextStep\" : \"WaitTableToBeActive\"\n  }, {\n    \"name\" : \"RestoreDynamoDBTableToPointInTime\",\n    \"description\" : \"Restore target table to the specified snapshot\",\n    \"action\" : \"aws:executeAwsApi\",\n    \"maxAttempts\" : 3,\n    \"onFailure\" : \"Abort\",\n    \"inputs\" : {\n      \"Service\" : \"dynamodb\",\n      \"Api\" : \"RestoreTableToPointInTime\",\n      \"SourceTableName\" : \"{{ DynamoDBTableSourceName }}\",\n      \"TargetTableName\" : \"{{ DynamoDBTableTargetName }}\",\n      \"RestoreDateTime\" : \"{{ RecoveryPointDateTime }}\"\n    },\n    \"outputs\" : [ {\n      \"Name\" : \"RecoveryPoint\",\n      \"Selector\" : \"$.TableDescription.RestoreSummary.RestoreDateTime\",\n      \"Type\" : \"String\"\n    }, {\n      \"Name\" : \"TargetTableArn\",\n      \"Selector\" : \"$.TableDescription.TableArn\",\n      \"Type\" : \"String\"\n    } ],\n    \"nextStep\" : \"WaitTableToBeActive\"\n  }, {\n    \"name\" : \"WaitTableToBeActive\",\n    \"description\" : \"Wait for the table to become active\",\n    \"action\" : \"aws:waitForAwsResourceProperty\",\n    \"maxAttempts\" : 3,\n    \"timeoutSeconds\" : 600,\n    \"inputs\" : {\n      \"Service\" : \"dynamodb\",\n      \"Api\" : \"DescribeTable\",\n      \"TableName\" : \"{{DynamoDBTableTargetName}}\",\n      \"PropertySelector\" : \"$.Table.TableStatus\",\n      \"DesiredValues\" : [ \"ACTIVE\" ]\n    }\n  }, {\n    \"name\" : \"CheckIfNeedToCopyAllProperties\",\n    \"description\" : \"Check that CopyAllProperties is enabled\",\n    \"action\" : \"aws:branch\",\n    \"inputs\" : {\n      \"Choices\" : [ {\n        \"NextStep\" : \"CopyAllTableProperties\",\n        \"Variable\" : \"{{CopyAllProperties}}\",\n        \"BooleanEquals\" : true\n      } ],\n      \"Default\" : \"OutputRecoveryTime\"\n    }\n  }, {\n    \"name\" : \"CopyAllTableProperties\",\n    \"description\" : \"Execute script to copy properties and alarms from the source table to the restored one\",\n    \"action\" : \"aws:executeAutomation\",\n    \"onFailure\" : \"Abort\",\n    \"inputs\" : {\n      \"DocumentName\" : \"AWSResilienceHub-CopyDynamoDBTablePropertiesUtil_2020-04-01\",\n      \"RuntimeParameters\" : {\n        \"AutomationAssumeRole\" : \"{{AutomationAssumeRole}}\",\n        \"DynamoDBTableSourceName\" : \"{{DynamoDBTableSourceName}}\",\n        \"DynamoDBTableTargetName\" : \"{{DynamoDBTableTargetName}}\",\n        \"DynamoDBSourceTableAlarmNames\" : \"{{DynamoDBSourceTableAlarmNames}}\"\n      }\n    }\n  }, {\n    \"name\" : \"OutputRecoveryTime\",\n    \"description\" : \"Calculate execution time\",\n    \"action\" : \"aws:executeScript\",\n    \"outputs\" : [ {\n      \"Name\" : \"RecoveryTime\",\n      \"Selector\" : \"$.Payload\",\n      \"Type\" : \"Integer\"\n    } ],\n    \"inputs\" : {\n      \"Runtime\" : \"python3.8\",\n      \"Handler\" : \"recovery_time\",\n      \"Script\" : \"import boto3\\nimport logging\\nfrom datetime import datetime, timezone\\nimport time\\n\\nfrom botocore.exceptions import ClientError\\nfrom dateutil import parser\\n\\nlogger = logging.getLogger()\\nlogger.setLevel(logging.INFO)\\n\\n\\n\\ndef recovery_time(events, context):\\n    return (datetime.now(timezone.utc) - parser.parse(events['StartTime'])).seconds\",\n      \"InputPayload\" : {\n        \"StartTime\" : \"{{ RecordStartTime.StartTime }}\"\n      }\n    },\n    \"isEnd\" : true\n  } ]\n}",
  "CreatedDate": "2022-04-25T18:27:47.782Z",
  "DisplayName": null,
  "DocumentFormat": {
    "Value": "JSON"
  },
  "DocumentType": {
    "Value": "Automation"
  },
  "DocumentVersion": "2",
  "Name": "AWSResilienceHub-RestoreDynamoDBTableToPointInTimeSOP_2020-04-01",
  "Requires": [],
  "ReviewStatus": null,
  "Status": {
    "Value": "Active"
  },
  "StatusInformation": null,
  "VersionName": null,
  "ResponseMetadata": {
    "RequestId": "81bb5a74-6db9-4760-b8b8-f8497d34a644",
    "Metadata": {},
    "ChecksumAlgorithm": 0,
    "ChecksumValidationStatus": 0
  },
  "ContentLength": 13061,
  "HttpStatusCode": 200,
  "LoggedAt": "2022-11-09T07:16:10.7267671+00:00"
}
