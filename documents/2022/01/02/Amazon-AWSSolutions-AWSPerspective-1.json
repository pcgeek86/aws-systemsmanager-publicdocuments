{
  "AttachmentsContent": [],
  "Content": "{\n  \"schemaVersion\" : \"1.0\",\n  \"description\" : \"AWS Perspective Set Up (SO0075) - Solution - Master Template (uksb-1qbkclgj9) (version:v1.0.0)\",\n  \"templateBody\" : {\n    \"AWSTemplateFormatVersion\" : \"2010-09-09\",\n    \"Description\" : \"AWS Perspective Set Up (SO0075) - Solution - Master Template (uksb-1qbkclgj9) (version:v1.0.0)\",\n    \"Transform\" : \"AWS::Serverless-2016-10-31\",\n    \"Globals\" : {\n      \"Api\" : {\n        \"Cors\" : {\n          \"AllowMethods\" : \"'GET,POST,OPTIONS,DELETE,PUT'\",\n          \"AllowHeaders\" : \"'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'\",\n          \"AllowOrigin\" : \"'*'\"\n        }\n      },\n      \"Function\" : {\n        \"Runtime\" : \"nodejs12.x\",\n        \"Environment\" : {\n          \"Variables\" : {\n            \"VERSION\" : \"1.0\"\n          }\n        }\n      }\n    },\n    \"Parameters\" : {\n      \"OptOutOfSendingAnonymousUsageMetrics\" : {\n        \"Type\" : \"String\",\n        \"Default\" : \"No\",\n        \"Description\" : \"Opt out of sending any anonymous usage metrics to AWS Perspective\",\n        \"AllowedValues\" : [ \"No\", \"Yes\" ]\n      },\n      \"AlreadyHaveConfigSetup\" : {\n        \"Type\" : \"String\",\n        \"Default\" : \"No\",\n        \"Description\" : \"Is AWS Config set-up within this Account or Region?\",\n        \"AllowedValues\" : [ \"No\", \"Yes\" ],\n        \"ConstraintDescription\" : \"Please specify if this account has config set-up (Yes / No)\"\n      },\n      \"CreateElasticsearchServiceRole\" : {\n        \"Type\" : \"String\",\n        \"Default\" : \"Yes\",\n        \"Description\" : \"Do you need an ElasticSearch Service Role to be created? You can check for a Role called AWSServiceRoleForAmazonElasticsearchService in your account. If it exists then you do NOT need one creating\",\n        \"AllowedValues\" : [ \"No\", \"Yes\" ],\n        \"ConstraintDescription\" : \"Please specify if this account has config set-up (Yes / No)\"\n      },\n      \"AdminUserEmailAddress\" : {\n        \"Type\" : \"String\",\n        \"AllowedPattern\" : \"^[\\\\w!#$%&’*+/=?`{|}~^-]+(?:\\\\.[\\\\w!#$%&’*+/=?`{|}~^-]+)*@(?:[a-zA-Z0-9-]+\\\\.)+[a-zA-Z]{2,6}$\",\n        \"ConstraintDescription\" : \"Must be an email address\",\n        \"Description\" : \"A user will be created in the UI. This email address will be used to send your username and password.\"\n      },\n      \"NeptuneInstanceClass\" : {\n        \"Type\" : \"String\",\n        \"Description\" : \"Neptune DB instance class that will be used for primary and all replicas. Changing this will affect the cost of running this solution.\",\n        \"Default\" : \"db.r5.large\",\n        \"AllowedValues\" : [ \"db.t3.medium\", \"db.r4.large\", \"db.r4.xlarge\", \"db.r4.2xlarge\", \"db.r4.4xlarge\", \"db.r4.8xlarge\", \"db.r5.large\", \"db.r5.xlarge\", \"db.r5.2xlarge\", \"db.r5.4xlarge\", \"db.r5.8xlarge\", \"db.r5.12xlarge\" ]\n      },\n      \"CreateNeptuneReplica\" : {\n        \"Type\" : \"String\",\n        \"AllowedValues\" : [ \"No\", \"Yes\" ],\n        \"Default\" : \"No\",\n        \"Description\" : \"If you would like a read replica creating in a separate AZ. Please select 'Yes'. This will increase the cost of running the solution.\"\n      }\n    },\n    \"Resources\" : {\n      \"LambdaExecutionRole\" : {\n        \"Type\" : \"AWS::IAM::Role\",\n        \"Metadata\" : {\n          \"wildcard_resources\" : \"Certain actions required by this role demand wildcard resource to be defined\",\n          \"cfn_nag\" : {\n            \"rules_to_suppress\" : [ {\n              \"id\" : \"W11\",\n              \"reason\" : \"Some actions require wildcard resources as stated above.\"\n            }, {\n              \"id\" : \"W76\",\n              \"reason\" : \"Policy is complex as it is used for executing a cloudformation template which requires a large number of permissions\"\n            }, {\n              \"id\" : \"F3\",\n              \"reason\" : \"We have locked it down as far as we can.\"\n            } ]\n          }\n        },\n        \"Properties\" : {\n          \"AssumeRolePolicyDocument\" : {\n            \"Statement\" : [ {\n              \"Effect\" : \"Allow\",\n              \"Principal\" : {\n                \"Service\" : [ \"lambda.amazonaws.com\" ]\n              },\n              \"Action\" : \"sts:AssumeRole\"\n            } ]\n          },\n          \"Path\" : \"/\",\n          \"ManagedPolicyArns\" : [ \"arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole\", \"arn:aws:iam::aws:policy/NeptuneFullAccess\" ],\n          \"Policies\" : [ {\n            \"PolicyName\" : \"lambda-execution-perspective\",\n            \"PolicyDocument\" : {\n              \"Version\" : \"2012-10-17\",\n              \"Statement\" : [ {\n                \"Effect\" : \"Allow\",\n                \"Action\" : [ \"events:PutRule\", \"events:DescribeRule\", \"events:PutTargets\" ],\n                \"Resource\" : \"*\"\n              }, {\n                \"Effect\" : \"Allow\",\n                \"Action\" : \"iam:PassRole\",\n                \"Resource\" : {\n                  \"Fn::Sub\" : \"arn:aws:iam::${AWS::AccountId}:role/*\"\n                }\n              }, {\n                \"Effect\" : \"Allow\",\n                \"Action\" : [ \"iam:GetRole\", \"iam:CreateRole\", \"iam:PutRolePolicy\", \"iam:getRolePolicy\", \"iam:AttachRolePolicy\", \"iam:CreateServiceLinkedRole\", \"iam:ListRoles\", \"iam:GetPolicy\", \"iam:CreatePolicy\", \"iam:CreateInstanceProfile\", \"iam:AddRoleToInstanceProfile\" ],\n                \"Resource\" : \"*\"\n              }, {\n                \"Effect\" : \"Allow\",\n                \"Action\" : [ \"cognito-idp:CreateUserPoolClient\", \"cognito-identity:SetIdentityPoolRoles\", \"cognito-idp:AdminCreateUser\" ],\n                \"Resource\" : [ {\n                  \"Fn::Sub\" : \"arn:aws:cognito-identity:${AWS::Region}:${AWS::AccountId}:identitypool/${PerspectiveCognitoIdentityPool}\"\n                }, {\n                  \"Fn::GetAtt\" : \"PerspectiveCognitoUserPool.Arn\"\n                } ]\n              }, {\n                \"Effect\" : \"Allow\",\n                \"Action\" : [ \"dynamodb:CreateTable\", \"dynamodb:DescribeTable\", \"dynamodb:DescribeContinuousBackups\", \"dynamodb:UpdateContinuousBackups\" ],\n                \"Resource\" : {\n                  \"Fn::Sub\" : \"arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}*\"\n                }\n              }, {\n                \"Effect\" : \"Allow\",\n                \"Action\" : [ \"s3:Get*\", \"s3:List*\", \"s3:Put*\", \"s3:Create*\" ],\n                \"Resource\" : \"arn:aws:s3:::*\"\n              }, {\n                \"Effect\" : \"Allow\",\n                \"Action\" : \"sts:AssumeRole\",\n                \"Resource\" : [ {\n                  \"Fn::Sub\" : \"arn:aws:iam::${AWS::AccountId}:role/*LambdaExecutionRole-*\"\n                } ]\n              }, {\n                \"Effect\" : \"Allow\",\n                \"Action\" : [ \"cloudformation:CreateStack\", \"cloudformation:CreateChangeSet\" ],\n                \"Resource\" : {\n                  \"Fn::Sub\" : \"arn:aws:cloudformation:${AWS::Region}:*\"\n                }\n              }, {\n                \"Effect\" : \"Allow\",\n                \"Action\" : [ \"ssm:GetParameters\", \"ssm:PutParameter\", \"ssm:AddTagsToResource\" ],\n                \"Resource\" : {\n                  \"Fn::Sub\" : \"arn:aws:ssm:${AWS::Region}:${AWS::AccountId}*\"\n                }\n              }, {\n                \"Effect\" : \"Allow\",\n                \"Action\" : [ \"config:PutConfigurationAggregator\", \"config:PutConfigRule\" ],\n                \"Resource\" : {\n                  \"Fn::Sub\" : \"arn:aws:config:${AWS::Region}:${AWS::AccountId}*\"\n                }\n              }, {\n                \"Effect\" : \"Allow\",\n                \"Action\" : [ \"config:PutDeliveryChannel\", \"config:DescribeConfigurationRecorders\", \"config:PutConfigurationRecorder\", \"config:StartConfigurationRecorder\", \"config:DescribeConfigurationAggregators\" ],\n                \"Resource\" : \"*\"\n              }, {\n                \"Effect\" : \"Allow\",\n                \"Action\" : [ \"ec2:AllocateAddress\", \"ec2:DescribeAddresses\", \"ec2:CreateVpc\", \"ec2:DescribeVpcEndpoints\", \"ec2:DescribeVpcs\", \"ec2:ModifyVpcAttribute\", \"ec2:CreateRouteTable\", \"ec2:CreateSubnet\", \"ec2:CreateNetworkAcl\", \"ec2:CreateInternetGateway\", \"ec2:DescribeRouteTables\", \"ec2:DescribeNetworkAcls\", \"ec2:CreateNetworkAclEntry\", \"ec2:DescribeSubnets\", \"ec2:DescribeInternetGateways\", \"ec2:ModifySubnetAttribute\", \"ec2:AttachInternetGateway\", \"ec2:ReplaceNetworkAclAssociation\", \"ec2:AssociateRouteTable\", \"ec2:CreateNatGateway\", \"ec2:DescribeNatGateways\", \"ec2:DescribeSecurityGroups\", \"ec2:CreateSecurityGroup\", \"ec2:CreateFlowLogs\", \"ec2:DescribeFlowLogs\" ],\n                \"Resource\" : \"*\"\n              }, {\n                \"Effect\" : \"Allow\",\n                \"Action\" : [ \"ec2:CreateVpcEndpoint\", \"ec2:CreateTags\", \"ec2:CreateRoute\", \"ec2:AuthorizeSecurityGroupIngress\", \"ec2:RevokeSecurityGroupEgress\", \"ec2:AuthorizeSecurityGroupEgress\" ],\n                \"Resource\" : {\n                  \"Fn::Sub\" : \"arn:aws:ec2:${AWS::Region}:${AWS::AccountId}*\"\n                }\n              }, {\n                \"Effect\" : \"Allow\",\n                \"Action\" : [ \"lambda:CreateFunction\", \"lambda:GetFunctionConfiguration\", \"lambda:GetFunction\", \"lambda:InvokeFunction\", \"lambda:AddPermission\", \"lambda:PublishLayerVersion\", \"lambda:GetLayerVersion\", \"lambda:EnableReplication\" ],\n                \"Resource\" : {\n                  \"Fn::Sub\" : \"arn:aws:lambda:*:${AWS::AccountId}*\"\n                }\n              }, {\n                \"Effect\" : \"Allow\",\n                \"Action\" : [ \"kms:List*\" ],\n                \"Resource\" : \"*\"\n              }, {\n                \"Effect\" : \"Allow\",\n                \"Action\" : [ \"kms:Describe*\", \"kms:Enable*\", \"kms:Get*\" ],\n                \"Resource\" : {\n                  \"Fn::Sub\" : \"arn:aws:kms:${AWS::Region}:${AWS::AccountId}*\"\n                }\n              }, {\n                \"Effect\" : \"Allow\",\n                \"Action\" : [ \"SNS:CreateTopic\", \"SNS:GetTopicAttributes\", \"SNS:Subscribe\" ],\n                \"Resource\" : {\n                  \"Fn::Sub\" : \"arn:aws:sns:${AWS::Region}:${AWS::AccountId}*\"\n                }\n              }, {\n                \"Effect\" : \"Allow\",\n                \"Action\" : [ \"rds:CreateDBClusterParameterGroup\", \"rds:CreateDBInstance\", \"rds:CreateDBSubnetGroup\", \"rds:CreateDBParameterGroup\", \"rds:ModifyDBClusterParameterGroup\", \"rds:ModifyDBParameterGroup\", \"rds:DescribeDBClusterParameterGroups\", \"rds:DescribeDBParameterGroups\", \"rds:RemoveTagsFromResource\", \"rds:AddTagsToResource\", \"rds:CreateDBCluster\" ],\n                \"Resource\" : {\n                  \"Fn::Sub\" : \"arn:aws:rds:${AWS::Region}:${AWS::AccountId}*\"\n                }\n              }, {\n                \"Effect\" : \"Allow\",\n                \"Action\" : [ \"rds:DescribeEngineDefaultClusterParameters\", \"rds:DescribeEngineDefaultParameters\" ],\n                \"Resource\" : \"*\"\n              }, {\n                \"Effect\" : \"Allow\",\n                \"Action\" : [ \"cloudwatch:PutMetricAlarm\", \"cloudwatch:DescribeAlarms\" ],\n                \"Resource\" : {\n                  \"Fn::Sub\" : \"arn:aws:cloudwatch:${AWS::Region}:${AWS::AccountId}:alarm:*\"\n                }\n              }, {\n                \"Effect\" : \"Allow\",\n                \"Action\" : [ \"es:CreateElasticsearchDomain\", \"es:DescribeElasticsearchDomain\", \"es:AddTags\" ],\n                \"Resource\" : {\n                  \"Fn::Sub\" : \"arn:aws:es:${AWS::Region}:${AWS::AccountId}:domain/*\"\n                }\n              }, {\n                \"Effect\" : \"Allow\",\n                \"Action\" : [ \"cloudfront:CreateCloudFrontOriginAccessIdentity\", \"cloudfront:CreateDistribution\", \"cloudfront:GetCloudFrontOriginAccessIdentity\", \"cloudfront:TagResource\", \"cloudfront:GetDistribution\" ],\n                \"Resource\" : \"*\"\n              }, {\n                \"Effect\" : \"Allow\",\n                \"Action\" : [ \"apigateway:GET\", \"apigateway:POST\", \"apigateway:PUT\", \"apigateway:PATCH\" ],\n                \"Resource\" : [ {\n                  \"Fn::Sub\" : \"arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${PerspectiveWebRestAPI}/*\"\n                }, {\n                  \"Fn::Sub\" : \"arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${ServerGremlinAPI}/*\"\n                }, {\n                  \"Fn::Sub\" : \"arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${PerspectiveDrawioWebRestAPI}/*\"\n                }, {\n                  \"Fn::Sub\" : \"arn:aws:apigateway:${AWS::Region}::/restapis/${PerspectiveWebRestAPI}/*\"\n                }, {\n                  \"Fn::Sub\" : \"arn:aws:apigateway:${AWS::Region}::/restapis/${ServerGremlinAPI}/*\"\n                }, {\n                  \"Fn::Sub\" : \"arn:aws:apigateway:${AWS::Region}::/restapis/${PerspectiveDrawioWebRestAPI}/*\"\n                }, {\n                  \"Fn::Sub\" : \"arn:aws:apigateway:${AWS::Region}::/account\"\n                } ]\n              }, {\n                \"Effect\" : \"Allow\",\n                \"Action\" : [ \"codepipeline:CreatePipeline\", \"codepipeline:GetPipeline\", \"codepipeline:GetPipelineState\" ],\n                \"Resource\" : {\n                  \"Fn::Sub\" : \"arn:aws:codepipeline:${AWS::Region}:${AWS::AccountId}*\"\n                }\n              }, {\n                \"Effect\" : \"Allow\",\n                \"Action\" : [ \"codebuild:BatchGetProjects\", \"codebuild:CreateProject\" ],\n                \"Resource\" : {\n                  \"Fn::Sub\" : \"arn:aws:codebuild:${AWS::Region}:${AWS::AccountId}*\"\n                }\n              }, {\n                \"Effect\" : \"Allow\",\n                \"Action\" : [ \"ecr:ListImages\", \"ecr:PutImage\", \"ecr:DescribeImages\", \"ecr:CreateRepository\", \"ecr:DescribeRepositories\", \"ecr:PutLifecyclePolicy\", \"ecr:SetRepositoryPolicy\" ],\n                \"Resource\" : {\n                  \"Fn::Sub\" : \"arn:aws:ecr:${AWS::Region}:${AWS::AccountId}:repository/*\"\n                }\n              }, {\n                \"Effect\" : \"Allow\",\n                \"Action\" : [ \"ecs:CreateCluster\", \"ecs:CreateTaskSet\", \"ecs:ListClusters\", \"ecs:ListServices\", \"ecs:RegisterTaskDefinition\" ],\n                \"Resource\" : \"*\"\n              }, {\n                \"Effect\" : \"Allow\",\n                \"Action\" : [ \"ecs:CreateService\", \"ecs:DeleteTaskSet\", \"ecs:DescribeClusters\", \"ecs:DescribeTasks\", \"ecs:DescribeTaskSets\", \"ecs:ListTasks\", \"ecs:TagResource\", \"ecs:UpdateTaskSet\" ],\n                \"Resource\" : {\n                  \"Fn::Sub\" : \"arn:aws:ecs:${AWS::Region}:${AWS::AccountId}*\"\n                }\n              }, {\n                \"Effect\" : \"Allow\",\n                \"Action\" : [ \"logs:CreateLogStream\", \"logs:DeleteLogGroup\", \"logs:GetLogEvents\", \"logs:DescribeLogStreams\", \"logs:DescribeLogGroups\", \"logs:PutRetentionPolicy\", \"logs:PutLogEvents\" ],\n                \"Resource\" : {\n                  \"Fn::Sub\" : \"arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:*\"\n                }\n              }, {\n                \"Effect\" : \"Allow\",\n                \"Action\" : [ \"logs:CreateLogGroup\" ],\n                \"Resource\" : \"*\"\n              }, {\n                \"Effect\" : \"Allow\",\n                \"Action\" : [ \"appsync:TagResource\", \"appsync:CreateGraphqlApi\", \"appsync:GetGraphqlApi\", \"appsync:StartSchemaCreation\", \"appsync:GetSchemaCreationStatus\", \"appsync:CreateDataSource\", \"appsync:GetDataSource\", \"appsync:CreateResolver\" ],\n                \"Resource\" : \"*\"\n              } ]\n            }\n          } ]\n        }\n      },\n      \"LambdaSetup\" : {\n        \"Type\" : \"AWS::Serverless::Function\",\n        \"Properties\" : {\n          \"Handler\" : \"index.handler\",\n          \"CodeUri\" : {\n            \"Bucket\" : {\n              \"Fn::Sub\" : \"solutions-${AWS::Region}\"\n            },\n            \"Key\" : \"aws-perspective/v1.0.1/setup.zip\"\n          },\n          \"Description\" : \"Custom Lambda resource for the Perspective Cloudformation Stack\",\n          \"MemorySize\" : 256,\n          \"Runtime\" : \"nodejs12.x\",\n          \"Role\" : {\n            \"Fn::GetAtt\" : [ \"LambdaExecutionRole\", \"Arn\" ]\n          },\n          \"Environment\" : {\n            \"Variables\" : {\n              \"ANONYMOUS_METRIC_OPT_OUT\" : {\n                \"Ref\" : \"OptOutOfSendingAnonymousUsageMetrics\"\n              },\n              \"NEPTUNE_INSTANCE_CLASS\" : {\n                \"Ref\" : \"NeptuneInstanceClass\"\n              },\n              \"CREATE_READ_REPLICA\" : {\n                \"Ref\" : \"CreateNeptuneReplica\"\n              },\n              \"ACCOUNT_ID\" : {\n                \"Ref\" : \"AWS::AccountId\"\n              },\n              \"API_GATEWAY\" : {\n                \"Fn::Sub\" : \"https://${PerspectiveWebRestAPI}.execute-api.${AWS::Region}.amazonaws.com/Prod\"\n              },\n              \"SERVER_API_GATEWAY\" : {\n                \"Fn::Sub\" : \"https://${ServerGremlinAPI}.execute-api.${AWS::Region}.amazonaws.com/Prod/\"\n              },\n              \"DRAWIO_API_GATEWAY\" : {\n                \"Fn::Sub\" : \"https://${PerspectiveDrawioWebRestAPI}.execute-api.${AWS::Region}.amazonaws.com/Prod/\"\n              },\n              \"COGNITO_IDENTITY_POOL\" : {\n                \"Ref\" : \"PerspectiveCognitoIdentityPool\"\n              },\n              \"COGNITO_USER_POOL_ID\" : {\n                \"Ref\" : \"PerspectiveCognitoUserPool\"\n              },\n              \"COGNITO_USER_POOL_WEB_CLIENT_ID\" : {\n                \"Ref\" : \"UserPoolClient\"\n              },\n              \"DEPLOYMENT_BUCKET\" : {\n                \"Fn::Sub\" : \"solutions-${AWS::Region}\"\n              },\n              \"DEPLOYMENT_BUCKET_KEY\" : \"aws-perspective/v1.0.1\",\n              \"IMAGE_VERSION\" : \"aws-perspective-9\",\n              \"REGION\" : {\n                \"Ref\" : \"AWS::Region\"\n              },\n              \"WEBUI_BUCKET\" : {\n                \"Ref\" : \"WebUIBucket\"\n              },\n              \"DISCOVERY_BUCKET\" : {\n                \"Ref\" : \"DiscoveryBucket\"\n              },\n              \"AMPLIFY_STORAGE_BUCKET\" : {\n                \"Ref\" : \"AmplifyStorageBucket\"\n              },\n              \"ACCESS_LOGS\" : {\n                \"Ref\" : \"AccessLogsBucket\"\n              },\n              \"DISCOVERY_ARN\" : {\n                \"Fn::GetAtt\" : [ \"PerspectiveDiscoveryRole\", \"Arn\" ]\n              },\n              \"CONFIG_AGGREGATOR\" : {\n                \"Fn::Sub\" : \"aws-perspective-${AWS::Region}-${AWS::AccountId}-aggregator\"\n              },\n              \"EXISTING_CONFIG\" : {\n                \"Ref\" : \"AlreadyHaveConfigSetup\"\n              },\n              \"CREATE_ES_SERVICE_ROLE\" : {\n                \"Ref\" : \"CreateElasticsearchServiceRole\"\n              },\n              \"APPSYNC_API_ARN\" : {\n                \"Fn::GetAtt\" : [ \"PerspectiveAppSyncApi\", \"Arn\" ]\n              },\n              \"APPSYNC_API_ID\" : {\n                \"Fn::GetAtt\" : [ \"PerspectiveAppSyncApi\", \"ApiId\" ]\n              },\n              \"APPSYNC_API_GRAPHQL_URL\" : {\n                \"Fn::GetAtt\" : [ \"PerspectiveAppSyncApi\", \"GraphQLUrl\" ]\n              }\n            }\n          },\n          \"Timeout\" : 900\n        }\n      },\n      \"DeployPerspectiveCustomResource\" : {\n        \"DependsOn\" : [ \"DiscoveryCodeBucket\", \"DiscoveryCodeBucketName\", \"PerspectiveCognitoIdentityPoolId\", \"PerspectiveCognitoUserPoolARN\", \"PerspectiveCognitoUserPoolId\", \"PerspectiveDrawioWebRestAPIId\", \"PerspectiveWebRestAPIId\", \"PerspectiveWebRestAPIResourceId\", \"PerspectiveDrawioWebRestAPIResourceId\", \"PerspectiveWebRestAPIRootResourceId\", \"PerspectiveDrawioWebRestAPIRootResourceId\", \"ServerElasticAPIResourceId\", \"ServerGremlinAPIId\", \"ServerGremlinAPIResourceId\" ],\n        \"Type\" : \"Custom::Setup\",\n        \"Properties\" : {\n          \"ServiceToken\" : {\n            \"Fn::GetAtt\" : [ \"LambdaSetup\", \"Arn\" ]\n          },\n          \"Region\" : {\n            \"Ref\" : \"AWS::Region\"\n          }\n        }\n      },\n      \"CleanupBucketFunction\" : {\n        \"Type\" : \"AWS::Serverless::Function\",\n        \"Properties\" : {\n          \"Handler\" : \"cleanup_bucket.handler\",\n          \"CodeUri\" : {\n            \"Bucket\" : {\n              \"Fn::Sub\" : \"solutions-${AWS::Region}\"\n            },\n            \"Key\" : \"aws-perspective/v1.0.1/cleanup-bucket.zip\"\n          },\n          \"Runtime\" : \"python3.8\",\n          \"Description\" : \"Custom Lambda resource for emptying S3 buckets on stack deletion\",\n          \"Timeout\" : 900,\n          \"Policies\" : [ {\n            \"Statement\" : [ {\n              \"Effect\" : \"Allow\",\n              \"Action\" : [ \"s3:DeleteObject*\", \"s3:ListBucket*\", \"s3:ListObject*\" ],\n              \"Resource\" : [ {\n                \"Fn::Sub\" : \"arn:aws:s3:::${WebUIBucket}\"\n              }, {\n                \"Fn::Sub\" : \"arn:aws:s3:::${WebUIBucket}/*\"\n              }, {\n                \"Fn::Sub\" : \"arn:aws:s3:::${DiscoveryBucket}\"\n              }, {\n                \"Fn::Sub\" : \"arn:aws:s3:::${DiscoveryBucket}/*\"\n              }, {\n                \"Fn::Sub\" : \"arn:aws:s3:::${AmplifyStorageBucket}\"\n              }, {\n                \"Fn::Sub\" : \"arn:aws:s3:::${AmplifyStorageBucket}/*\"\n              }, {\n                \"Fn::Sub\" : \"arn:aws:s3:::${AccessLogsBucket}\"\n              }, {\n                \"Fn::Sub\" : \"arn:aws:s3:::${AccessLogsBucket}/*\"\n              } ]\n            } ]\n          } ]\n        }\n      },\n      \"CleanupWebUIBucket\" : {\n        \"Type\" : \"Custom::Setup\",\n        \"Properties\" : {\n          \"ServiceToken\" : {\n            \"Fn::GetAtt\" : [ \"CleanupBucketFunction\", \"Arn\" ]\n          },\n          \"LogLevel\" : \"INFO\",\n          \"Bucket\" : {\n            \"Ref\" : \"WebUIBucket\"\n          }\n        }\n      },\n      \"CleanupAccessLoggingBucket\" : {\n        \"Type\" : \"Custom::Setup\",\n        \"Properties\" : {\n          \"ServiceToken\" : {\n            \"Fn::GetAtt\" : [ \"CleanupBucketFunction\", \"Arn\" ]\n          },\n          \"LogLevel\" : \"INFO\",\n          \"Bucket\" : {\n            \"Ref\" : \"AccessLogsBucket\"\n          }\n        },\n        \"DependsOn\" : [ \"CleanupWebUIBucket\", \"CleanupAmplifyStorageBucket\", \"CleanupDiscoveryBucket\" ]\n      },\n      \"CleanupAmplifyStorageBucket\" : {\n        \"Type\" : \"Custom::Setup\",\n        \"Properties\" : {\n          \"ServiceToken\" : {\n            \"Fn::GetAtt\" : [ \"CleanupBucketFunction\", \"Arn\" ]\n          },\n          \"LogLevel\" : \"INFO\",\n          \"Bucket\" : {\n            \"Ref\" : \"AmplifyStorageBucket\"\n          }\n        }\n      },\n      \"CleanupDiscoveryBucket\" : {\n        \"Type\" : \"Custom::Setup\",\n        \"Properties\" : {\n          \"ServiceToken\" : {\n            \"Fn::GetAtt\" : [ \"CleanupBucketFunction\", \"Arn\" ]\n          },\n          \"LogLevel\" : \"INFO\",\n          \"Bucket\" : {\n            \"Ref\" : \"DiscoveryBucket\"\n          }\n        }\n      },\n      \"PerspectiveCognitoIdentityPool\" : {\n        \"Type\" : \"AWS::Cognito::IdentityPool\",\n        \"Properties\" : {\n          \"IdentityPoolName\" : {\n            \"Fn::Sub\" : \"perspective.${AWS::Region}.identitypool\"\n          },\n          \"AllowUnauthenticatedIdentities\" : false,\n          \"CognitoIdentityProviders\" : [ {\n            \"ClientId\" : {\n              \"Ref\" : \"UserPoolClient\"\n            },\n            \"ProviderName\" : {\n              \"Fn::GetAtt\" : [ \"PerspectiveCognitoUserPool\", \"ProviderName\" ]\n            },\n            \"ServerSideTokenCheck\" : true\n          } ]\n        }\n      },\n      \"PerspectiveCognitoUserPool\" : {\n        \"Type\" : \"AWS::Cognito::UserPool\",\n        \"DeletionPolicy\" : \"Delete\",\n        \"UpdateReplacePolicy\" : \"Retain\",\n        \"Properties\" : {\n          \"AdminCreateUserConfig\" : {\n            \"AllowAdminCreateUserOnly\" : true,\n            \"UnusedAccountValidityDays\" : 90,\n            \"InviteMessageTemplate\" : {\n              \"EmailMessage\" : \"<!DOCTYPE html><html><body style=\\\"font-family:sans-serif\\\"><p>Thanks for your interest in AWS Perspective.</p><p>Here are your temporary credentials:</p><ul><li>Username: {username}</li><li>Password: {####}</li></ul><p>Any issues, please get in touch at <a href=\\\"mailto:aws-perspective-team@amazon.com\\\">aws-perspective-team@</a></p></body></html>\",\n              \"EmailSubject\" : \"Welcome to AWS Perspective\"\n            }\n          },\n          \"UserPoolName\" : {\n            \"Fn::Sub\" : \"perspective.${AWS::Region}.userpool\"\n          },\n          \"AutoVerifiedAttributes\" : [ \"email\" ],\n          \"Policies\" : {\n            \"PasswordPolicy\" : {\n              \"MinimumLength\" : 6,\n              \"RequireLowercase\" : true,\n              \"RequireNumbers\" : true,\n              \"RequireSymbols\" : true,\n              \"RequireUppercase\" : true\n            }\n          }\n        }\n      },\n      \"CognitoUserPoolAdmin\" : {\n        \"Type\" : \"AWS::Cognito::UserPoolUser\",\n        \"Properties\" : {\n          \"Username\" : \"admin\",\n          \"DesiredDeliveryMediums\" : [ \"EMAIL\" ],\n          \"UserPoolId\" : {\n            \"Ref\" : \"PerspectiveCognitoUserPool\"\n          },\n          \"UserAttributes\" : [ {\n            \"Name\" : \"email\",\n            \"Value\" : {\n              \"Ref\" : \"AdminUserEmailAddress\"\n            }\n          } ]\n        }\n      },\n      \"UserPoolClient\" : {\n        \"Type\" : \"AWS::Cognito::UserPoolClient\",\n        \"Properties\" : {\n          \"ClientName\" : \"aws-perspective-client-web\",\n          \"RefreshTokenValidity\" : 1,\n          \"UserPoolId\" : {\n            \"Ref\" : \"PerspectiveCognitoUserPool\"\n          },\n          \"PreventUserExistenceErrors\" : \"ENABLED\"\n        }\n      },\n      \"ApiGatewayCloudWatchRole\" : {\n        \"Type\" : \"AWS::IAM::Role\",\n        \"Properties\" : {\n          \"AssumeRolePolicyDocument\" : {\n            \"Statement\" : [ {\n              \"Effect\" : \"Allow\",\n              \"Principal\" : {\n                \"Service\" : [ \"apigateway.amazonaws.com\" ]\n              },\n              \"Action\" : \"sts:AssumeRole\"\n            } ]\n          },\n          \"Path\" : \"/\",\n          \"ManagedPolicyArns\" : [ \"arn:aws:iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs\" ]\n        }\n      },\n      \"Account\" : {\n        \"Type\" : \"AWS::ApiGateway::Account\",\n        \"Properties\" : {\n          \"CloudWatchRoleArn\" : {\n            \"Fn::GetAtt\" : [ \"ApiGatewayCloudWatchRole\", \"Arn\" ]\n          }\n        }\n      },\n      \"PerspectiveWebRestAPI\" : {\n        \"Type\" : \"AWS::ApiGateway::RestApi\",\n        \"Properties\" : {\n          \"Name\" : \"PerspectiveWebRestAPI\",\n          \"Description\" : \"The API used by Perspective UI\",\n          \"FailOnWarnings\" : true\n        }\n      },\n      \"PerspectiveDrawioWebRestAPI\" : {\n        \"Type\" : \"AWS::ApiGateway::RestApi\",\n        \"Properties\" : {\n          \"Name\" : \"PerspectiveDrawioWebRestAPI\",\n          \"Description\" : \"The API used by Perspective UI to generate drawio url\",\n          \"FailOnWarnings\" : true\n        }\n      },\n      \"PerspectiveWebOptionMethod\" : {\n        \"Type\" : \"AWS::ApiGateway::Method\",\n        \"Properties\" : {\n          \"ResourceId\" : {\n            \"Ref\" : \"PerspectiveWebResource\"\n          },\n          \"RestApiId\" : {\n            \"Ref\" : \"PerspectiveWebRestAPI\"\n          },\n          \"AuthorizationType\" : \"NONE\",\n          \"HttpMethod\" : \"OPTIONS\",\n          \"Integration\" : {\n            \"Type\" : \"MOCK\",\n            \"IntegrationResponses\" : [ {\n              \"ResponseParameters\" : {\n                \"method.response.header.Access-Control-Allow-Headers\" : \"'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'\",\n                \"method.response.header.Access-Control-Allow-Methods\" : \"'GET,POST,PUT,DELETE,OPTIONS'\",\n                \"method.response.header.Access-Control-Allow-Origin\" : \"'*'\"\n              },\n              \"ResponseTemplates\" : {\n                \"application/json\" : \"\"\n              },\n              \"StatusCode\" : \"200\"\n            } ],\n            \"PassthroughBehavior\" : \"NEVER\",\n            \"RequestTemplates\" : {\n              \"application/json\" : \"{\\\"statusCode\\\": 200}\"\n            }\n          },\n          \"MethodResponses\" : [ {\n            \"ResponseModels\" : {\n              \"application/json\" : \"Empty\"\n            },\n            \"ResponseParameters\" : {\n              \"method.response.header.Access-Control-Allow-Headers\" : true,\n              \"method.response.header.Access-Control-Allow-Methods\" : true,\n              \"method.response.header.Access-Control-Allow-Origin\" : true\n            },\n            \"StatusCode\" : \"200\"\n          } ]\n        }\n      },\n      \"PerspectiveDrawioWebOptionMethod\" : {\n        \"Type\" : \"AWS::ApiGateway::Method\",\n        \"Properties\" : {\n          \"ResourceId\" : {\n            \"Ref\" : \"PerspectiveDrawioWebResource\"\n          },\n          \"RestApiId\" : {\n            \"Ref\" : \"PerspectiveDrawioWebRestAPI\"\n          },\n          \"AuthorizationType\" : \"NONE\",\n          \"HttpMethod\" : \"OPTIONS\",\n          \"Integration\" : {\n            \"Type\" : \"MOCK\",\n            \"IntegrationResponses\" : [ {\n              \"ResponseParameters\" : {\n                \"method.response.header.Access-Control-Allow-Headers\" : \"'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'\",\n                \"method.response.header.Access-Control-Allow-Methods\" : \"'GET,POST,PUT,DELETE,OPTIONS'\",\n                \"method.response.header.Access-Control-Allow-Origin\" : \"'*'\"\n              },\n              \"ResponseTemplates\" : {\n                \"application/json\" : \"\"\n              },\n              \"StatusCode\" : \"200\"\n            } ],\n            \"PassthroughBehavior\" : \"NEVER\",\n            \"RequestTemplates\" : {\n              \"application/json\" : \"{\\\"statusCode\\\": 200}\"\n            }\n          },\n          \"MethodResponses\" : [ {\n            \"ResponseModels\" : {\n              \"application/json\" : \"Empty\"\n            },\n            \"ResponseParameters\" : {\n              \"method.response.header.Access-Control-Allow-Headers\" : true,\n              \"method.response.header.Access-Control-Allow-Methods\" : true,\n              \"method.response.header.Access-Control-Allow-Origin\" : true\n            },\n            \"StatusCode\" : \"200\"\n          } ]\n        }\n      },\n      \"PerspectiveDrawioWebResource\" : {\n        \"Type\" : \"AWS::ApiGateway::Resource\",\n        \"Properties\" : {\n          \"RestApiId\" : {\n            \"Ref\" : \"PerspectiveDrawioWebRestAPI\"\n          },\n          \"ParentId\" : {\n            \"Fn::GetAtt\" : [ \"PerspectiveDrawioWebRestAPI\", \"RootResourceId\" ]\n          },\n          \"PathPart\" : \"resources\"\n        }\n      },\n      \"PerspectiveWebResource\" : {\n        \"Type\" : \"AWS::ApiGateway::Resource\",\n        \"Properties\" : {\n          \"RestApiId\" : {\n            \"Ref\" : \"PerspectiveWebRestAPI\"\n          },\n          \"ParentId\" : {\n            \"Fn::GetAtt\" : [ \"PerspectiveWebRestAPI\", \"RootResourceId\" ]\n          },\n          \"PathPart\" : \"resources\"\n        }\n      },\n      \"PerspectiveAppSyncLoggingRole\" : {\n        \"Metadata\" : {\n          \"cfn_nag\" : {\n            \"rules_to_suppress\" : [ {\n              \"id\" : \"W11\",\n              \"reason\" : \"CreateLogGroup requires wildcard, but we have locked down actions that we can to resources in region and account\"\n            } ]\n          }\n        },\n        \"Type\" : \"AWS::IAM::Role\",\n        \"Properties\" : {\n          \"AssumeRolePolicyDocument\" : {\n            \"Version\" : \"2012-10-17\",\n            \"Statement\" : [ {\n              \"Effect\" : \"Allow\",\n              \"Principal\" : {\n                \"Service\" : [ \"appsync.amazonaws.com\" ]\n              },\n              \"Action\" : [ \"sts:AssumeRole\" ]\n            } ]\n          },\n          \"Policies\" : [ {\n            \"PolicyName\" : {\n              \"Fn::Sub\" : \"${AWS::StackName}-AWSAppSyncPushToCloudWatchLogsPolicy\"\n            },\n            \"PolicyDocument\" : {\n              \"Version\" : \"2012-10-17\",\n              \"Statement\" : [ {\n                \"Effect\" : \"Allow\",\n                \"Action\" : [ \"logs:CreateLogGroup\", \"logs:CreateLogStream\" ],\n                \"Resource\" : \"*\"\n              }, {\n                \"Effect\" : \"Allow\",\n                \"Action\" : [ \"logs:PutLogEvents\" ],\n                \"Resource\" : {\n                  \"Fn::Sub\" : \"arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:*\"\n                }\n              } ]\n            }\n          } ]\n        }\n      },\n      \"PerspectiveAppSyncApi\" : {\n        \"Type\" : \"AWS::AppSync::GraphQLApi\",\n        \"Properties\" : {\n          \"Name\" : {\n            \"Fn::Sub\" : \"${AWS::StackName}-AppSync-api\"\n          },\n          \"AuthenticationType\" : \"AMAZON_COGNITO_USER_POOLS\",\n          \"AdditionalAuthenticationProviders\" : [ {\n            \"AuthenticationType\" : \"AWS_IAM\"\n          } ],\n          \"LogConfig\" : {\n            \"CloudWatchLogsRoleArn\" : {\n              \"Fn::GetAtt\" : [ \"PerspectiveAppSyncLoggingRole\", \"Arn\" ]\n            },\n            \"FieldLogLevel\" : \"ALL\"\n          },\n          \"UserPoolConfig\" : {\n            \"UserPoolId\" : {\n              \"Ref\" : \"PerspectiveCognitoUserPool\"\n            },\n            \"AwsRegion\" : {\n              \"Fn::Sub\" : \"${AWS::Region}\"\n            },\n            \"DefaultAction\" : \"ALLOW\"\n          }\n        }\n      },\n      \"PerspectiveDiscoveryRole\" : {\n        \"Metadata\" : {\n          \"wildcard_resources\" : \"We have locked down resources as much as we can. The nature of the role requires read-only access to many services in order to discover what is in the account\",\n          \"cfn_nag\" : {\n            \"rules_to_suppress\" : [ {\n              \"id\" : \"W28\",\n              \"reason\" : \"Role is for ECS task execution. It defines the actions read-only actions required for the Perspective Discovery process to function\"\n            }, {\n              \"id\" : \"W11\",\n              \"reason\" : \"We have locked down resources as far as we can. It is read only access. The actions we define require wildcard resources\"\n            } ]\n          }\n        },\n        \"Type\" : \"AWS::IAM::Role\",\n        \"Properties\" : {\n          \"AssumeRolePolicyDocument\" : {\n            \"Statement\" : [ {\n              \"Action\" : [ \"sts:AssumeRole\" ],\n              \"Effect\" : \"Allow\",\n              \"Principal\" : {\n                \"AWS\" : {\n                  \"Fn::Sub\" : \"arn:aws:iam::${AWS::AccountId}:root\"\n                }\n              }\n            }, {\n              \"Action\" : [ \"sts:AssumeRole\" ],\n              \"Effect\" : \"Allow\",\n              \"Principal\" : {\n                \"Service\" : \"ecs-tasks.amazonaws.com\"\n              }\n            } ],\n            \"Version\" : \"2012-10-17\"\n          },\n          \"Policies\" : [ {\n            \"PolicyName\" : \"perspectiveAutoscaling\",\n            \"PolicyDocument\" : {\n              \"Version\" : \"2012-10-17\",\n              \"Statement\" : [ {\n                \"Action\" : \"autoscaling:Describe*\",\n                \"Effect\" : \"Allow\",\n                \"Resource\" : \"*\"\n              } ]\n            }\n          }, {\n            \"PolicyName\" : \"perspectiveEC2\",\n            \"PolicyDocument\" : {\n              \"Version\" : \"2012-10-17\",\n              \"Statement\" : [ {\n                \"Effect\" : \"Allow\",\n                \"Action\" : [ \"ec2:Get*\" ],\n                \"Resource\" : \"*\"\n              } ]\n            }\n          }, {\n            \"PolicyName\" : \"perspectiveEC2Wildcards\",\n            \"PolicyDocument\" : {\n              \"Version\" : \"2012-10-17\",\n              \"Statement\" : [ {\n                \"Effect\" : \"Allow\",\n                \"Action\" : [ \"ec2:Describe*\" ],\n                \"Resource\" : \"*\"\n              } ]\n            }\n          }, {\n            \"PolicyName\" : \"perspectiveIAM\",\n            \"PolicyDocument\" : {\n              \"Version\" : \"2012-10-17\",\n              \"Statement\" : [ {\n                \"Effect\" : \"Allow\",\n                \"Action\" : [ \"iam:Get*\", \"iam:List*\" ],\n                \"Resource\" : \"*\"\n              } ]\n            }\n          }, {\n            \"PolicyName\" : \"perspectiveAPIGateway\",\n            \"PolicyDocument\" : {\n              \"Version\" : \"2012-10-17\",\n              \"Statement\" : [ {\n                \"Effect\" : \"Allow\",\n                \"Action\" : [ \"apigateway:Get\" ],\n                \"Resource\" : \"arn:aws:apigateway:*::/*\"\n              } ]\n            }\n          }, {\n            \"PolicyName\" : \"perspectiveLoadBalancers\",\n            \"PolicyDocument\" : {\n              \"Version\" : \"2012-10-17\",\n              \"Statement\" : [ {\n                \"Action\" : \"elasticloadbalancing:Describe*\",\n                \"Effect\" : \"Allow\",\n                \"Resource\" : \"*\"\n              } ]\n            }\n          }, {\n            \"PolicyName\" : \"perspectiveRDS\",\n            \"PolicyDocument\" : {\n              \"Version\" : \"2012-10-17\",\n              \"Statement\" : [ {\n                \"Effect\" : \"Allow\",\n                \"Action\" : [ \"rds:Describe*\" ],\n                \"Resource\" : \"*\"\n              } ]\n            }\n          }, {\n            \"PolicyName\" : \"perspectiveLambda\",\n            \"PolicyDocument\" : {\n              \"Version\" : \"2012-10-17\",\n              \"Statement\" : [ {\n                \"Effect\" : \"Allow\",\n                \"Action\" : [ \"lambda:List*\", \"lambda:Get*\" ],\n                \"Resource\" : \"*\"\n              } ]\n            }\n          }, {\n            \"PolicyName\" : \"perspectiveCloudFormation\",\n            \"PolicyDocument\" : {\n              \"Version\" : \"2012-10-17\",\n              \"Statement\" : [ {\n                \"Effect\" : \"Allow\",\n                \"Action\" : [ \"logs:List*\", \"logs:Describe*\", \"logs:Get*\" ],\n                \"Resource\" : \"*\"\n              } ]\n            }\n          }, {\n            \"PolicyName\" : \"perspectiveCloudWatch\",\n            \"PolicyDocument\" : {\n              \"Version\" : \"2012-10-17\",\n              \"Statement\" : [ {\n                \"Effect\" : \"Allow\",\n                \"Action\" : [ \"cloudwatch:List*\", \"cloudwatch:Describe*\", \"cloudwatch:Get*\" ],\n                \"Resource\" : \"*\"\n              } ]\n            }\n          }, {\n            \"PolicyName\" : \"perspectiveECS\",\n            \"PolicyDocument\" : {\n              \"Version\" : \"2012-10-17\",\n              \"Statement\" : [ {\n                \"Effect\" : \"Allow\",\n                \"Action\" : [ \"ecs:List*\", \"ecs:Describe*\" ],\n                \"Resource\" : \"*\"\n              } ]\n            }\n          }, {\n            \"PolicyName\" : \"perspectiveConfig\",\n            \"PolicyDocument\" : {\n              \"Version\" : \"2012-10-17\",\n              \"Statement\" : [ {\n                \"Effect\" : \"Allow\",\n                \"Action\" : [ \"config:Get*\", \"config:Deliver*\", \"config:List*\", \"config:SelectResourceConfig\", \"config:PutDeliveryChannel\" ],\n                \"Resource\" : \"*\"\n              } ]\n            }\n          }, {\n            \"PolicyName\" : \"perspectiveCloudtrail\",\n            \"PolicyDocument\" : {\n              \"Version\" : \"2012-10-17\",\n              \"Statement\" : [ {\n                \"Effect\" : \"Allow\",\n                \"Action\" : [ \"cloudtrail:GetTrailStatus\" ],\n                \"Resource\" : {\n                  \"Fn::Sub\" : \"arn:aws:cloudtrail:${AWS::Region}:${AWS::AccountId}:trail*\"\n                }\n              } ]\n            }\n          }, {\n            \"PolicyName\" : \"perspectiveCloudtrailWildcards\",\n            \"PolicyDocument\" : {\n              \"Version\" : \"2012-10-17\",\n              \"Statement\" : [ {\n                \"Effect\" : \"Allow\",\n                \"Action\" : [ \"cloudtrail:DescribeTrails\", \"cloudtrail:LookupEvents\" ],\n                \"Resource\" : \"*\"\n              } ]\n            }\n          }, {\n            \"PolicyName\" : \"perspectiveTags\",\n            \"PolicyDocument\" : {\n              \"Version\" : \"2012-10-17\",\n              \"Statement\" : [ {\n                \"Effect\" : \"Allow\",\n                \"Action\" : [ \"tag:GetResources\", \"tag:GetTagKeys\" ],\n                \"Resource\" : \"*\"\n              } ]\n            }\n          }, {\n            \"PolicyName\" : \"perspective-discovery-data-s3\",\n            \"PolicyDocument\" : {\n              \"Version\" : \"2012-10-17\",\n              \"Statement\" : [ {\n                \"Effect\" : \"Allow\",\n                \"Action\" : [ \"s3:*Object\" ],\n                \"Resource\" : {\n                  \"Fn::Sub\" : [ \"${DiscoveryBucketARN}/*\", {\n                    \"DiscoveryBucketARN\" : {\n                      \"Fn::GetAtt\" : \"DiscoveryBucket.Arn\"\n                    }\n                  } ]\n                }\n              } ]\n            }\n          }, {\n            \"PolicyName\" : \"perspectiveExecuteApi\",\n            \"PolicyDocument\" : {\n              \"Version\" : \"2012-10-17\",\n              \"Statement\" : [ {\n                \"Effect\" : \"Allow\",\n                \"Action\" : [ \"execute-api:Invoke\" ],\n                \"Resource\" : [ {\n                  \"Fn::Sub\" : \"arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${PerspectiveWebRestAPI}/*\"\n                }, {\n                  \"Fn::Sub\" : \"arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${ServerGremlinAPI}/*\"\n                }, {\n                  \"Fn::Sub\" : \"arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${PerspectiveDrawioWebRestAPI}/*\"\n                } ]\n              } ]\n            }\n          } ]\n        }\n      },\n      \"WebUIBucket\" : {\n        \"Type\" : \"AWS::S3::Bucket\",\n        \"Properties\" : {\n          \"PublicAccessBlockConfiguration\" : {\n            \"BlockPublicAcls\" : true,\n            \"BlockPublicPolicy\" : true,\n            \"IgnorePublicAcls\" : true,\n            \"RestrictPublicBuckets\" : true\n          },\n          \"VersioningConfiguration\" : {\n            \"Status\" : \"Enabled\"\n          },\n          \"BucketEncryption\" : {\n            \"ServerSideEncryptionConfiguration\" : [ {\n              \"ServerSideEncryptionByDefault\" : {\n                \"SSEAlgorithm\" : \"AES256\"\n              }\n            } ]\n          },\n          \"LoggingConfiguration\" : {\n            \"DestinationBucketName\" : {\n              \"Ref\" : \"AccessLogsBucket\"\n            },\n            \"LogFilePrefix\" : \"webui-bucket/\"\n          },\n          \"CorsConfiguration\" : {\n            \"CorsRules\" : [ {\n              \"AllowedHeaders\" : [ \"*\" ],\n              \"AllowedMethods\" : [ \"GET\" ],\n              \"AllowedOrigins\" : [ \"*\" ],\n              \"Id\" : \"PerspectiveCorsRule\",\n              \"MaxAge\" : 3600\n            } ]\n          },\n          \"WebsiteConfiguration\" : {\n            \"IndexDocument\" : \"index.html\",\n            \"ErrorDocument\" : \"error.html\"\n          }\n        }\n      },\n      \"WebUIBucketPolicy\" : {\n        \"Type\" : \"AWS::S3::BucketPolicy\",\n        \"Properties\" : {\n          \"Bucket\" : {\n            \"Ref\" : \"WebUIBucket\"\n          },\n          \"PolicyDocument\" : {\n            \"Statement\" : [ {\n              \"Sid\" : \"HttpsOnly\",\n              \"Action\" : \"*\",\n              \"Effect\" : \"Deny\",\n              \"Resource\" : {\n                \"Fn::Sub\" : \"arn:aws:s3:::${WebUIBucket}/*\"\n              },\n              \"Principal\" : \"*\",\n              \"Condition\" : {\n                \"Bool\" : {\n                  \"aws:SecureTransport\" : \"false\"\n                }\n              }\n            } ]\n          }\n        }\n      },\n      \"AmplifyStorageBucket\" : {\n        \"Type\" : \"AWS::S3::Bucket\",\n        \"Properties\" : {\n          \"VersioningConfiguration\" : {\n            \"Status\" : \"Enabled\"\n          },\n          \"BucketEncryption\" : {\n            \"ServerSideEncryptionConfiguration\" : [ {\n              \"ServerSideEncryptionByDefault\" : {\n                \"SSEAlgorithm\" : \"AES256\"\n              }\n            } ]\n          },\n          \"LoggingConfiguration\" : {\n            \"DestinationBucketName\" : {\n              \"Ref\" : \"AccessLogsBucket\"\n            },\n            \"LogFilePrefix\" : \"amplify-storage-bucket/\"\n          },\n          \"CorsConfiguration\" : {\n            \"CorsRules\" : [ {\n              \"AllowedHeaders\" : [ \"*\" ],\n              \"AllowedMethods\" : [ \"GET\", \"POST\", \"PUT\", \"DELETE\" ],\n              \"AllowedOrigins\" : [ \"*\" ],\n              \"Id\" : \"PerspectiveCorsRule\",\n              \"MaxAge\" : 3600\n            } ]\n          }\n        }\n      },\n      \"AmplifyStorageBucketPolicy\" : {\n        \"Type\" : \"AWS::S3::BucketPolicy\",\n        \"Properties\" : {\n          \"Bucket\" : {\n            \"Ref\" : \"AmplifyStorageBucket\"\n          },\n          \"PolicyDocument\" : {\n            \"Statement\" : [ {\n              \"Sid\" : \"HttpsOnly\",\n              \"Action\" : \"*\",\n              \"Effect\" : \"Deny\",\n              \"Resource\" : {\n                \"Fn::Sub\" : \"arn:aws:s3:::${AmplifyStorageBucket}/*\"\n              },\n              \"Principal\" : \"*\",\n              \"Condition\" : {\n                \"Bool\" : {\n                  \"aws:SecureTransport\" : \"false\"\n                }\n              }\n            } ]\n          }\n        }\n      },\n      \"AccessLogsBucket\" : {\n        \"Metadata\" : {\n          \"cfn_nag\" : {\n            \"rules_to_suppress\" : [ {\n              \"id\" : \"W35\",\n              \"reason\" : \"This bucket will contain access logs for all buckets\"\n            } ]\n          }\n        },\n        \"Type\" : \"AWS::S3::Bucket\",\n        \"Properties\" : {\n          \"PublicAccessBlockConfiguration\" : {\n            \"BlockPublicAcls\" : true,\n            \"BlockPublicPolicy\" : true,\n            \"IgnorePublicAcls\" : true,\n            \"RestrictPublicBuckets\" : true\n          },\n          \"AccessControl\" : \"LogDeliveryWrite\",\n          \"VersioningConfiguration\" : {\n            \"Status\" : \"Enabled\"\n          },\n          \"BucketEncryption\" : {\n            \"ServerSideEncryptionConfiguration\" : [ {\n              \"ServerSideEncryptionByDefault\" : {\n                \"SSEAlgorithm\" : \"AES256\"\n              }\n            } ]\n          },\n          \"LifecycleConfiguration\" : {\n            \"Rules\" : [ {\n              \"Id\" : \"DeleteAfter90Days\",\n              \"Prefix\" : \"\",\n              \"Status\" : \"Enabled\",\n              \"ExpirationInDays\" : 90\n            } ]\n          }\n        }\n      },\n      \"AccessLogsBucketPolicy\" : {\n        \"Type\" : \"AWS::S3::BucketPolicy\",\n        \"Properties\" : {\n          \"Bucket\" : {\n            \"Ref\" : \"AccessLogsBucket\"\n          },\n          \"PolicyDocument\" : {\n            \"Statement\" : [ {\n              \"Sid\" : \"HttpsOnly\",\n              \"Action\" : \"*\",\n              \"Effect\" : \"Deny\",\n              \"Resource\" : {\n                \"Fn::Sub\" : \"arn:aws:s3:::${AccessLogsBucket}/*\"\n              },\n              \"Principal\" : \"*\",\n              \"Condition\" : {\n                \"Bool\" : {\n                  \"aws:SecureTransport\" : \"false\"\n                }\n              }\n            } ]\n          }\n        }\n      },\n      \"DiscoveryBucket\" : {\n        \"Type\" : \"AWS::S3::Bucket\",\n        \"Properties\" : {\n          \"PublicAccessBlockConfiguration\" : {\n            \"BlockPublicAcls\" : true,\n            \"BlockPublicPolicy\" : true,\n            \"IgnorePublicAcls\" : true,\n            \"RestrictPublicBuckets\" : true\n          },\n          \"LoggingConfiguration\" : {\n            \"DestinationBucketName\" : {\n              \"Ref\" : \"AccessLogsBucket\"\n            },\n            \"LogFilePrefix\" : \"discovery-bucket/\"\n          },\n          \"AccessControl\" : \"Private\",\n          \"VersioningConfiguration\" : {\n            \"Status\" : \"Enabled\"\n          },\n          \"BucketEncryption\" : {\n            \"ServerSideEncryptionConfiguration\" : [ {\n              \"ServerSideEncryptionByDefault\" : {\n                \"SSEAlgorithm\" : \"AES256\"\n              }\n            } ]\n          }\n        }\n      },\n      \"DiscoveryBucketBucketPolicy\" : {\n        \"Type\" : \"AWS::S3::BucketPolicy\",\n        \"Properties\" : {\n          \"Bucket\" : {\n            \"Ref\" : \"DiscoveryBucket\"\n          },\n          \"PolicyDocument\" : {\n            \"Statement\" : [ {\n              \"Sid\" : \"HttpsOnly\",\n              \"Action\" : \"*\",\n              \"Effect\" : \"Deny\",\n              \"Resource\" : {\n                \"Fn::Sub\" : \"arn:aws:s3:::${DiscoveryBucket}/*\"\n              },\n              \"Principal\" : \"*\",\n              \"Condition\" : {\n                \"Bool\" : {\n                  \"aws:SecureTransport\" : \"false\"\n                }\n              }\n            } ]\n          }\n        }\n      },\n      \"PerspectiveDiscoveryRoleArn\" : {\n        \"Type\" : \"AWS::SSM::Parameter\",\n        \"Properties\" : {\n          \"Name\" : \"PerspectiveDiscoveryRoleArn\",\n          \"Type\" : \"String\",\n          \"Value\" : {\n            \"Fn::GetAtt\" : [ \"PerspectiveDiscoveryRole\", \"Arn\" ]\n          }\n        }\n      },\n      \"PerspectiveCognitoUserPoolId\" : {\n        \"Type\" : \"AWS::SSM::Parameter\",\n        \"Properties\" : {\n          \"Name\" : \"PerspectiveCognitoUserPoolId\",\n          \"Type\" : \"String\",\n          \"Value\" : {\n            \"Ref\" : \"PerspectiveCognitoUserPool\"\n          }\n        }\n      },\n      \"PerspectiveCognitoIdentityPoolId\" : {\n        \"Type\" : \"AWS::SSM::Parameter\",\n        \"Properties\" : {\n          \"Name\" : \"PerspectiveCognitoIdentityPoolId\",\n          \"Type\" : \"String\",\n          \"Value\" : {\n            \"Ref\" : \"PerspectiveCognitoIdentityPool\"\n          },\n          \"Description\" : \"ID for Cognito Identity Pool\"\n        }\n      },\n      \"PerspectiveCognitoUserPoolARN\" : {\n        \"Type\" : \"AWS::SSM::Parameter\",\n        \"Properties\" : {\n          \"Name\" : \"PerspectiveCognitoUserPoolARN\",\n          \"Type\" : \"String\",\n          \"Value\" : {\n            \"Fn::GetAtt\" : [ \"PerspectiveCognitoUserPool\", \"Arn\" ]\n          }\n        }\n      },\n      \"PerspectiveWebRestAPIId\" : {\n        \"Type\" : \"AWS::SSM::Parameter\",\n        \"Properties\" : {\n          \"Name\" : \"PerspectiveWebRestAPIId\",\n          \"Type\" : \"String\",\n          \"Value\" : {\n            \"Ref\" : \"PerspectiveWebRestAPI\"\n          },\n          \"Description\" : \"API Gateway Web UI REST API ID\"\n        }\n      },\n      \"PerspectiveDrawioWebRestAPIId\" : {\n        \"Type\" : \"AWS::SSM::Parameter\",\n        \"Properties\" : {\n          \"Name\" : \"PerspectiveDrawioWebRestAPIId\",\n          \"Type\" : \"String\",\n          \"Value\" : {\n            \"Ref\" : \"PerspectiveDrawioWebRestAPI\"\n          },\n          \"Description\" : \"API Gateway Drawio Web UI REST API ID\"\n        }\n      },\n      \"PerspectiveWebRestAPIRootResourceId\" : {\n        \"Type\" : \"AWS::SSM::Parameter\",\n        \"Properties\" : {\n          \"Name\" : \"PerspectiveWebRestAPIRootResourceId\",\n          \"Type\" : \"String\",\n          \"Value\" : {\n            \"Fn::GetAtt\" : [ \"PerspectiveWebRestAPI\", \"RootResourceId\" ]\n          },\n          \"Description\" : \"API Gateway Web UI REST API Root Resource ID\"\n        }\n      },\n      \"PerspectiveDrawioWebRestAPIRootResourceId\" : {\n        \"Type\" : \"AWS::SSM::Parameter\",\n        \"Properties\" : {\n          \"Name\" : \"PerspectiveDrawioWebRestAPIRootResourceId\",\n          \"Type\" : \"String\",\n          \"Value\" : {\n            \"Fn::GetAtt\" : [ \"PerspectiveDrawioWebRestAPI\", \"RootResourceId\" ]\n          },\n          \"Description\" : \"API Gateway Web UI Drawio REST API Root Resource ID\"\n        }\n      },\n      \"PerspectiveWebRestAPIResourceId\" : {\n        \"Type\" : \"AWS::SSM::Parameter\",\n        \"Properties\" : {\n          \"Name\" : \"PerspectiveWebRestAPIResourceId\",\n          \"Type\" : \"String\",\n          \"Value\" : {\n            \"Ref\" : \"PerspectiveWebResource\"\n          },\n          \"Description\" : \"API Gateway Resource ID\"\n        }\n      },\n      \"PerspectiveDrawioWebRestAPIResourceId\" : {\n        \"Type\" : \"AWS::SSM::Parameter\",\n        \"Properties\" : {\n          \"Name\" : \"PerspectiveDrawioWebRestAPIResourceId\",\n          \"Type\" : \"String\",\n          \"Value\" : {\n            \"Ref\" : \"PerspectiveDrawioWebResource\"\n          },\n          \"Description\" : \"API Gateway Resource ID for Drawio\"\n        }\n      },\n      \"WebUIBucketName\" : {\n        \"Type\" : \"AWS::SSM::Parameter\",\n        \"Properties\" : {\n          \"Name\" : \"WebUIBucketName\",\n          \"Type\" : \"String\",\n          \"Value\" : {\n            \"Ref\" : \"WebUIBucket\"\n          },\n          \"Description\" : \"The name of the bucket where the web ui is deployed.\"\n        }\n      },\n      \"WebUIBucketRegionalDomainName\" : {\n        \"Type\" : \"AWS::SSM::Parameter\",\n        \"Properties\" : {\n          \"Name\" : \"WebUIBucketRegionalDomainName\",\n          \"Type\" : \"String\",\n          \"Value\" : {\n            \"Fn::GetAtt\" : \"WebUIBucket.RegionalDomainName\"\n          },\n          \"Description\" : \"The name of the bucket where the web ui is deployed.\"\n        }\n      },\n      \"DiscoveryCodeBucket\" : {\n        \"Type\" : \"AWS::SSM::Parameter\",\n        \"Properties\" : {\n          \"Name\" : \"DiscoveryCodeBucket\",\n          \"Type\" : \"String\",\n          \"Value\" : {\n            \"Fn::GetAtt\" : [ \"DiscoveryBucket\", \"Arn\" ]\n          },\n          \"Description\" : \"The ARN of the bucket where the meta data for the import is stored.\"\n        }\n      },\n      \"DiscoveryCodeBucketName\" : {\n        \"Type\" : \"AWS::SSM::Parameter\",\n        \"Properties\" : {\n          \"Name\" : \"DiscoveryCodeBucketName\",\n          \"Type\" : \"String\",\n          \"Value\" : {\n            \"Ref\" : \"DiscoveryBucket\"\n          },\n          \"Description\" : \"The Name of the bucket where the meta data for the import is stored.\"\n        }\n      },\n      \"ServerGremlinAPI\" : {\n        \"Type\" : \"AWS::ApiGateway::RestApi\",\n        \"Properties\" : {\n          \"Name\" : \"PerspectiveServerAPI\",\n          \"Description\" : \"The server zoomAPI\",\n          \"FailOnWarnings\" : true\n        }\n      },\n      \"ServerGremlinAPIId\" : {\n        \"Type\" : \"AWS::SSM::Parameter\",\n        \"Properties\" : {\n          \"Name\" : \"ServerGremlinAPIId\",\n          \"Type\" : \"String\",\n          \"Value\" : {\n            \"Ref\" : \"ServerGremlinAPI\"\n          },\n          \"Description\" : \"The ID of server API\"\n        }\n      },\n      \"ServerGremlinResource\" : {\n        \"Type\" : \"AWS::ApiGateway::Resource\",\n        \"Properties\" : {\n          \"RestApiId\" : {\n            \"Ref\" : \"ServerGremlinAPI\"\n          },\n          \"ParentId\" : {\n            \"Fn::GetAtt\" : [ \"ServerGremlinAPI\", \"RootResourceId\" ]\n          },\n          \"PathPart\" : \"resources\"\n        }\n      },\n      \"ServerGremlinAPIResourceId\" : {\n        \"Type\" : \"AWS::SSM::Parameter\",\n        \"Properties\" : {\n          \"Name\" : \"ServerGremlinAPIResourceId\",\n          \"Type\" : \"String\",\n          \"Value\" : {\n            \"Ref\" : \"ServerGremlinResource\"\n          },\n          \"Description\" : \"The ARN of the gremlin resource\"\n        }\n      },\n      \"ServerElasticResource\" : {\n        \"Type\" : \"AWS::ApiGateway::Resource\",\n        \"Properties\" : {\n          \"RestApiId\" : {\n            \"Ref\" : \"ServerGremlinAPI\"\n          },\n          \"ParentId\" : {\n            \"Fn::GetAtt\" : [ \"ServerGremlinAPI\", \"RootResourceId\" ]\n          },\n          \"PathPart\" : \"search\"\n        }\n      },\n      \"ServerElasticAPIResourceId\" : {\n        \"Type\" : \"AWS::SSM::Parameter\",\n        \"Properties\" : {\n          \"Name\" : \"ServerElasticAPIResourceId\",\n          \"Type\" : \"String\",\n          \"Value\" : {\n            \"Ref\" : \"ServerElasticResource\"\n          },\n          \"Description\" : \"The ARN of elastic resource\"\n        }\n      }\n    }\n  }\n}",
  "CreatedDate": "2021-07-01T21:21:05.132Z",
  "DisplayName": null,
  "DocumentFormat": {
    "Value": "JSON"
  },
  "DocumentType": {
    "Value": "CloudFormation"
  },
  "DocumentVersion": "1",
  "Name": "AWSSolutions-AWSPerspective",
  "Requires": [],
  "ReviewStatus": null,
  "Status": {
    "Value": "Active"
  },
  "StatusInformation": null,
  "VersionName": null,
  "ResponseMetadata": {
    "RequestId": "dd1e9a14-dbfe-4846-90b5-daa5832b2dbb",
    "Metadata": {}
  },
  "ContentLength": 59202,
  "HttpStatusCode": 200,
  "LoggedAt": "2022-01-02T07:12:16.1013666+00:00"
}
