{
  "AttachmentsContent": [],
  "Content": "{\n  \"schemaVersion\": \"0.3\",\n  \"description\": \"The AWSSupport-ManageRDPSettings automation document allows the user to manage common Remote Desktop Protocol (RDP) settings, such as the RDP port and Network Layer Authentication (NLA). By default, the document reads and outputs the values of the settings. IMPORTANT: Changes to the RDP settings should be carefully reviewed before running this document.\",\n  \"assumeRole\": \"{{ AutomationAssumeRole }}\",\n  \"parameters\": {\n    \"InstanceId\": {\n      \"type\": \"String\",\n      \"description\": \"(Required) The ID of the managed instance to manage the RDP settings of.\",\n      \"allowedPattern\": \"^[m]{0,1}i-[a-z0-9]{8,17}$\"\n    },\n    \"RDPPortAction\": {\n      \"type\": \"String\",\n      \"description\": \"(Required) An action to apply to the RDP port: Check, Modify.\",\n      \"default\": \"Check\",\n      \"allowedValues\": [\n        \"Check\",\n        \"Modify\"\n      ]\n    },\n    \"RDPPort\": {\n      \"type\": \"String\",\n      \"description\": \"(Optional) Specify the new RDP port. Used only when the action is set to Modify. The port number must be between 1025-65535. Note: After the port is changed, the RDP service is restarted.\",\n      \"default\": \"3389\",\n      \"allowedPattern\": \"^(102[5-9]|1[0-9][3-9][0-9]|[2-9][0-9]{3}|[1-5][0-9]{4}|6[0-5][0-5][0-3][0-5])$\"\n    },\n    \"NLASettingAction\": {\n      \"type\": \"String\",\n      \"description\": \"(Required) An action to perform on the NLA setting: Check, Enable, Disable.\",\n      \"default\": \"Check\",\n      \"allowedValues\": [\n        \"Check\",\n        \"Enable\",\n        \"Disable\"\n      ]\n    },\n    \"RemoteConnections\": {\n      \"type\": \"String\",\n      \"description\": \"(Required) An action to perform on the fDenyTSConnections setting: Check, Enable, Disable.\",\n      \"default\": \"Check\",\n      \"allowedValues\": [\n        \"Check\",\n        \"Enable\",\n        \"Disable\"\n      ]\n    },\n    \"AutomationAssumeRole\": {\n      \"type\": \"String\",\n      \"description\": \"(Optional) The IAM role for this execution. If no role is specified, AWS Systems Manager Automation will use the permissions of the user that executes this document.\",\n      \"default\": \"\"\n    }\n  },\n  \"mainSteps\": [\n    {\n      \"name\": \"assertInstanceIsWindows\",\n      \"action\": \"aws:assertAwsResourceProperty\",\n      \"onFailure\": \"Abort\",\n      \"inputs\": {\n        \"Service\": \"ec2\",\n        \"Api\": \"DescribeInstances\",\n        \"InstanceIds\": [\n          \"{{ InstanceId }}\"\n        ],\n        \"PropertySelector\": \"$.Reservations[0].Instances[0].Platform\",\n        \"DesiredValues\": [\n          \"windows\"\n        ]\n      },\n      \"isCritical\": \"true\",\n      \"nextStep\": \"assertInstanceIsManagedInstance\"\n    },\n    {\n      \"name\": \"assertInstanceIsManagedInstance\",\n      \"action\": \"aws:assertAwsResourceProperty\",\n      \"onFailure\": \"Abort\",\n      \"inputs\": {\n        \"Service\": \"ssm\",\n        \"Api\": \"DescribeInstanceInformation\",\n        \"InstanceInformationFilterList\": [\n          {\n            \"key\": \"InstanceIds\",\n            \"valueSet\": [\n              \"{{ InstanceId }}\"\n            ]\n          }\n        ],\n        \"PropertySelector\": \"$.InstanceInformationList[0].PingStatus\",\n        \"DesiredValues\": [\n          \"Online\"\n        ]\n      },\n      \"isCritical\": \"true\",\n      \"nextStep\": \"manageRDPSettings\"\n    },\n    {\n      \"name\": \"manageRDPSettings\",\n      \"action\": \"aws:runCommand\",\n      \"onFailure\": \"Abort\",\n      \"inputs\": {\n        \"DocumentName\": \"AWS-RunPowerShellScript\",\n        \"InstanceIds\": [\n          \"{{ InstanceId }}\"\n        ],\n        \"Parameters\": {\n          \"commands\": [\n            \"Function Get-RDPPort {\",\n            \"\",\n            \"    $registryKey = \\\"HKLM:\\\\SYSTEM\\\\CurrentControlSet\\\\Control\\\\Termin*Server\\\\WinStations\\\\RDP*CP\\\\\\\"\",\n            \"    $checkRdpPath = (Test-Path -Path $registryKey)\",\n            \"\",\n            \"    if ($checkRdpPath) {\",\n            \"\",\n            \"        $checkRdpPort = (Get-ItemProperty -Path $registryKey -Name PortNumber -ErrorAction SilentlyContinue).portnumber\",\n            \"\",\n            \"        if ($null -ne $checkRdpPort) {\",\n            \"\",\n            \"            return $checkRdpPort\",\n            \"            \",\n            \"        }\",\n            \"        else {\",\n            \"\",\n            \"            throw \\\"PortNumber property does not exist.\\\"\",\n            \"\",\n            \"        }\",\n            \"\",\n            \"    }\",\n            \"    else {\",\n            \"\",\n            \"        throw \\\"Registry subkey path does not exist.\\\"\",\n            \"\",\n            \"    }\",\n            \"\",\n            \"}\",\n            \"\",\n            \"Function Set-RDPPort {\",\n            \"    Param (\",\n            \"        [Parameter(Mandatory = $true)]\",\n            \"        [ValidateRange(1025, 65535)]\",\n            \"        [String]$Port\",\n            \"    )\",\n            \"\",\n            \"    try {\",\n            \"        \",\n            \"        if ((Get-RDPPort) -eq $Port) {\",\n            \"\",\n            \"            Write-Host \\\"RDP Port is already set to $Port.\\\"\",\n            \"\",\n            \"        }\",\n            \"        else {     \",\n            \"\",\n            \"            #Check to see if there is anything listening on this port before changing the port.\",\n            \"            $checkListeningPort = & \\\"${env:SYSTEMROOT}\\\\system32\\\\netstat.exe\\\" -nab | Select-String -Pattern \\\":$Port \\\" -Context 1\",\n            \"\",\n            \"            if (-not $checkListeningPort) {\",\n            \"\",\n            \"                $registryKey = \\\"HKLM:\\\\SYSTEM\\\\CurrentControlSet\\\\Control\\\\Termin*Server\\\\WinStations\\\\RDP*CP\\\\\\\"\",\n            \"                Set-ItemProperty -Path $registryKey -Name PortNumber -Value $Port -ErrorAction Stop\",\n            \"                Restart-Service -Name TermService -Force -ErrorAction SilentlyContinue\",\n            \"                Write-Host \\\"RDP port set to $(Get-RDPPort). Make sure your AWS Security Group and Windows firewall allow traffic on the new port. To learn about Amazon EC2 Security Group, see https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-network-security.html.\\\" \",\n            \"\",\n            \"            }  \",\n            \"            else {\",\n            \"\",\n            \"                throw \\\"Unable to change RDP port to $Port. Port is already in use.\\\"\",\n            \"\",\n            \"            }\",\n            \"            \",\n            \"        }\",\n            \"\",\n            \"    }\",\n            \"    catch {\",\n            \"\",\n            \"        throw \\\"$($_.Exception.Message)\\\"\",\n            \"\",\n            \"    }\",\n            \"\",\n            \"}\",\n            \"\",\n            \"Function Get-NLASetting {\",\n            \"\",\n            \"    #Get NLA setting status. The output of the WMI command is 0 (Disabled) or 1 (Enabled).\",\n            \"    $nlaStatus = (Get-WmiObject -class Win32_TSGeneralSetting -Namespace root\\\\cimv2\\\\terminalservices -Filter \\\"TerminalName='RDP-tcp'\\\").UserAuthenticationRequired\",\n            \"\",\n            \"    if ($nlaStatus -eq \\\"0\\\") {\",\n            \"\",\n            \"        return \\\"Network Level Authentication is disabled on this machine.\\\"\",\n            \"\",\n            \"    }\",\n            \"    else {\",\n            \"\",\n            \"        return \\\"Network Level Authentication is enabled on this machine.\\\"\",\n            \"\",\n            \"    }\",\n            \"    \",\n            \"}\",\n            \"\",\n            \"Function Set-NLASetting {\",\n            \"    Param (\",\n            \"        [Parameter(Mandatory = $true)]\",\n            \"        [ValidateSet(\\\"Enable\\\", \\\"Disable\\\")] \",\n            \"        [String]$Action\",\n            \"    )\",\n            \"\",\n            \"    if ($Action -eq \\\"Enable\\\") {\",\n            \"        \",\n            \"        #SetUserAuthenticationRequired(1) (Enabled)\",\n            \"        (Get-WmiObject -class Win32_TSGeneralSetting -Namespace root\\\\cimv2\\\\terminalservices -Filter \\\"TerminalName='RDP-tcp'\\\").SetUserAuthenticationRequired(1) | Out-Null\",\n            \"        Write-Host \\\"Network Level Authentication enabled.\\\"\",\n            \"\",\n            \"    }\",\n            \"    else {\",\n            \"\",\n            \"        #SetUserAuthenticationRequired(0) (Disabled)\",\n            \"        (Get-WmiObject -class Win32_TSGeneralSetting -Namespace root\\\\cimv2\\\\terminalservices -Filter \\\"TerminalName='RDP-tcp'\\\").SetUserAuthenticationRequired(0) | Out-Null\",\n            \"        Write-Host \\\"Network Level Authentication disabled.\\\"\",\n            \"\",\n            \"    }\",\n            \"   \",\n            \"}\",\n            \"\",\n            \"Function Get-RemoteConnectionsSetting{\",\n            \"\",\n            \"    #Get the current status of the fDenyTSConnections Registry Property from the registry location HKLM\\\\SYSTEM\\\\CurrentControlSet\\\\Control\\\\Terminal Server\",\n            \"    $registryKey = \\\"HKLM:\\\\SYSTEM\\\\CurrentControlSet\\\\Control\\\\Termin*Server\\\\\\\"\",\n            \"    $checkRemoteConnectionsPath = (Test-Path -Path $registryKey)\",\n            \"\",\n            \"    if ($checkRemoteConnectionsPath) {\",\n            \"\",\n            \"        $checkRemoteConnections = (Get-ItemProperty -Path $registryKey -Name fDenyTSConnections -ErrorAction SilentlyContinue).fDenyTSConnections\",\n            \"\",\n            \"        if ($null -ne $checkRemoteConnections) {\",\n            \"\",\n            \"            if ($checkRemoteConnections -eq \\\"0\\\") {\",\n            \"\",\n            \"                return \\\"Remote Desktop connections are enabled on this machine.\\\"\",\n            \"        \",\n            \"            }\",\n            \"            else {\",\n            \"        \",\n            \"                return \\\"Remote Desktop connections are disabled on this machine.\\\"\",\n            \"        \",\n            \"            }\",\n            \"            \",\n            \"        }\",\n            \"        else {\",\n            \"\",\n            \"            throw \\\"fDenyTSConnections property does not exist.\\\"\",\n            \"\",\n            \"        }\",\n            \"\",\n            \"    }\",\n            \"    else {\",\n            \"\",\n            \"        throw \\\"Registry subkey path does not exist.\\\"\",\n            \"    }\",\n            \"\",\n            \"}\",\n            \"\",\n            \"Function Set-RemoteConnectionsSetting {\",\n            \"    Param (\",\n            \"        [Parameter(Mandatory = $true)]\",\n            \"        [ValidateSet(\\\"Enable\\\", \\\"Disable\\\")] \",\n            \"        [String]$Value\",\n            \"    )\",\n            \"\",\n            \"    try {\",\n            \"\",\n            \"        #Set the desired status of the fDenyTSConnections Registry Property from the registry location HKLM\\\\SYSTEM\\\\CurrentControlSet\\\\Control\\\\Terminal Server\",\n            \"        $registryKey = \\\"HKLM:\\\\SYSTEM\\\\CurrentControlSet\\\\Control\\\\Termin*Server\\\\\\\"\",\n            \"        \",\n            \"        if ($Value -eq \\\"Enable\\\") {\",\n            \"\",\n            \"            #fDenyTSConnections set to 0 (Enabled)\",\n            \"            Set-ItemProperty -Path $registryKey -Name fDenyTSConnections -Value 0 -ErrorAction Stop\",\n            \"            Write-Host \\\"Remote Desktop connections enabled.\\\"\",\n            \"\",\n            \"        }\",\n            \"        else {\",\n            \"\",\n            \"            #fDenyTSConnections set to 1 (Disabled)\",\n            \"            Set-ItemProperty -Path $registryKey -Name fDenyTSConnections -Value 1 -ErrorAction Stop\",\n            \"            Write-Host \\\"Remote Desktop connections disabled.\\\"\",\n            \"\",\n            \"        }\",\n            \"            \",\n            \"    }\",\n            \"    catch {\",\n            \"\",\n            \"        throw \\\"Error accessing $registryKey : $($_.Exception.Message)\\\"\",\n            \"\",\n            \"    }\",\n            \"\",\n            \"}\",\n            \"\",\n            \"try {\",\n            \"\",\n            \"    $rdpPortSettingAction = \\\"{{ RDPPortAction  }}\\\"\",\n            \"    $rdpPort = \\\"{{ RDPPort }}\\\"\",\n            \"    $nlaSettingAction = \\\"{{ NLASettingAction }}\\\"\",\n            \"    $remoteConnectionsAction = \\\"{{ RemoteConnections }}\\\"\",\n            \"\",\n            \"    if ($rdpPortSettingAction -eq \\\"Check\\\") {\",\n            \"        \",\n            \"        Write-Host \\\"Current RDP Port: $(Get-RDPPort).\\\"\",\n            \"\",\n            \"    }\",\n            \"    else {\",\n            \"      \",\n            \"        Set-RDPPort -Port $rdpPort\",\n            \"\",\n            \"    }\",\n            \"\",\n            \"    if ($nlaSettingAction -eq \\\"Check\\\") {\",\n            \"        \",\n            \"        Get-NLASetting\",\n            \"\",\n            \"    }\",\n            \"    else {\",\n            \"\",\n            \"        Set-NLASetting -Action $nlaSettingAction\",\n            \"\",\n            \"    }\",\n            \"\",\n            \"    if ($remoteConnectionsAction -eq \\\"Check\\\") {\",\n            \"\",\n            \"        Get-RemoteConnectionsSetting\",\n            \"        \",\n            \"    }\",\n            \"    else {\",\n            \"\",\n            \"        Set-RemoteConnectionsSetting -Value $remoteConnectionsAction\",\n            \"\",\n            \"    }\",\n            \"\",\n            \"}\",\n            \"catch {\",\n            \"\",\n            \"    Write-Host $_.Exception.Message\",\n            \"    Exit 1   \",\n            \"\",\n            \"}\"\n          ]\n        }\n      },\n      \"isCritical\": \"true\",\n      \"isEnd\": \"true\"\n    }\n  ],\n  \"outputs\": [\n    \"manageRDPSettings.Output\"\n  ]\n}",
  "CreatedDate": "2018-10-09T23:16:46.56Z",
  "DisplayName": null,
  "DocumentFormat": {
    "Value": "JSON"
  },
  "DocumentType": {
    "Value": "Automation"
  },
  "DocumentVersion": "2",
  "Name": "AWSSupport-ManageRDPSettings",
  "Requires": [],
  "ReviewStatus": null,
  "Status": {
    "Value": "Active"
  },
  "StatusInformation": null,
  "VersionName": null,
  "ResponseMetadata": {
    "RequestId": "5b6fdbd5-95ec-4426-96b4-e6f00cbcf976",
    "Metadata": {},
    "ChecksumAlgorithm": 0,
    "ChecksumValidationStatus": 0
  },
  "ContentLength": 14926,
  "HttpStatusCode": 200,
  "LoggedAt": "2022-03-13T07:12:12.1467188+00:00"
}
