{
  "AttachmentsContent": [],
  "Content": "{\n  \"description\" : \"### Document name - AWSConfigRemediation-EnableCloudFrontOriginAccessIdentity\\n\\n## What does this document do?\\nThis document configures the origin access identity on a given Amazon CloudFront distribution with S3 Origins type using the [UpdateDistribution](https://docs.aws.amazon.com/cloudfront/latest/APIReference/API_UpdateDistribution.html) API.\\nNote: This document will enable the same CloudFront Origin Access Identity for all Origins of S3 Origin Type without origin access identity for the given Amazon CloudFront Distribution. \\n      This document does not automatically grant read permission to the origin access identity, so Amazon CloudFront can access objects in your Amazon S3 bucket. You need to update your Amazon S3 bucket permissions to enable access.\\n\\n## Input Parameters\\n* CloudFrontDistributionId: (Required) The Amazon CloudFront distribution's identifier.\\n* OriginAccessIdentityId: (Required) The Amazon CloudFront origin access identity to associate with the origin.\\n* AutomationAssumeRole: (Required) The ARN of the role that allows Automation to perform the actions on your behalf.\\n\\n## Output Parameters\\n* UpdateDistributionAndVerify.Output: The standard HTTP response from the UpdateDistribution API.\",\n  \"schemaVersion\" : \"0.3\",\n  \"assumeRole\" : \"{{ AutomationAssumeRole }}\",\n  \"outputs\" : [ \"UpdateDistributionAndVerify.Output\" ],\n  \"parameters\" : {\n    \"CloudFrontDistributionId\" : {\n      \"type\" : \"String\",\n      \"description\" : \"(Required) The Amazon CloudFront distribution's identifier.\",\n      \"allowedPattern\" : \"^[A-Z0-9]+$\"\n    },\n    \"OriginAccessIdentityId\" : {\n      \"type\" : \"String\",\n      \"description\" : \"(Required) The Amazon CloudFront origin access identity to associate with the origin.\",\n      \"allowedPattern\" : \"^[A-Z0-9]+$\"\n    },\n    \"AutomationAssumeRole\" : {\n      \"type\" : \"String\",\n      \"description\" : \"(Required) The ARN of the role that allows Automation to perform the actions on your behalf.\",\n      \"allowedPattern\" : \"^arn:(aws[a-zA-Z-]*)?:iam::\\\\d{12}:role/[\\\\w+=,.@-]+\"\n    }\n  },\n  \"mainSteps\" : [ {\n    \"name\" : \"UpdateDistributionAndVerify\",\n    \"action\" : \"aws:executeScript\",\n    \"description\" : \"## UpdateDistributionAndVerify\\nUpdates the Amazon CloudFront distribution with S3 Origins type and associate these origins with the origin access identity and verifies it's association.\\n## outputs\\n* Output: The standard HTTP response from the UpdateDistribution API.\\n\",\n    \"isEnd\" : false,\n    \"timeoutSeconds\" : 600,\n    \"inputs\" : {\n      \"Runtime\" : \"python3.7\",\n      \"Handler\" : \"handler\",\n      \"InputPayload\" : {\n        \"cloudfront_distribution\" : \"{{ CloudFrontDistributionId }}\",\n        \"origin_access_identity\" : \"{{ OriginAccessIdentityId }}\"\n      },\n      \"Script\" : \"import boto3\\ndef is_cloudfront_origin_access_identity_associated(cloudfront_client,cloudfront_distribution):\\n    response = cloudfront_client.get_distribution_config(Id=cloudfront_distribution)\\n    for counter in range(response[\\\"DistributionConfig\\\"][\\\"Origins\\\"][\\\"Quantity\\\"]):\\n        if (\\\"S3OriginConfig\\\" in response[\\\"DistributionConfig\\\"][\\\"Origins\\\"][\\\"Items\\\"][counter] and response[\\\"DistributionConfig\\\"][\\\"Origins\\\"][\\\"Items\\\"][counter][\\\"S3OriginConfig\\\"][\\\"OriginAccessIdentity\\\"] == \\\"\\\"):\\n            error = f\\\"VERIFICATION FAILED. ORIGIN ACCESS IDENTITY FOR AMAZON CLOUDFRONT DISTRIBUTION {cloudfront_distribution} IS NOT SET.\\\"\\n            raise Exception(error)\\n    return \\\"Verification of 'EnableCloudFrontOriginAccessIdentity' is successful.\\\"\\n\\ndef handler(event, context):\\n    cloudfront_client = boto3.client(\\\"cloudfront\\\")\\n    origin_access_identity = \\\"origin-access-identity/cloudfront/\\\" + event[\\\"origin_access_identity\\\"]\\n    response = cloudfront_client.get_distribution_config(Id=event[\\\"cloudfront_distribution\\\"])\\n    s3_origin = False\\n    for counter in range(response[\\\"DistributionConfig\\\"][\\\"Origins\\\"][\\\"Quantity\\\"]):\\n        if (\\\"S3OriginConfig\\\" in response[\\\"DistributionConfig\\\"][\\\"Origins\\\"][\\\"Items\\\"][counter]):\\n            s3_origin = True\\n            if (response[\\\"DistributionConfig\\\"][\\\"Origins\\\"][\\\"Items\\\"][counter][\\\"S3OriginConfig\\\"][\\\"OriginAccessIdentity\\\"] == \\\"\\\"):\\n                response[\\\"DistributionConfig\\\"][\\\"Origins\\\"][\\\"Items\\\"][counter][\\\"S3OriginConfig\\\"][\\\"OriginAccessIdentity\\\"] = origin_access_identity\\n    if (s3_origin == False):\\n        error = f\\\"ORIGIN ACCESS IDENTITY FOR AMAZON CLOUDFRONT DISTRIBUTION {event['cloudfront_distribution']} WITH NO S3 ORIGIN TYPE CAN NOT BE SET.\\\"\\n        raise Exception(error)\\n    update_response = cloudfront_client.update_distribution(\\n        DistributionConfig=response[\\\"DistributionConfig\\\"],\\n        Id=event[\\\"cloudfront_distribution\\\"],\\n        IfMatch=response[\\\"ETag\\\"]\\n    )\\n    output = is_cloudfront_origin_access_identity_associated(cloudfront_client,event[\\\"cloudfront_distribution\\\"])\\n    return { \\n        \\\"Output\\\": {\\n            \\\"Message\\\": output,\\n            \\\"HTTPResponse\\\":  update_response[\\\"ResponseMetadata\\\"] \\n        }\\n    }\"\n    },\n    \"outputs\" : [ {\n      \"Name\" : \"Output\",\n      \"Type\" : \"StringMap\",\n      \"Selector\" : \"$.Payload.Output\"\n    } ]\n  } ]\n}",
  "CreatedDate": "2020-12-17T16:03:46.948Z",
  "DisplayName": null,
  "DocumentFormat": {
    "Value": "JSON"
  },
  "DocumentType": {
    "Value": "Automation"
  },
  "DocumentVersion": "1",
  "Name": "AWSConfigRemediation-EnableCloudFrontOriginAccessIdentity",
  "Requires": [],
  "ReviewStatus": null,
  "Status": {
    "Value": "Active"
  },
  "StatusInformation": null,
  "VersionName": null,
  "ResponseMetadata": {
    "RequestId": "c5e00b76-5630-45ab-aeb1-e915fe439755",
    "Metadata": {},
    "ChecksumAlgorithm": 0,
    "ChecksumValidationStatus": 0
  },
  "ContentLength": 5836,
  "HttpStatusCode": 200,
  "LoggedAt": "2022-07-05T07:12:25.7054195+00:00"
}
