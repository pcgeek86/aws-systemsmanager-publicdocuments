{
  "AttachmentsContent": [],
  "Content": "{\n  \"description\" : \"SOP By AWS ResilienceHub. Manually force an ASG to scale out, increase the number of instances\",\n  \"schemaVersion\" : \"0.3\",\n  \"assumeRole\" : \"{{ AutomationAssumeRole }}\",\n  \"parameters\" : {\n    \"Dryrun\" : {\n      \"type\" : \"Boolean\",\n      \"default\" : true,\n      \"description\" : \"(Optional) Dryrun indicates a testing run, changes will be rolled back.\"\n    },\n    \"AutomationAssumeRole\" : {\n      \"type\" : \"String\",\n      \"description\" : \"(Required) The ARN of the role that allows Automation to perform the actions on your behalf.\"\n    },\n    \"AutoScalingGroupName\" : {\n      \"type\" : \"String\",\n      \"description\" : \"(Required) The Name of the ASG to scaleOut\"\n    }\n  },\n  \"outputs\" : [ \"OutputRecoveryTime.RecoveryTime\" ],\n  \"mainSteps\" : [ {\n    \"name\" : \"RecordStartTime\",\n    \"action\" : \"aws:executeScript\",\n    \"inputs\" : {\n      \"Runtime\" : \"python3.6\",\n      \"Handler\" : \"script_handler\",\n      \"Script\" : \"def script_handler(events, context):\\n  from datetime import datetime, timezone\\n  return datetime.now(timezone.utc).isoformat()\"\n    },\n    \"outputs\" : [ {\n      \"Name\" : \"StartTime\",\n      \"Selector\" : \"$.Payload\",\n      \"Type\" : \"String\"\n    } ]\n  }, {\n    \"name\" : \"FetchExistingCapacity\",\n    \"action\" : \"aws:executeAwsApi\",\n    \"inputs\" : {\n      \"Service\" : \"autoscaling\",\n      \"Api\" : \"DescribeAutoScalingGroups\",\n      \"AutoScalingGroupNames\" : [ \"{{AutoScalingGroupName}}\" ]\n    },\n    \"outputs\" : [ {\n      \"Name\" : \"CurrentDesiredCapacity\",\n      \"Selector\" : \"$.AutoScalingGroups[0].DesiredCapacity\",\n      \"Type\" : \"Integer\"\n    }, {\n      \"Name\" : \"CurrentMaxSize\",\n      \"Selector\" : \"$.AutoScalingGroups[0].MaxSize\",\n      \"Type\" : \"Integer\"\n    } ]\n  }, {\n    \"name\" : \"CalculateNewCapacity\",\n    \"action\" : \"aws:executeScript\",\n    \"inputs\" : {\n      \"Runtime\" : \"python3.6\",\n      \"Handler\" : \"script_handler\",\n      \"InputPayload\" : {\n        \"CurrentDesiredCapacity\" : \"{{FetchExistingCapacity.CurrentDesiredCapacity}}\",\n        \"CurrentMaxSize\" : \"{{FetchExistingCapacity.CurrentMaxSize}}\"\n      },\n      \"Script\" : \"import math\\ndef script_handler(events, context):\\n  return {\\n      'NewDesiredCapacity': math.ceil(events['CurrentDesiredCapacity'] * 1.5),\\n      'NewMaxSize': max(math.ceil(events['CurrentDesiredCapacity'] * 1.5), events['CurrentMaxSize'])\\n  }\"\n    },\n    \"outputs\" : [ {\n      \"Name\" : \"NewDesiredCapacity\",\n      \"Selector\" : \"$.Payload.NewDesiredCapacity\",\n      \"Type\" : \"Integer\"\n    }, {\n      \"Name\" : \"NewMaxSize\",\n      \"Selector\" : \"$.Payload.NewMaxSize\",\n      \"Type\" : \"Integer\"\n    } ]\n  }, {\n    \"name\" : \"UpdateCapacity\",\n    \"action\" : \"aws:executeAwsApi\",\n    \"description\" : \"Update Capacity on an Asg\",\n    \"inputs\" : {\n      \"Service\" : \"autoscaling\",\n      \"Api\" : \"UpdateAutoScalingGroup\",\n      \"AutoScalingGroupName\" : \"{{AutoScalingGroupName}}\",\n      \"DesiredCapacity\" : \"{{CalculateNewCapacity.NewDesiredCapacity}}\",\n      \"MaxSize\" : \"{{CalculateNewCapacity.NewMaxSize}}\"\n    }\n  }, {\n    \"name\" : \"WaitForScaleOut\",\n    \"action\" : \"aws:executeScript\",\n    \"inputs\" : {\n      \"Runtime\" : \"python3.6\",\n      \"Handler\" : \"wait_for_in_service\",\n      \"InputPayload\" : {\n        \"AutoScalingGroupName\" : \"{{AutoScalingGroupName}}\",\n        \"NewDesiredCapacity\" : \"{{CalculateNewCapacity.NewDesiredCapacity}}\"\n      },\n      \"Script\" : \"import logging\\nimport random\\nimport time\\nfrom math import ceil\\n\\nimport boto3\\nfrom botocore.config import Config\\n\\nlogger = logging.getLogger(__name__)\\nlogger.setLevel(logging.INFO)\\n\\n\\n\\ndef wait_for_in_service(events, context):\\n    client = boto3.client('autoscaling')\\n    while (True):\\n        res = client.describe_auto_scaling_groups(AutoScalingGroupNames=[events['AutoScalingGroupName']])\\n        instances = res['AutoScalingGroups'][0]['Instances']\\n        num_in_service = sum(instance['LifecycleState'] == 'InService' for instance in instances)\\n        if (num_in_service >= events['NewDesiredCapacity']):\\n            return True\\n        time.sleep(15)\"\n    },\n    \"description\" : \"Wait for Asg to update capacity\",\n    \"timeoutSeconds\" : 1200,\n    \"maxAttempts\" : 4\n  }, {\n    \"name\" : \"OutputRecoveryTime\",\n    \"action\" : \"aws:executeScript\",\n    \"inputs\" : {\n      \"Runtime\" : \"python3.6\",\n      \"Handler\" : \"script_handler\",\n      \"Script\" : \"def script_handler(events, context):\\n  from datetime import datetime, timezone\\n  from dateutil import parser\\n  return (datetime.now(timezone.utc) - parser.parse(events['StartTime'])).seconds\",\n      \"InputPayload\" : {\n        \"StartTime\" : \"{{RecordStartTime.StartTime}}\"\n      }\n    },\n    \"outputs\" : [ {\n      \"Name\" : \"RecoveryTime\",\n      \"Selector\" : \"$.Payload\",\n      \"Type\" : \"Integer\"\n    } ]\n  }, {\n    \"name\" : \"DryrunBranch\",\n    \"action\" : \"aws:branch\",\n    \"inputs\" : {\n      \"Choices\" : [ {\n        \"NextStep\" : \"EmptyStepForEnd\",\n        \"Variable\" : \"{{Dryrun}}\",\n        \"BooleanEquals\" : false\n      }, {\n        \"NextStep\" : \"RollBackCapacityChange\",\n        \"Variable\" : \"{{Dryrun}}\",\n        \"BooleanEquals\" : true\n      } ]\n    }\n  }, {\n    \"name\" : \"RollBackCapacityChange\",\n    \"action\" : \"aws:executeAwsApi\",\n    \"maxAttempts\" : 3,\n    \"description\" : \"Rollback Capacity on an Asg\",\n    \"inputs\" : {\n      \"Service\" : \"autoscaling\",\n      \"Api\" : \"UpdateAutoScalingGroup\",\n      \"AutoScalingGroupName\" : \"{{AutoScalingGroupName}}\",\n      \"DesiredCapacity\" : \"{{FetchExistingCapacity.CurrentDesiredCapacity}}\",\n      \"MaxSize\" : \"{{FetchExistingCapacity.CurrentMaxSize}}\"\n    }\n  }, {\n    \"name\" : \"EmptyStepForEnd\",\n    \"action\" : \"aws:sleep\",\n    \"isEnd\" : true,\n    \"inputs\" : {\n      \"Duration\" : \"PT1S\"\n    }\n  } ]\n}",
  "CreatedDate": "2022-01-18T14:35:13.164Z",
  "DisplayName": null,
  "DocumentFormat": {
    "Value": "JSON"
  },
  "DocumentType": {
    "Value": "Automation"
  },
  "DocumentVersion": "2",
  "Name": "AWSResilienceHub-ScaleOutAsgSOP_2020-07-01",
  "Requires": [],
  "ReviewStatus": null,
  "Status": {
    "Value": "Active"
  },
  "StatusInformation": null,
  "VersionName": null,
  "ResponseMetadata": {
    "RequestId": "e36279d9-aab8-4b9b-9d3b-8a485ccb6372",
    "Metadata": {}
  },
  "ContentLength": 6427,
  "HttpStatusCode": 200,
  "LoggedAt": "2022-02-21T07:12:09.950197+00:00"
}
